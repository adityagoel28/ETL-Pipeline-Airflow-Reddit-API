,subreddit,title,selftext,upvote_ratio,ups,downs,score,created_utc,id,kind
0,Python,Gimme projects,Hi I'm new in programming ‚ò∫Ô∏è  I chose python as my first language and I'm trying make some projects buuut I'm all by my self and I don't know if this is the best way of do. So here I'm to ask if do you have any project or projects beginner's friendly that I can be part.,0.5,0,0,0,2023-04-18T22:23:09Z,12qvymi,t3
1,Python,"Learning Python question: ""Print returns a 'non data type'""","Hi, 

As I am new at python and studying for PCEP I;m still learnig about the data types. I've got a course from Udemy called ""Python for absolute beginners"" which is helpful, or was, until the kind of casual remark by the lecturer: 

*""The last four methods we went over, .remove(), .insert(), .sort() and .append() all return* ***the non data type just like print()****""*

What?

So I've been going back and forth in the lectures, my notes and the www, but i still don't understand what it means. :(

Can someone explain it to me like i'm an idiot? Cause that is kind of how I  feel right now.. It's even called for ABSOLUTE BEGINNERS, sjeezzz",1.0,1,0,1,2023-04-18T22:18:40Z,12qvr3b,t3
2,Python,Langcorn: ‚õìÔ∏è Serving LangChain apps automagically with FastApi,,1.0,2,0,2,2023-04-18T21:46:17Z,12qu75l,t3
3,Python,Best Practice for Using Python on Linux (Ubuntu or Mint),So I have usually just aliased python3 to python in Linux (I use Mint) and never really run into any issues. Was wondering though what others do. Is it best practice to use virtual environments like pyenv or anaconda? How do you all develop with Python on Linux?,0.67,2,0,2,2023-04-18T21:31:28Z,12qtfwd,t3
4,Python,Python's pathlib Module: Taming the File System ‚Äì Real Python,,0.87,21,0,21,2023-04-18T19:34:58Z,12qo5ji,t3
5,Python,"I‚Äôm developing a programming game where you use Python to automate all kinds of machines, robots, drones and more and solve exciting bite-sized coding challenges. (playtesting now)","Earlier this year, I first announced JOY OF PROGRAMMING here on r/python and it was met with an overwhelmingly positive reception. Your interest and support really mean a lot! In case you missed it, the game is all about using Python to solve challenging tasks in realistic, physically simulated 3D environments. It covers a wide range of topics, and hopefully presents interesting challenges and fun for all skill levels.

If you are interested in the game, you can find a lot more information on the Steam page.

[https://store.steampowered.com/app/2216770/JOY\_OF\_PROGRAMMING\_\_Software\_Engineering\_Simulator](https://store.steampowered.com/app/2216770/JOY_OF_PROGRAMMING__Software_Engineering_Simulator)

**Today**, I‚Äôd also like to invite you all to **finally try an early version of the game**! This alpha version focuses mainly on the beginner tutorials (6 at the moment) with one advanced level. Your feedback how difficult, engaging and ultimately fun the game and these levels are would be invaluable. I‚Äôm running this playtest on a newly created Discord server to make providing feedback and fixing bugs as seamless as possible. Please find the download link and all further details on Discord.

[https://discord.com/invite/2ZrdzkNeBP](https://discord.com/invite/2ZrdzkNeBP)  

Happy Coding!",0.9,82,0,82,2023-04-18T18:55:17Z,12qn0ku,t3
6,Python,Kangas V2: Explore multimedia data,"Project: [https://github.com/comet-ml/kangas](https://github.com/comet-ml/kangas) 

Demo: [https://kangas.comet.com/](https://kangas.comet.com/)

&amp;#x200B;

We've just released version 2 of Kangas, our open source platform for exploring large, multimedia datasets. At a high-level, Kangas provides:

* A Python interface for constructing large tables of multimedia data (DataGrids), which should be very familiar to any Pandas users.
* A backend built on SQLLite and Flask for storing/querying/serving DataGrids.
* A UI built on React Server Components with Next 13 that enables fast, interactive exploration of your data

https://i.redd.it/ldpbbkb70nua1.gif

Kangas provides out of the box support for complex querying operations, as well as a variety of computer vision functionality (bounding boxes, labels, annotations, etc.) Additionally, the UI is customizable‚Äîyou can resize, filter, and reorder columns as you like.

You can run Kangas from within a notebook, as a local app via the Kangas CLI, or even deploy it as a standalone web application (as we've done at [https://kangas.comet.com](https://kangas.comet.com))

Finally, I want to include a thank you here. About 5 months ago, I shared Kangas' initial V1 release here in r/Python, and several of you made your way over to the repo to share feedback and support. This was massively helpful for us. It helped us figure out what to prioritize, and opened our eyes to new features we hadn't considered. Plus, the emotional support is always appreciated :) So, thanks!

If you have any questions about Kangas, please feel free to ask away either here or on the repo. I'm happy to answer everything I can.",0.9,54,0,54,2023-04-18T18:06:26Z,12qlmup,t3
7,Python,"I Created Cfddns, a Python script to Dynamically Update Records in Cloudflare","I couldn't find a decent tool to dynamically update IP address in my Cloudflare account, so I created one for me. Thought share with others.

It can be run directly, as a scheduled task, and as a docker container. Only API token and target domain is required.

https://preview.redd.it/di9c3qitkmua1.png?width=662&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=a9edaffa93775d2e522e8b1bd8640549bb5494fd

GitHub repo here:  [Suleman-Elahi/Cfddns](https://github.com/Suleman-Elahi/Cfddns)",0.7,12,0,12,2023-04-18T16:36:18Z,12qjlzt,t3
8,Python,Out of curiosity: what is the python project structure you usually go gor?,,0.86,50,0,50,2023-04-18T16:03:14Z,12qit60,t3
9,Python,"For stock trading/finance, which kind of Python library are you looking for and can‚Äôt find?"," Note : if you have time, you can put your not perfect but tentative solution url or its name",0.71,30,0,30,2023-04-18T13:26:18Z,12qfd3z,t3
10,Python,Collaborate on Python Projects with the First Multiplayer Desktop in the Browser,"Hey guys, please check out our project Aither, a desktop built for sharing and accessible in the browser. With our product, it is extremely easy to start working together in real-time with friends on python projects whenever you need. As open source enthusiast, we relied heavily on several open source projects to make this (swayWM, wayvnc, novnc, etc) and want to make it available to anyone that values pair programming and loves python as much as us.

&amp;#x200B;

[https://github.com/enoki-inc/aither](https://github.com/enoki-inc/aither)

&amp;#x200B;

Please give it a star! And feel free to reach out to us at [founders@enoki.so](mailto:founders@enoki.so) if you're open to contributing. Let's get this the visibility and traction it deserves!",0.79,10,0,10,2023-04-18T10:25:27Z,12qb2e8,t3
11,Python,A Python script that replies to Y/N questions,,0.33,0,0,0,2023-04-18T10:00:11Z,12qaejw,t3
12,Python,[Resource] Create Your Own Pok√©mon Battle Bot with Reinforcement Learning with Cloud Tools,"Attention Pok√©mon researchers and data scientists!

I've created a suite of tools to help you develop your own Pok√©mon battle bots using Reinforcement Learning and Data Science techniques. These bots can be used in Pok√©mon Showdown and Pok√©mon Sword and Shield! 

The Pok√©mon Sword and Shield version will be released when more stable. 

üöÄ Quickstart links:

‚ú® Youtube Tutorial: [https://youtu.be/NGmTR7paC5Q](https://youtu.be/NGmTR7paC5Q)

‚ú® GitHub: [https://github.com/supremepokebotking/pokemonshowdown-rl-trainer-deepqn-f2p](https://github.com/supremepokebotking/pokemonshowdown-rl-trainer-deepqn-f2p)

‚ú® Google Colab: [https://colab.research.google.com/drive/1UtS4OITut-goa9L3nZn4IepgxhybkUPJ?usp=sharing](https://colab.research.google.com/drive/1UtS4OITut-goa9L3nZn4IepgxhybkUPJ?usp=sharing)

Our cloud-based tools eliminate the need for any complicated software installations. All you need is a web browser to get started. Dive into the fascinating world of Pok√©mon battles and push the limits of AI in this fun and engaging environment.

Join our community and share your progress!",0.69,8,0,8,2023-04-18T08:40:15Z,12q878b,t3
13,Python,Tuesday Daily Thread: Advanced questions,"Have some burning questions on advanced Python topics? Use this thread to ask more advanced questions related to Python.

**If your question is a beginner question we hold a beginner Daily Thread tomorrow (Wednesday) where you can ask any question! We may remove questions here and ask you to resubmit tomorrow.**

This thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response.",0.6,1,0,1,2023-04-18T05:30:12Z,12q2gyd,t3
14,Python,Flask Portfolio website created :) (my first project),"Hi all, 

Recently completed my first flask project, in which I build my own website.

The code is free to use [https://github.com/buildwithdan/flask-portfolio](https://github.com/buildwithdan/flask-portfolio).

It includes, blog pages, projects page, its mobile first and and and :) 

All blog and project pages information are saved in Markdown pages and has a one click deploy button to get up and running with this website.

Finally its all running on serverless functions, so super light weight and normally free from certain cloud providers.",0.85,30,0,30,2023-04-18T04:43:45Z,12q110v,t3
15,Python,Kubecon EU 2023,"Does it happen that you will be at Kubecon Europe 2023? We will be at **booth P15**, ready to talk about AI/ML, MLOps, open-source ML, Kubeflow, and more. There are a bunch of demos Ubuntu prepared and a fun keynote on secure MLOps. [Read more](https://medium.com/@andreeamihaelamunteanu/open-source-mlops-at-kubecon-with-ubuntu-870d06742b4f) and meet us there!",0.6,1,0,1,2023-04-18T04:15:18Z,12q04at,t3
16,Python,A Practical Introduction to Polars for Python Data Processing,,0.83,32,0,32,2023-04-18T01:50:17Z,12pvb4n,t3
17,Python,JupyterLab Python Tutorials,,0.77,9,0,9,2023-04-18T01:35:53Z,12puuw1,t3
18,Python,Library to implement core github actions functionality in python,"I wrote a simple library to implement core github actions functionality in python. [https://github.com/lestex/pygithubactions](https://github.com/lestex/pygithubactions), with this - [https://github.com/lestex/action-pygithubactions](https://github.com/lestex/action-pygithubactions) tiny example on how it can be used.",0.85,26,0,26,2023-04-18T01:20:07Z,12pudln,t3
19,Python,a few comments and questions about loguru - the most popular 3rd party logging module for Python,"I admit it. I always reach for [loguru](https://pypi.org/project/loguru/) for logging because it's so approachable. I've never been able to wrap my head about formatters, handlers, and all the rest that standard python logging involves.

That being said, I have a few feelings, comments and questions to get off my chest:

1. how did loguru become so popular when [searching for logging](https://pypi.org/search/?q=logging)   or [logger](https://pypi.org/search/?q=logger) or [log](https://pypi.org/search/?q=log) does not bring it up? I dont even remember how I found it. But 3 years later and a million files processed per month in the last 36 months, I'm so glad that I did.
1. Is there a need for something with the ease-of-use of loguru that is not written from scratch but implemented over python's standard logging?",0.59,3,0,3,2023-04-18T01:13:31Z,12pu6b8,t3
20,Python,Create websites with notebooks using nbdev + Netlify,,1.0,1,0,1,2023-04-17T23:41:48Z,12prasv,t3
21,Python,Robust mixed attributes classifier (machine learning),"Deodel is a Python only implementation of a classifier with native support for mixed attributes data. It features good accuracy, especially with heterogenous attributes. It even supports mixing of continuous and nominal values in the same attribute column.


&gt;&gt; https://github.com/c4pub/deodel


Example applications:

- Easy estimation of CSV dataset predictability:

&gt;&gt; [csv_dataset_eval.ipynb](https://github.com/c4pub/misc/blob/main/notebooks/csv_dataset_eval.ipynb)

- Discretization: comparing equal-width vs equal-frequency

&gt;&gt; [equal_width_vs_equal_frequency](https://github.com/c4pub/misc/blob/main/notebooks/equal_width_vs_equal_frequency.ipynb)",0.76,2,0,2,2023-04-17T23:04:59Z,12pq3q6,t3
22,Python,"LazyCSV - A zero-dependency, out-of-memory CSV parser","We open sourced lazycsv today; a zero-dependency, out-of-memory CSV parser for Python with optional, opt-in Numpy support. It utilizes memory mapped files and iterators to parse a given CSV file without persisting any significant amounts of data to physical memory.

https://github.com/Crunch-io/lazycsv
https://pypi.org/project/lazycsv/",0.95,223,0,223,2023-04-17T22:19:12Z,12pop1w,t3
23,Python,Shuffling large data at constant memory in Dask,"The dask release 2023.2.1 introduced a new shuffling method called P2P for dask.dataframe, making sorts, merges, and joins faster and using constant memory. This article describes the problem, the new solution, and the impact on performance.   


[https://medium.com/coiled-hq/shuffling-large-data-at-constant-memory-in-dask-bb683e92d70b](https://medium.com/coiled-hq/shuffling-large-data-at-constant-memory-in-dask-bb683e92d70b)",0.79,10,0,10,2023-04-17T21:18:03Z,12pma7d,t3
24,Python,Python task scheduler with a web UI,"Hey there, I'm building a [Python Task Scheduler](https://github.com/lucafaggianelli/mario-pype) with a web UI. The idea is that you define that tasks to run, the schedules, etc. in Python, and then you control everything from the UI, including logs and tasks output data. The UI comes for free, no HTML/JS needed :)

https://preview.redd.it/bkazfuv2bgua1.png?width=1587&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=bdc5aafac9634cf41a1e0597fbdcc840dcdcb3d5

Nice thing is that I encountered many difficulties and I explored many Python features while building this tool, so I'm going to write about it!

BTW if you may ask why I started this project üôÑ ... At some clients of mine, we have lightweight data pipelines but most of the existing solutions seem over complex, aiming at top notch performance, and as a consequence are not easy to deploy and use, we also needed a UI to let non-tech users run them manually. So that's why I decided to build this thing!

Give it a try and let me know what you think!

PS: yes I know the name kinda sucks, I mean Mario relates well with pipes, but Spotify has a similar tool called Luigi and I don't want to claim that mine is better üòÇ so help me with the name please!",0.89,28,0,28,2023-04-17T20:07:32Z,12piw1m,t3
25,Python,Using SQL with Python,"I spent a while making a tutorial on how to do the most common SQL operations (Create, Insert, Select, Update, Delete) using Python and the sqlit3 module. I hope you guys find it useful!

[https://www.youtube.com/watch?v=lK-P5kOiQ6Y&amp;lc=UgwDBQ7dzrkaa\_FwXp54AaABAg](https://www.youtube.com/watch?v=lK-P5kOiQ6Y&amp;lc=UgwDBQ7dzrkaa_FwXp54AaABAg)

All of the code I write in the tutorial is available here! Let me know what y'all think - cheers!

[https://github.com/plemaster01/PythonSQL](https://github.com/plemaster01/PythonSQL)",0.79,48,0,48,2023-04-17T19:59:01Z,12pif8z,t3
26,Python,How To: Extract Table From Image In Python (OpenCV &amp; OCR),,0.91,44,0,44,2023-04-17T19:48:53Z,12phvr0,t3
27,Python,Unsupervised Sentiment Analysis using VADER and Flair,,0.76,2,0,2,2023-04-17T19:45:17Z,12phocy,t3
28,Python,Dependency Injection in Python,,0.79,20,0,20,2023-04-17T18:50:11Z,12pfqxy,t3
29,Python,What common Python code and libraries do you guys struggle with,"Hey guys. Im a student who has some free time and I would love to share some of my knowledge. I want to see what libraries or concepts you feel generally lack tutorials and proper posts on. I will try my best to take these on perhaps more so in summer vacation and create some content. I believe this can help me in my uni and can hopefully also help the community and general python growth. Im open to anything but pls dont make some quantum math crazy stuff.

EDIT: thanks for all your suggestions and time taken! I know im a student and probably not in the same level of expertise as software developers. I will aim to just make tutorials with better examples and concise layouts. I wont be trying to code or alter stuff on github",0.17,0,0,0,2023-04-17T17:31:26Z,12pdf5m,t3
30,Python,pytheus: a modern python library for collecting prometheus metrics built with multiprocessing in mind,"hello, I wanted to share a library I've been working on for quite some time now.

It's a new python library for collecting metrics with prometheus with a focus on flexibility &amp; multiprocessing. The last one is one of the main reasons for this to be born as I found it difficult to have multiprocessing work correctly with the existing ecosystem.

Going from single process to multi process is a matter of a ""function call"" and everything should work as expected without differences in features between the two.  
The library also supports default labels and partial labels (incrementally build your child instance), and offers ways to easily plug in your own version of something if you so require via protocols. (For example a custom Registry or even a custom Backend for multiprocessing using something else, by default it uses redis).

A lot of focus was also given to the documentation to make it clear.  
I hope that if you struggled in the past this might make the experience better! :)  


**repo:** [**https://github.com/Llandy3d/pytheus**](https://github.com/Llandy3d/pytheus)

**docs:** [**https://pythe.us/**](https://pythe.us/)",0.86,21,0,21,2023-04-17T17:11:04Z,12pcvg0,t3
31,Python,Pandas - Explained &amp; Coding examples,"No wonder why Pandas is so used and recommended by everyone, great documentation and great tutorials! Here is a nice article showing an overview of what can be done with it, share without moderation

[https://medium.com/@maximehaegeman/pandas-first-go-to-module-for-data-science-1317011407ae](https://medium.com/@maximehaegeman/pandas-first-go-to-module-for-data-science-1317011407ae)",0.56,1,0,1,2023-04-17T15:14:57Z,12p9xfz,t3
32,Python,Linear Regression Tutorial Beginner-friendly,"What is your favorite library for linear regression? So far in my experience I found Scikit-Learn very convenient and easy to use, I wanted to share this great guide I found on Medium, great explanations and coding snippets!

[https://medium.com/@maximehaegeman/linear-regression-for-tabular-data-using-scikit-learn-9bc76c523f6d](https://medium.com/@maximehaegeman/linear-regression-for-tabular-data-using-scikit-learn-9bc76c523f6d)",0.65,7,0,7,2023-04-17T14:55:48Z,12p9gw1,t3
33,Python,"Tremolo - Stream-oriented, async, Pure Python HTTP Server Framework","Hello everyone.

&amp;#x200B;

Just wanted to show you an alternative HTTP microframework.

I dubbed it as *stream-oriented*.

&amp;#x200B;

Originally I wanted a simple server abstraction for download/upload over HTTP, **with throttling / speed limit support**.

There wasn't much need, but from a wide variety of frameworks, I didn't see anyone caring about this feature (CMIIW).

&amp;#x200B;

Also for some reason [Tremolo](https://nggit.github.io/tremolo-docs/) was created. It doesn't have to be modern or big, but it should be:

Robust and memory friendly, both in handling downloads, or uploads.

&amp;#x200B;

It's now getting working. Would be happy if 1-2 of the Pytonistas would give it a try. I only have two eyes, so I'm worried I'll miss something.

&amp;#x200B;

Documentation and installation can be found at [https://nggit.github.io/tremolo-docs/](https://nggit.github.io/tremolo-docs/). It shouldn't take much time to understand :)

&amp;#x200B;

Most importantly, I hope this post can be useful.

&amp;#x200B;

Thanks.",0.83,11,0,11,2023-04-17T14:11:25Z,12p8e92,t3
34,Python,Certification (UK),"Hi all,

I was wondering if any of you had any Python based certification, if it's actually worth it, and if so, which would you recommend?  I have been coding for a little over over 2year in Python, but my work doesn't require me to have any certs for what I do.

I work in Computer Networking and a lot of my code is to access devices and retreive information, chart this information and export it into Excel sheets.

I have a bit of a break from uni coming up and want to spend a bit of my down time getting accreditation and this would probably be the first I would look to do.

&amp;#x200B;

In an Ideal world, I will be moving into the Pen Testing world post-uni and will be going for the OSCP cert as well.

&amp;#x200B;

TIA :)",0.81,7,0,7,2023-04-17T14:06:43Z,12p8a6k,t3
35,Python,What can I contribute to SciPy (or other) with my pure math skill? I‚Äôm pen and paper mathematician,,0.91,316,0,316,2023-04-17T13:22:25Z,12p771v,t3
36,Python,Monday Daily Thread: Project ideas!,"Comment any project ideas beginner or advanced in this thread for others to give a try! If you complete one make sure to reply to the comment with how you found it and attach some source code! If you're looking for project ideas, you might be interested in checking out Al Sweigart's, [""The Big Book of Small Python Projects""](https://inventwithpython.com/bigbookpython/) which provides a list of projects and the code to make them work.",0.87,19,0,19,2023-04-17T05:30:13Z,12ou5no,t3
37,Python,Building a News API via RSS or Scraping,"General question I‚Äôve been building an application that utilizes a news api but pricing and everything seems cost prohibitive. What do you hypothesize services like newsapi.org are doing?

My assumption is that they‚Äôre either subscribing to the underlying RSS Feed for each source, casting the xml to json and doing any sort of magic they want. Alternatively, I would guess they‚Äôre doing good old fashioned scraping but I‚Äôm doubting it since so many of the news sites block scraping or is extremely against the TOS. 

Any thoughts? I‚Äôm thinking I‚Äôll create a dictionary of all news sources then identify the RSS feeds for it and have a standard process to collect and transform it.",0.67,4,0,4,2023-04-16T23:36:51Z,12oj9zf,t3
38,Python,Fluke v0.3.0 has been released!,"Fluke is a Python package that can be used to easily read files that do not reside within the local file system, e.g. on a remote server or on the cloud, as well as transfer them between said locations.

Most changes introduced in version 0.3.0 are focused on reading files, adding functionality regarding reading large files in chunks, partially reading files, and more.

Github: [https://github.com/manoss96/fluke](https://github.com/manoss96/fluke)

Docs:  [https://fluke.rtfd.io/](https://fluke.rtfd.io/)

Any feedback is welcome!",0.84,31,0,31,2023-04-16T21:21:07Z,12oef63,t3
39,Python,pdm-dotenv: Simplify Your Project's Environment Variable Management,"## pdm-dotenv: Simplify Your Python Project's Environment Variable Management

Are you working on a Python project that uses [pdm](https://github.com/pdm-project/pdm) for dependency management and [dotenv](https://github.com/theskumar/python-dotenv/) for local environment variable and secrets management? Do you find it frustrating when CLI tools like `pgcli` don't automatically pick up your `.env` file, forcing you to resort to `npm install -g dotenv-cli`? I've got a more convenient solution for you!

Introducing [pdm-dotenv](https://github.com/znd4/pdm-dotenv). With this plugin, whenever you `pdm run ...`, your `.env` file will automatically be loaded. Say goodbye to the hassle!

## Implementation

The [implementation](https://github.com/znd4/pdm-dotenv/blob/5c4e5ee137abadddd05f8d6aea6c6ac7c9b4d489/src/pdm_dotenv/__init__.py#L15-L26) of pdm-dotenv is compact enough that you could probably vendor it into your project. That might be possible with a [pdm user script that `call`s the function](https://pdm.fming.dev/latest/usage/scripts/#call), assuming `pdm` imports and runs the `call` target internally (rather than using `os.system(""python -m ..."")`). I haven't tested that out though, so YMMV.

## Wrap-up

Thank you for reading this far! This is my first time publishing a useful package to pypi, and I'm excited to share it with the community.

If you're using `pdm` and `dotenv` on a project, please give [pdm-dotenv](https://github.com/znd4/pdm-dotenv) a try and let me know your thoughts! Feedback and contributions are always welcome.",0.87,6,0,6,2023-04-16T18:05:35Z,12o7240,t3
40,Python,"Announcing Polyfactory - a powerful mock data generator for dataclasses, Pydantic and more","Hello r/Python!

Today I'd like to formally announce the first stable release of [Polyfactory](https://polyfactory.litestar.dev/) \- a powerful mock data generator built around type hints and support for some of the most popular data modelling solutions such as Pydantic models, dataclasses, typed-dicts and more!

## Once upon a time there was pydantic-factories

Some of you may already know this project as ""pydantic-factories""; A name under which it garnered a decent amount of popularity since it's inception. Pydantic-factories and Polyfactory have a lot in common. In fact, Polyfactory *is* pydantic-factories 2.0. That's why we also decided to continue the version number and release the first version of Polyfactory as `2.0.0`.

*But why the name change?*

A main motivator for the 2.0 release was that we wanted to support more than just Pydantic models, something which also required a change to the pydantic-fatories' core architecture. As this library would no longer be directly tied to Pydantic, *polyfactory* was chosen as a new name to reflect its capabilities; It can generate mock data for dataclasses, typed-dicts, Pydantic, odmantic, and beanie ODM models out of the box.

Polyfactory is all that pydantic-factories was and more!

## So what can it do?

Let's look at a very basic example using dataclasses:

    from dataclasses import dataclass
    
    from polyfactory.factories import DataclassFactory
    
    
    @dataclass
    class Person:
        name: str
        age: float
        height: float
    
    
    class PersonFactory(DataclassFactory[Person]):
        __model__ = Person
    
    
    def test_is_person() -&gt; None:
        person_instance = PersonFactory.build()
        assert isinstance(person_instance, Person)
        assert isinstance(person_instance.name, str)
        assert isinstance(person_instance.age, float)
        assert isinstance(person_instance.height, float)

This shows how you can create an instance of a dataclass. While it may not seem like much, the neat part about this is: You can easily swap out the model definition for a Pydantic class, a typed-dict, or any other supported source model type and your code stays exactly the same!


**But there's a lot more to it!**

Not only does this correctly handle basic types, virtually everything that you can model will be generated correctly: Nested models, iterables, Enums, type unions, etc., all out of the box!



**Extendability**

You can also easily add support for any custom types by extending the factories, or create wholly new factories to accommodate your modelling library of choice!


**Customization of generated data**

Polyfactory will generate data for you, but sometimes you want a bit more control over how this data is generated, or even inject your own. This is where \*fields\* come into play. It let's you configure sources of randomness, insert pre-defined values, specify constraints such as batch sizes for iterable fields, or add post-processing.


**Pytest integration**

Polyfactory comes with a pytest plugin, allowing you to use your factories as fixtures without requiring any additional setup. Simply add the `register_fixture` decorator to your factory and you're ready to go!


**Persistence**

Randomness is useful when testing, but sometimes you'll also want to hold on to that data, which is why Polyfactory includes a persistence layer, giving you the ability to store instances once generated.

## Closing words

If you'd like to contribute, check out the project [on GitHub](https://github.com/litestar-org/polyfactory), and if you want to chat you're welcome to join us on the [Litestar Discord](https://discord.gg/X3FJqy8d2j)!",0.96,104,0,104,2023-04-16T17:34:02Z,12o69ld,t3
41,Python,Script for AutoCAD that generates IPE steel beams using pyautocad library.,"Hi! I am an Architecture student but with interest in programming. I took a begginer's course on python last summer and found out recently that there is a library in python to make scripts in autoCAD.

&amp;#x200B;

I decided to make this small project that generates IPE beams (a type of normalized steel beam) and makes it an AutoCAD block automatically.

To use it I created a .exe file and you just need to have an autoCAD document opened and execute the code.

&amp;#x200B;

I created this page in github if anyone wants to check the code. Any comments are very much welcome.

&amp;#x200B;

[https://github.com/mariodyf/Automatic-IPE-block-for-pyautocad](https://github.com/mariodyf/Automatic-IPE-block-for-pyautocad)

&amp;#x200B;

Thanks!",1.0,6,0,6,2023-04-16T16:33:42Z,12o4vv4,t3
42,Python,FastAPI and Beanie: A Simple Guide to Building RESTful APIs with MongoDB (fully async),"FastAPI and Beanie: A Simple Guide to Building RESTful APIs with MongoDB

[https://ahmed-nafies.medium.com/tutorial-fastapi-beanie-and-mongodb-fully-async-864602ca16ad](https://ahmed-nafies.medium.com/tutorial-fastapi-beanie-and-mongodb-fully-async-864602ca16ad)  


https://preview.redd.it/7u26tudtx7ua1.jpg?width=640&amp;format=pjpg&amp;auto=webp&amp;v=enabled&amp;s=c7498c5b37191322a9203b21636224fa4edce668

Beanie is an asynchronous Python object-document mapper (ODM) for MongoDB that makes it simple to work with your database using Python data models.

In this tutorial, we will build a simple RESTful API using FastAPI and Beanie to interact with a MongoDB database. We‚Äôll cover installation, configuration, and basic CRUD operations. By the end, you‚Äôll have a working API connected to MongoDB and ready for further expansion.  


Happy coding!",0.74,10,0,10,2023-04-16T15:22:48Z,12o37nm,t3
43,Python,Clean Code: Best Practices for Writing Readable and Maintainable Code,"I just posted an article about writing clean, maintainable, and efficient code. It's full of best practices and principles from Robert C. Martin's book Clean Code. As software developers, we all strive to write code that is easy to understand, modify, and extend. This article provides some great tips and tricks to help you achieve that. I highly recommend giving it a read!

[Clean Code: Best Practices for Writing Readable and Maintainable Code](https://thecodecadence.medium.com/clean-code-best-practices-for-writing-readable-and-maintainable-code-dd5788515ca2)",0.31,0,0,0,2023-04-16T15:13:28Z,12o2zho,t3
44,Python,"[Gist] zinteger.py: dynamically-generated wrappers for ctypes integers, supporting unary, binary and in-place operators, with over/underflow checking, a suitable primer on metaprogramming in Python",,0.7,5,0,5,2023-04-16T11:44:10Z,12nxwzu,t3
45,Python,"Google announces the list of 574 Python packages in its new ""Assured Open Source Software"" service",,0.97,839,0,839,2023-04-16T11:39:23Z,12nxsop,t3
46,Python,Task Scheduling and Execution,"Wrote a simple framework inspired by *Dask + Graphkit* that enables you to create an operation graph and schedules and executes the operations based on the inputs provided. 

The framework can also be interfaced with a front-end node editing tool, something like blender, for visually creating and connecting nodes that executes the operations eagerly 

[Youtube video](https://youtu.be/KMIXtqrj8so) , no commentary

[Github repository](https://github.com/anshdavid/python-compute-graph)",0.67,2,0,2,2023-04-16T07:22:43Z,12nqscm,t3
47,Python,The different uses of Python type hints,,0.71,9,0,9,2023-04-16T06:22:57Z,12np7gd,t3
48,Python,django-api-admin: A RESTful Service for Django Admin,"I‚Äôve created a new Python package called django-api-admin that exposes django.contrib.admin as a RESTful service. This package is perfect for those who want to add new features to Django admin or create new admin interfaces with React or Vue. Give it a try in the demo below and let me know what you think!

demo: [https://django-api-admin.demon-bixia.repl.co/](https://django-api-admin.demon-bixia.repl.co/)

github: https://github.com/demon-bixia/django-api-admin

&amp;#x200B;

https://preview.redd.it/hj44kqb055ua1.png?width=1366&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=350c8e93dfb1ba5fc3433070424a25ee9808759f",0.86,16,0,16,2023-04-16T05:57:28Z,12noib7,t3
49,Python,Sunday Daily Thread: What's everyone working on this week?,"Tell /r/python what you're working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share.",1.0,2,0,2,2023-04-16T05:30:12Z,12nnqs3,t3
50,Python,LiliDB (JSON-based database),"Hi!,

I have recently made a small database based on JSON.

    import lilidb
    
    db = lilidb.Database('database.json')
    
    db.set('key', 'value')
    db.dump()
    
    with db as db:
        db.set('with': 'Open, save and close.')

 It's simple to use and it is both Thread-safe and fail-safe, it can handle multiple threadings by locking in specific operations, and it will save everything if an exception raises.

It is also capable of renaming keys, merging with other dictionaries and searching keys.

[https://github.com/ZSendokame/LiliDB](https://github.com/ZSendokame/LiliDB)

If you think it can be improved, please comment! I will try to make it better

Bye",0.91,24,0,24,2023-04-16T02:57:39Z,12njbbn,t3
51,Python,Pycodeless: Build Python code using natural language as a universal interface,"Hi, I've tried integrating the power of LLMs into the Python development experience and my efforts resulted in this very simple codegen project.

&amp;#x200B;

Pycodeless brings the `@codeless` decorator which allows you to define your functions using only type hints and docstrings. The code is generated at runtime using ChatGPT and the generated code is cached into local packages named `__pycodeless__`, where it can be further modified by the user.

```python
from pycodeless import codeless


@codeless
def greet(name: str) -&gt; str:
    """"""
    Make greeting for a person with the given name in pirate language
    """"""


@codeless
def spongebob_case(text: str) -&gt; str:
    """"""
    Convert the passed text into spongebob case
    """"""


def main():
    print(spongebob_case(greet(""Patrick"")))


if __name__ == ""__main__"":
    main()
```

Although the functionality of this project is quite similar to GitHub's Copilot, the development experience is very different.  Copilot autocompletes your code in place and does not differentiate between the generated part of the code and the original prompt. One of the main points of this project is to completely shift the development focus onto the prompt itself and make natural language a universal interface for code generation while moving the generated code into the background. The development experience is really distinct, and I encourage you to test this out for yourself.  Another important point is that Pycodeless makes code generation from natural language a first-class Python citizen. The code generation happens in runtime, which means we can leverage the whole Python infrastructure to enhance the prompt specification process (think dynamic docstrings with custom tags to reference various objects from the codebase and aid the LLMs, walking through the dependency graphs of type annotations to provide additional context, etc.). Also, I like the idea of not being dependent on any particular language model or text editor.

You can find out more about this project here: [https://github.com/hacksparr0w/pycodeless](https://github.com/hacksparr0w/pycodeless)",0.43,0,0,0,2023-04-16T00:37:53Z,12nezs5,t3
52,Python,How naive is to try create trading bots using python?,"As a senior python software engineer, I'm considering creating trading software as a side project to increase my chances of making money investing. However, I'm wondering if this is a naive or unrealistic goal(i know there are tons of startups doing that exact thing). Has anyone else pursued this path, and what challenges or successes have you experienced? (Any resources are widely appreciated)",0.81,85,0,85,2023-04-15T21:59:48Z,12na2zh,t3
53,Python,Pip 23.1 Released - Massive improvement to backtracking,"Pip 23.1 was just released a few hours ago. You can check the [release announcements here](https://discuss.python.org/t/announcement-pip-23-1-release/25844) and [the change log here](https://pip.pypa.io/en/stable/news/#v23-1). 

I would like to highlight the **significant improvement in backtracking** that is part of the requirement resolver process in Pip. This process involves Pip finding a set of packages that meet your requirements and whose requirements themselves don't conflict.

For example, let's say you require packages A and B. First, the latest versions of A and B are downloaded and Pip checks their requirements, let's say Pip finds that A depends on C==2 and B depends on C==1. These two latest versions of A and B are not compatible, so Pip will try to find an older version of A and/or B where they have compatible dependencies. C in this case is called a transitive dependency because it's a dependency of a dependency.

Prior to Pip 20.3, the default process for Pip would allow conflicting requirements to install if they were transitive dependencies where the last one specified would be the one installed. This was not satisfactory for a lot of projects that had larger set of requirements because it meant package versions that did not work together could be installed together even if their requirements explicitly forbade it.

But once the new resolver was turned on by default it immediately hit problems where backtracking would get stuck for a long time. Optimizations were introduced to try and help improve the problem, but Pip had two significant challenges:

 1. The Python ecosystem historically never had to worry about conflicting dependencies, and therefore package requirements weren't made with them in mind
 2. Pip cannot download the entire graph of dependencies and use a classical dependency resolution algorithm

Since the default behavior of Pip now involves the resolution process, number 1 has slowly resolved itself as people make better package requirements over time.

Number 2 has remained problematic, with examples popping up on the Pip issue tracker that show that resolution can take hours (or longer!). I've been following this problem very closely and introduced [an improvement](https://github.com/pypa/pip/pull/10481) in Pip 21.3. However, there were still known requirements that did not resolve.

Pip separates out the resolution logic into a library called [resolvelib](https://github.com/sarugaku/resolvelib). It had been discovered that there was a [logical error](https://github.com/sarugaku/resolvelib/issues/91) under certain circumstances, and also there was a known better backtracking technique it could employ called [backjumping](https://en.wikipedia.org/wiki/Backjumping). Both of these were recently [fixed](https://github.com/sarugaku/resolvelib/pull/111) and [implemented](https://github.com/sarugaku/resolvelib/pull/113) in resolvelib, which were then vendored in to Pip 23.1.

After this improvement to resolvelib, I went back through the Pip issue tracker and tried to reproduce every real-world example of Pip getting stuck backtracking. Every time I was able to reproduce the issue on Pip 23.0.1 I found it was fixed with these improvements to resolvelib.

**TL;DR**: If you have complicated requirements that require backtracking with Pip you should find that they resolve quicker, potentially much quicker, with Pip 23.1.",0.97,286,0,286,2023-04-15T20:16:39Z,12n5lai,t3
54,Python,"I just created `ipython-gpt`, a Jupyter/IPython interface for ChatGPT. Very early version, suggestions are welcome!","Hello everybody! I've found ChatGPT extremley useful when doing quick Data Wrangling tasks, so I quickly hacked together an IPython extension to use it directly from Jupyter Notebooks or IPython shell.

To install it, just do:

    $ pip install ipython-gpt

Then, in the notebook just use a regular cell with the `%%chat` magic:

    %%chat
    What's the pandas method used to group DataFrames that have a Timestamp index? I want to create a rolling mean.

To authenticate, you have to generate your own API Key and set is an an envvar.

Here's the repo: https://github.com/santiagobasulto/ipython-gpt

This was a VERY quick hack, I have to improve the code quality, add tests, formatting, etc. So you should expect some bugs :)

Suggestions are welcome!",0.65,6,0,6,2023-04-15T20:09:02Z,12n57qc,t3
55,Python,Website that filters indicators such as bollinger band and cryptocurrencies,"I want to share with you the web page I developed with Python Flask, your feedback is very important for me .

[github repository](https://github.com/atilaahmettaner/bollinger-band-screener)

[website](https://crypto-scanner-app.herokuapp.com/)

I developed a web page that filters coins according to the width of the bollinger band indicator, which takes different parameters according to time zones and can find the most optimal coin. Using the Bollinger Band indicator is quite simple, where you can find coins with tight prices that are about to rise by entering the correct value in the tool. The value to be entered varies depending on the time frame. For example, if you are scanning daily, entering a value of 0.13 for BBW will give you tight coins. For a 4-hour scan, this value will be 0.04, and for an hourly scan, the optimum value will be 0.009.  please consider giving it a star on GitHub to support the project and show your appreciation for the hard work. 

[Examples of coins she found in the past](https://i.redd.it/wt0v85yv32ua1.gif)",0.64,4,0,4,2023-04-15T19:43:10Z,12n3up4,t3
56,Python,Web Scraping Twitter Data with Python,,0.83,4,0,4,2023-04-15T19:03:02Z,12n2jru,t3
57,Python,I discovered that the fastest way to create a Pandas DataFrame from a CSV file is to actually use Polars,,0.92,456,0,456,2023-04-15T18:04:08Z,12n0wfk,t3
58,Python,New search package in python,"Searchlix

My first python package on PyPI

I want to try how I can develop a python package and upload it, and the result was: Searchlix 

It is a simple and powerful package which helps with searching for patterns, emails, phone numbers and words in texts and websites! (Web scraping)

Some of the features:
-Search inside large txt files for word
-Patterns search in text (KMP algorithm)
-Word search in text
-Search for page name in website
-Find emails in text / Email validation
-Find emails in a website page
-Find a phone number in text / Phone number validation
-Find a phone number in a website page
-check if domain valid or not
-check if domain has a valid mail server

And I will provide further features and examples in the future 

I would be thankful if any one who tried it could show us how he used it (case study) and if there are any further suggestions

https://pypi.org/project/searchlix/",0.68,29,0,29,2023-04-15T14:33:32Z,12mw0dc,t3
59,Python,Saturday Daily Thread: Resource Request and Sharing! Daily Thread,"Found a neat resource related to Python over the past week? Looking for a resource to explain a certain topic?

Use this thread to chat about and share Python resources!",0.76,2,0,2,2023-04-15T05:30:16Z,12mirgo,t3
60,Python,"Here's my project to explore stress control through controlled breathing using Python, BLE, and the Polar H10 Heart Rate monitor","Hey r/Python,

I've been exploring the data available from the widely available Polar H10 heart rate monitor. The Bleak package provides a simple way to connect to the device, and stream heart rate, acceleration, and ECG data.

In this project I looked into the relationship between breathing rate and heart rate variability, a common indicator of physiological stress response.  
Github repo: [https://github.com/kbre93/dont-hold-your-breath](https://github.com/kbre93/dont-hold-your-breath)",0.87,19,0,19,2023-04-15T05:05:09Z,12mi0ij,t3
61,Python,Comprehensive Python Install Tutorial From Scratch For Machine Learning Apps,,0.54,1,0,1,2023-04-15T04:47:05Z,12mhgp5,t3
62,Python,CJournal: A Simple Encrypted Journaling/Diary Program,"I know there's probably a billion of these out there already - I mostly made this just as an excuse to practice working with SQL and PyCryptodome. 

Chip's Journal (""CJournal"") is a secure digital journal/diary. It allows you to write, store, and read journal entries from an SQLite database. Journal content (both the main body text and the entry titles) is AES-256 encrypted to your personal password so that snooping eyes aren't able to easily read them. 

CJournal also supports tagging entries with keywords so that you can search entries by tag at a later time. (Security note: Tags are stored in the database as plain-text. I did this so that the program could perform searches without having to decrypt the main journal entries). You can also search by date if you choose.

Right now CJournal is interacted with completely through the terminal because that's my personal preference. Maybe in the future I might whip up a GUI front-end for it - it's been awhile since I've had an excuse to play with tkinter. But yeah... right now command-line only, sorry.

[Find the source code here](https://github.com/ultrachip/cjournal).",0.88,6,0,6,2023-04-15T04:20:57Z,12mgo22,t3
63,Python,Gaussian/Banker's Rounding.. the algorithm behind Python's round function.,"In Python, if the fractional component of the number is halfway between two integers, one of which is even and the other odd, then the even number is returned.This kind of rounding is called **rounding to even** (or banker‚Äôs rounding).

[Code Affinity](https://www.youtube.com/watch?v=mF-gtoAM5f8)

&amp;#x200B;

    x = round(4.5) 
    print(x) 
    # Prints 4
    x = round(5.5) 
    print(x) 
    # Prints 6 

If you want to explicitly round a number up or down, use ceil() or floor() function from math module.

    # Round a number up 
    import math 
    x = math.ceil(4.5) 
    print(x) 
    # Prints 5
    # Round a number down 
    import math 
    x = math.floor(4.5) 
    print(x) 
    # Prints 4",0.72,6,0,6,2023-04-15T02:57:05Z,12me2t4,t3
64,Python,Build open instruction-tuned datasets and models,,0.91,8,0,8,2023-04-15T02:19:46Z,12mcwvn,t3
65,Python,This week I made my first ever python script! It scrapes and translates a single Japanese website for hotel bookings asynchronously. Please come take a look :),"There is a hotel in Japan that will give you the insanely low price of $40 per night if you book a 30 day chunk all at once. Their site only lets you search a single location one day at a time though, so I decided to make this and learn everything from scratch along the way. The most ironic part is, I didn't find a single booking! I think they discontinued the offer... I was going to make a frontend with English translations for regular use too...  


I'm openly accepting tips and advice on how to design these things better. It's probably pretty simple for you, but it took me awhile to figure out! Eventually I'd like to swap careers into tech :) If you have any ideas for what to make next be sure to leave your suggestion!  


The code on github: [https://github.com/Gornel/apa\_scraper/blob/main/list\_gatherer.py](https://github.com/Gornel/apa_scraper/blob/main/list_gatherer.py)  
A youtube of the first time I ran it: [https://www.youtube.com/watch?v=cGUOLdaKBuE](https://www.youtube.com/watch?v=cGUOLdaKBuE)",0.9,46,0,46,2023-04-14T23:39:56Z,12m6obx,t3
66,Python,How to Read and Write JSON Files in Python,"TL;DR
This article explains what JSON is and how to work with it in Python. It covers the data types that can be converted to and from JSON, the Python json module, serialization and deserialization, reading JSON from a file, performing changes to JSON, and working with API calls using the requests library and JSON.

Link to article: https://devoriales.com/post/220",0.45,0,0,0,2023-04-14T23:16:36Z,12m5ffq,t3
67,Python,Timeless Data Science Treasures - Python modules that will never die,,0.44,0,0,0,2023-04-14T21:54:25Z,12m2pxe,t3
68,Python,[Crosspost] Introducing BungIO - a python bungie.net / destiny 2 api wrapper,"Original Post: https://www.reddit.com/r/DestinyTheGame/comments/12lt3f1/introducing_bungio_a_python_bungie_api_wrapper/

---

**Features**

* Python 3.10+
* Asynchronous
* 100% typed and raw api coverage
* Ratelimit compliant
* Manifest support
* OAuth2 support
* Easily used in combination with other libraries like FastApi and discord wrappers


**Github**: https://github.com/Kigstn/BungIO

**Docs &amp; Getting Started**: https://bungio.readthedocs.io/en/latest/

**Guides**: https://bungio.readthedocs.io/en/latest/Guides/basic/

---

While the bungie api is very extensive with a **lot** of functionality, it is IMO very confusing for new users. It also has a bunch of inconsistencies and suboptimal documentation. So as a side project, I've been working on making it more accessible for new people and api veterans. 

Fast forward a few months, I'm ready to share BungIO with you all. I've been using it for my personal discord bot for ~half a year now and hopefully ironed out all the major kinks. It is designed to be easy to use, but still requires you to loosely know the api.


## Full API Coverage
What sets this library apart from other projects is that it has full api coverage - every single route is fully typed and returns fully typed python classes! And better yet, the api is automatically generated from the api spec bungie publishes. This means when there is an update to the api, it needs literally one button click from me to update the library to the latest api version with the new shiny features.

This means that all api features, even loadouts, are fully supported.

## Destiny Manifest Support
This is something I have not seen anywhere else and is IMO very cool. The manifest is where bungie defines all their data: activities, emblems, items, etc. Normally you need to constantly look up data from the api in the manifest, because the api only returns basic info / ids.

For example: You want to look up what activity your user has done last. So you call the correct api route which returns an activity id. You then have to download the manifest and look up that activity id in the correct manifest location. Only then you get additional information like the activity name, light level, location, etc. As you can probably imagine, this gets annoying veeeery quickly. 

BungIO provides helper functions to make manifest lookups stupidly easy. Take a look at the [manifest guide](https://bungio.readthedocs.io/en/latest/Guides/manifest/) for more information :)


## Quick Example
    import asyncio
    import os
    
    from bungio import Client
    from bungio.models import BungieMembershipType, DestinyActivityModeType, DestinyUser
    
    
    # create the client obj with our bungie authentication
    client = Client(
        bungie_client_id=os.getenv(""bungie_client_id""),
        bungie_client_secret=os.getenv(""bungie_client_secret""),
        bungie_token=os.getenv(""bungie_token""),
    )
    
    async def main():
        # create a user obj using a known bungie id
        user = DestinyUser(membership_id=4611686018467765462, membership_type=BungieMembershipType.TIGER_STEAM)
    
        # iterate thought the raids that user has played
        async for activity in user.yield_activity_history(mode=DestinyActivityModeType.RAID):
    
            # print the date of the activity
            print(activity.period)
    
    # bungio is by nature asynchronous, it can only be run in an asynchronous context
    asyncio.run(main())


If you need any inspirations, feel free to look at my [discord bot](https://github.com/TheDescend/elevatorbot) where I've been using the libary and basically all its features. Be aware that the bot is very complicated :)

You can also just shoot me a message anytime, I am happy to help!",0.91,25,0,25,2023-04-14T21:49:47Z,12m2kpe,t3
69,Python,How do you guys handle pandas and its sh*tty data type inference,"I often like to dump CSVs with 100s of columns and millions of rows into python pandas. and I find it very very frustrating when it gets various data types for columns wrong. nothing helps

including `infer_objects().dtypes` and `convert_dtypes().dtypes`

how do you guys auto-detect dtypes for your columns?

is there a better library out there ?",0.64,55,0,55,2023-04-14T21:46:05Z,12m2gn8,t3
70,Python,"Release: NiceGUI 1.2.7 with ui.download, easier color definitions, ""aggrid from pandas dataframe"" and much more","With 21 contributors the just released [NiceGUI](https://nicegui.io/) 1.2.7 is again a wonderful demonstration of the strong growing community behind our easy to use web-based GUI library for Python. NiceGUI has a very gentle learning curve while still offering the option for advanced customizations. By following a backend-first philosophy you can focus on writing Python code. All the web development details are handled behind the scenes.


### New features and enhancements
- introduce [`ui.download`](https://nicegui.io/documentation#download)
- introduce color arguments for elements like `ui.button` that accept Quasar, Tailwind, and CSS colors
- allow running in Python‚Äôs interactive mode by auto-disabling reload
- allow creating `ui.aggrid` from [pandas dataframe](https://nicegui.io/documentation/ag_grid#create_grid_from_pandas_dataframe)
- fix navigation links [behind reverse proxy](https://github.com/zauberzeug/nicegui/tree/main/examples/nginx_subpath) with subpath
- allow sending ""leading"" and/or ""trailing"" events when throttling
- raise an exception when hiding internal routes with `app.add_static_files`
- add [‚Äúdark‚Äù color](https://nicegui.io/documentation/colors) to `ui.colors`

### Documentation
- enhance [Trello ""drag and drop"" example](https://github.com/zauberzeug/nicegui/tree/main/examples/trello_cards) to use a ToDo data model
- add workaround to [docs for native mode](https://nicegui.io/documentation#native_mode) when WebView2Loader.dll fails load
- add [documentation and demo about element borders](https://nicegui.io/documentation/card#the_issue_with_nested_borders) inside a `ui.card`
- add [hint about exception when running executable](https://nicegui.io/documentation#package_for_installation) with no console on Windows

Of course the release also includes some bugfixes (see [release notes](https://github.com/zauberzeug/nicegui/releases/tag/v1.2.7) for details). Thanks to everyone who was involved in making this release happen.",0.96,236,0,236,2023-04-14T20:30:30Z,12m03v5,t3
71,Python,Logging code mess,"Way overdue for me but I started getting a lot more detailed with my logging. I'm finding it really clutters up the code though. Are there any best practices people use? When I have a two line method that has another two lines for logging it just starts feeling clunky.

Is there a way to be more elegant about it or is this just how it is with production code? 

Alternatively are there any good code repos you guys can point me to that you think implement this stuff well?",0.91,37,0,37,2023-04-14T20:18:06Z,12lzpvi,t3
72,Python,"Using Python to query your videos - ChatGPT, Chroma, LangChain - Tutorial","Hey there!   


I wanted to let you know that I just released a new video where I'm using some really cool technologies like Python, OpenAI API's, Chroma, and LangChain to answer questions based on Youtube videos.

If you don't have the time or patience to sit through a 3-hour lecture, no worries!   
My tutorial covers a solution!

I'm really excited to share this with you and I think you'll find it super helpful.  
check out the video here: [**https://youtu.be/mhdOTLp-IjQ**](https://youtu.be/mhdOTLp-IjQ).   


Enjoy!",0.43,0,0,0,2023-04-14T19:48:05Z,12lysic,t3
73,Python,I just created an simple OpenAI interactive chatbot in Python 3,"I just created an simple OpenAI interactive chatbot in Python 3. This bot generates responses to user  queries and creates a fun and engaging experience. Join the conversation  and interact with the bot today. 

[https://github.com/vietjovi/openai-chatbot/](https://github.com/vietjovi/openai-chatbot/)  


Hope you guys like it",0.29,0,0,0,2023-04-14T18:02:26Z,12lvpey,t3
74,Python,Open source Python bot to level League of Legends Accounts,"I've been using this bot  to level and ultimately sell accounts for years, now that I have a good job I'm just releasing the bot. I'm a java dev so any python/general feedback on how to improve is welcome! 

The bot uses the local league client api, not to be confused with the league of legends api, and a simple game loop to play the games once they are started.

repo: [https://github.com/iholston/Another-LoL-Bot](https://github.com/iholston/Another-LoL-Bot)",0.32,0,0,0,2023-04-14T17:49:35Z,12lvcrb,t3
75,Python,A Practical Guide to Implementing CQRS with Diator in Python,"&amp;#x200B;

https://preview.redd.it/g74qoy069uta1.png?width=800&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=d67ae69f0ee0bca4e3568026383d59f1668fb8d4

# Introduction

Today we will explore the key concepts behind **the CQRS pattern** and its benefits. Then we will dive into its **implementation in Python**, using [t**he Diator library**](https://github.com/akhundMurad/diator) as our framework of choice.

# What is CQRS?

CQRS (Command Query Responsibility Segregation) ‚Äî is a pattern that separates models for updating information (writes) and reading information (reads). This concept has been widely explained in articles such as Udi Dahan‚Äôs article named [‚ÄúClarified CQRS‚Äù](https://udidahan.com/2009/12/09/clarified-cqrs/) and [Martin Fowler ‚Äî ‚ÄúCQRS‚Äù](https://martinfowler.com/bliki/CQRS.html), or in [the outstanding Greg Young talk](https://www.youtube.com/watch?v=JHGkaShoyNs). We will only briefly discuss the key concepts and the way to apply them through the Diator library.

&amp;#x200B;

[Source: https:\/\/martinfowler.com\/bliki\/CQRS.html](https://preview.redd.it/uojhsf7e9uta1.png?width=637&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=7696b34a8e9e9a2b6c555d363bf32f04fff49469)

# Why Diator?

Diator ‚Äî is a completely new library for implementing the CQRS pattern in Python. It provides a set of abstractions and utilities to help you separate your read-and-write concerns. The Diator provides **a flexible API for Command/Query and their Handlers implementation a**nd support for several types of events (Domain Event, Notification Event, and ECSTEvent). Furthermore, the library has built-in integration with **the different message brokers (Redis Pub/Sub, Azure Service Bus).**

# Implementing CQRS with Diator

To use the Diator library, there are several components to familiarize yourself with. These include Commands and Command Handlers, Queries and Query Handlers, Events and Event Handlers, and Message Brokers. By utilizing these components, you can effectively manage the exchange of information between the read and write models in your application.

## Installation

The Diator library can be installed using [pip](https://pypi.org/project/diator/). There are several options for installation:

Azure Installation:

`pip install diator[azure]`

Will install [azure-servicebus](https://pypi.org/project/azure-servicebus/) library to support the Azure Service Bus message broker.

Redis Installation

`pip install diator[redis]`

Will install [redis](https://pypi.org/project/redis/) library to support the Redis Pub/Sub.

## Commands and Command Handlers

Command represents an intention to perform an action or change the state of an application. Here is an example of the Command:

    from diator.requests import Request
    from diator.response import Response
    
    @dataclasses.dataclass(frozen=True, kw_only=True)
    class JoinMeetingCommand(Request): 
        meeting_id: int = dataclasses.field(default=1) 
        user_id: int = dataclasses.field(default=1)

Command Handler is a component responsible for handling a Command and executing the corresponding action:

    from diator.requests import RequestHandler
    from diator.events import EventHandler
    
    class JoinMeetingCommandHandler(RequestHandler[JoinMeetingCommand, None]):
        def __init__(self, meeting_api: MeetingAPI) -&gt; None:
            self._meeting_api = meeting_api
            self._events: list[Event] = []
    
        @property
        def events(self) -&gt; list[Event]:
            return self._events
    
        async def handle(self, request: JoinMeetingCommand) -&gt; None:
            await self._meeting_api.join(request.meeting_id, request.user_id)
            self._events.append(
                UserJoinedDomainEvent(
                    user_id=request.user_id, 
                    timestamp=datetime.utcnow(), 
                    meeting_id=request.meeting_id
                )
            )
            self._events.append(
                UserJoinedNotificationEvent(user_id=request.user_id)
            )

## Queries and Query Handlers

Query represents a request for information or data from the application‚Äôs read model. The process of handling queries SHOULD NOT modify the state of the application:

    from diator.requests import Request
    
    @dataclasses.dataclass(frozen=True, kw_only=True)
    class ReadMeetingQuery(Request): 
        meeting_id: int = dataclasses.field(default=1)

Query Result is an object that contains the data requested by a Query. It is returned by a Query Handler after it processes a Query against the read model:

    from diator.response import Response
    
    @dataclasses.dataclass(frozen=True, kw_only=True)
    class ReadMeetingQueryResult(Response): 
        meeting_id: int = dataclasses.field(default=1) 
        link: str = dataclasses.field()

Query Handler is a component responsible for processing a Query against the read model and returning the requested data as a Query Result:

    from diator.requests import RequestHandler
    
    class ReadMeetingQueryHandler(RequestHandler[ReadMeetingQuery, ReadMeetingQueryResult]):
        def __init__(self, meeting_api: MeetingAPI) -&gt; None:
            self._meeting_api = meeting_api
            self._events: list[Event] = []
    
        @property
        def events(self) -&gt; list[Event]:
            return self._events
    
        async def handle(self, request: ReadMeetingQuery) -&gt; ReadMeetingQueryResult:
            link = await self._meeting_api.get_link(request.meeting_id)
            return ReadMeetingQueryResult(
                meeting_id=request.meeting_id,
                link=link
            )

&amp;#x200B;

## Events and Event Handlers

Event represents a fact that has occurred in the application. It typically represents a significant change in the application‚Äôs state that is of interest to other parts of the application or external systems. There are several event types:

* Domain Event ‚Äî a message describing a significant event that has occurred in the business domain.
* Notification Event ‚Äî this is a message regarding a change in the business domain that other components will react to.
* Event-carried state transfer (ECST) ‚Äî messages notify subscribers about changes in the producer‚Äôs internal state.

&amp;#8203;

    from diator.events import DomainEvent, NotificationEvent, ECSTEvent
    
    
    @dataclasses.dataclass(frozen=True, kw_only=True)
    class UserJoinedDomainEvent(DomainEvent):  # will be handled by an event handler
        user_id: int = dataclasses.field()
        meeting_id: int = dataclasses.field()
        timestamp: datetime = dataclasses.field()
    
    
    @dataclasses.dataclass(frozen=True, kw_only=True)
    class UserJoinedNotificationEvent(NotificationEvent):  # will be sent to a message broker
        user_id: int = dataclasses.field()
    
    
    @dataclasses.dataclass(frozen=True, kw_only=True)
    class UserChangedECSTEvent(ECSTEvent):  # will be sent to a message broker
        user_id: int = dataclasses.field()
        new_username: str = dataclasses.field()

Event Handler is a component responsible for processing an Event that has occurred in the application:

    from diator.events import EventHandler
    
    class UserJoinedDomainEventHandler(EventHandler[UserJoinedDomainEvent]):
    def __init__(self, meeting_api: MeetingAPI) -&gt; None:
        self._meeting_api = meeting_api
    
        async def handle(self, event: UserJoinedDomainEvent) -&gt; None:
        await self._meeting_api.notify(event.meeting_id, ""New user joined!"")

## Setting up the Mediator class

Let‚Äôs go through the steps of the mediator configuration:

* Configure dependency injection:

&amp;#8203;

    from di import Container, bind_by_type  # using di lib as di-framework
    from diator.container.di import DIContainer
    
    def setup_di() -&gt; DIContainer:
        external_container = Container()
    
        external_container.bind(
            bind_by_type(
                Dependent(UserJoinedDomainEventHandler, scope=""request""), 
                UserJoinedDomainEventHandler
            )
        )
        external_container.bind(
            bind_by_type(
                Dependent(JoinMeetingCommandHandler, scope=""request""),
                JoinMeetingCommandHandler,
            )
        )
        external_container.bind(
            bind_by_type(
                Dependent(ReadMeetingQueryHandler, scope=""request""),
                ReadMeetingQueryHandler,
            )
        )
    
        container = DIContainer()
        container.attach_external_container(external_container)
        return container

&amp;#x200B;

* Mapping events to event handlers:

&amp;#x200B;

    from diator.mediator import Mediator
    from diator.events import EventMap
    
    def setup_mediator() -&gt; Mediator:
        container = setup_di()
    
        event_map = EventMap()
        event_map.bind(UserJoinedDomainEvent, UserJoinedDomainEventHandler)

&amp;#x200B;

* Mapping requests (commands and queries) to request handlers:

&amp;#x200B;

    from diator.mediator import Mediator
    from diator.events import EventMap from diator.requests import RequestMap
    
    def setup_mediator() -&gt; Mediator:
        container = setup_di()
    
        event_map = EventMap()
        event_map.bind(UserJoinedDomainEvent, UserJoinedDomainEventHandler)
        request_map = RequestMap()
        request_map.bind(JoinMeetingCommand, JoinMeetingCommandHandler)
        request_map.bind(ReadMeetingQuery, ReadMeetingQueryHandler)

&amp;#x200B;

* Configure event emitter class:

&amp;#x200B;

    from redis import asyncio as redis
    from diator.mediator import Mediator 
    from diator.events import EventMap, EventEmitter 
    from diator.message_brokers.redis import RedisMessageBroker 
    from diator.requests import RequestMap
    
    def setup_mediator() -&gt; Mediator:
    container = setup_di()
    
        event_map = EventMap()
        event_map.bind(UserJoinedDomainEvent, UserJoinedDomainEventHandler)
        request_map = RequestMap()
        request_map.bind(JoinMeetingCommand, JoinMeetingCommandHandler)
        request_map.bind(ReadMeetingQuery, ReadMeetingQueryHandler)
    
        redis_client = redis.Redis.from_url(""redis://localhost:6379/0"")
        event_emitter = EventEmitter(
            message_broker=RedisMessageBroker(redis_client),
            event_map=event_map,
            container=container,
        )

&amp;#x200B;

* Add logging middleware:

&amp;#x200B;

    from redis import asyncio as redis
    from diator.mediator import Mediator 
    from diator.events import EventMap, EventEmitter 
    from diator.message_brokers.redis import RedisMessageBroker 
    from diator.requests import RequestMap 
    from diator.middlewares import MiddlewareChain 
    from diator.middlewares.logging import LoggingMiddleware
    
    def setup_mediator() -&gt; Mediator:
        container = setup_di()
    
        event_map = EventMap()
        event_map.bind(UserJoinedDomainEvent, UserJoinedDomainEventHandler)
        request_map = RequestMap()
        request_map.bind(JoinMeetingCommand, JoinMeetingCommandHandler)
        request_map.bind(ReadMeetingQuery, ReadMeetingQueryHandler)
    
        redis_client = redis.Redis.from_url(""redis://localhost:6379/0"")
        event_emitter = EventEmitter(
            message_broker=RedisMessageBroker(redis_client),
            event_map=event_map,
            container=container,
        )
    
        middleware_chain = MiddlewareChain()
        middleware_chain.add(LoggingMiddleware())

&amp;#x200B;

&amp;#x200B;

* Finally, setup the mediator class:

&amp;#x200B;

    from redis import asyncio as redis
    from diator.mediator import Mediator 
    from diator.events import EventMap, EventEmitter 
    from diator.message_brokers.redis import RedisMessageBroker 
    from diator.requests import RequestMap 
    from diator.middlewares import MiddlewareChain 
    from diator.middlewares.logging import LoggingMiddleware
    
    def build_mediator() -&gt; Mediator:
        container = setup_di()
    
        event_map = EventMap()
        event_map.bind(UserJoinedDomainEvent, UserJoinedDomainEventHandler)
        request_map = RequestMap()
        request_map.bind(JoinMeetingCommand, JoinMeetingCommandHandler)
        request_map.bind(ReadMeetingQuery, ReadMeetingQueryHandler)
    
        redis_client = redis.Redis.from_url(""redis://localhost:6379/0"")
        event_emitter = EventEmitter(
            message_broker=RedisMessageBroker(redis_client),
            event_map=event_map,
            container=container,
        )
    
        middleware_chain = MiddlewareChain()
        middleware_chain.add(LoggingMiddleware())
    
        return Mediator(
            request_map=request_map, 
            event_emitter=event_emitter, 
            container=container, 
            middleware_chain=MiddlewareChain
        )

Now we have ready to use mediator instance!

## Usage of the Mediator

Since we have a ready mediator instance builder (setup\_mediator), we are able to send our queries and commands to it.

Here are several use cases:

* Sending query to the Mediator:

&amp;#x200B;

    import asyncio
    
    async def main() -&gt; None:
        mediator = build_mediator()
    
        response = await mediator.send(ReadMeetingQuery(meeting_id=57))
    
        assert isinstance(response, ReadMeetingQueryResult)
    
    if __name__ == ""__main__"":
        asyncio.run(main())

&amp;#x200B;

* Sending command to the Mediator:

&amp;#x200B;

    import asyncio
    
    async def main() -&gt; None:
    mediator = build_mediator()
    
        response = await mediator.send(JoinMeetingCommand(meeting_id=57, user_id=1))
    
        assert not response
    
    if __name__ == ""__main__"":
        asyncio.run(main())

After sending a command, it will be caught by a specified command handler (JoinMeetingCommandHandler in this case). Since JoingMeetingCommandHandler also produces UserJoinedDomainEvent, this domain event will be processed by UserJoinedDomainEventHandler. Also, our command handler produces UserJoinedNotificationEvent, so it will be sent to Redis Pub/Sub channel. Example of a message in Redis:

    {
       ""message_type"":""notification_event"",
       ""message_name"":""UserJoinedNotificationEvent"",
       ""message_id"":""9f62e977-73f7-462b-92cb-8ea658d3bcb5"",
       ""payload"":{
          ""event_id"":""9f62e977-73f7-462b-92cb-8ea658d3bcb5"",
          ""event_timestamp"":""2023-03-07T09:26:02.588855"",
          ""user_id"":1
       }
    }

Generally, the flow looks like below:

&amp;#x200B;

https://preview.redd.it/6fnqbi19buta1.png?width=720&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=c15a261c3ac3e9cfd17a89c69717f391860fbca0

&amp;#x200B;

&amp;#x200B;

It‚Äôs important to note that CQRS is not a silver bullet and may not be the right choice for your project. It‚Äôs crucial to carefully consider the tradeoffs and design considerations.

Hope that this article has provided you with a useful guide to understanding and implementing CQRS with Diator in Python!",0.73,5,0,5,2023-04-14T17:34:28Z,12luylb,t3
76,Python,How to debug faster? Do it like a competitive programmer!,,0.14,0,0,0,2023-04-14T14:03:38Z,12lptjb,t3
77,Python,Highcharts for Python toolkit,"We're excited to announce the release of the Highcharts for Python toolkit! It's a collection of Python libraries designed to provide turn-key comprehensive support for Highcharts data visualizations in Python, including native integrations with Pandas, Jupyter, PySpark, and more. If you're unfamiliar with Highcharts, it is one of the leading Javascript data visualization solutions, used to easily create highly interactive, beautifully styled data visualizations with over 150 different chart types. Using the Highcharts for Python toolkit, you can easily integrate this rich set of visualization capabilities into your Python applications and Notebooks.

The toolkit includes full support for the Highcharts suite of data visualization libraries, including Highcharts Core, Highcharts Stock, Highcharts Maps, and Highcharts Gantt. Full disclosure, the libraries are free to try, but like all of the Highcharts visualization products, using them commercially requires a license with extensive (human) support.

You can find the Github repos for the full toolkit at [https://github.com/highcharts-for-python](https://github.com/highcharts-for-python), more details about what the toolkit can do at [https://www.highcharts.com/blog/integrations/python/](https://www.highcharts.com/blog/integrations/python/), and extensive documentation at [https://highchartspython.com/get-help](https://highchartspython.com/get-help).

Given that this is v.1.0 of our Python toolkit, it's early days, so we'd love your thoughts and perspectives on the library!",0.64,3,0,3,2023-04-14T12:49:57Z,12lo1kh,t3
78,Python,Speeding up Python 100x using C/C++ Integration,"Boost your Python projects' performance by integrating C/C++ code! This optimization technique allows you to harness the efficiency of C/C++ for performance-critical tasks, resulting in significantly faster execution times. Whether you're working on data processing, scientific computing, or other resource-intensive applications, C/C++ integration can help you elevate your Python code's efficiency and responsiveness. Give it a try and unlock new possibilities for your projects!

I go into more detail over [here](https://arjunsahlot.hashnode.dev/speeding-up-python-100x-using-c-integration)!",0.38,0,0,0,2023-04-14T11:43:53Z,12lmgwx,t3
79,Python,Semaphore: A full-body keyboard implemented in Python,I was surprised to see that [Semaphore](https://github.com/everythingishacked/Semaphore) is implemented in Python.,1.0,5,0,5,2023-04-14T10:59:08Z,12lldjc,t3
80,Python,Wall Street's Transition from Excel to Python,,0.92,109,0,109,2023-04-14T10:57:25Z,12llc1e,t3
81,Python,Do you discriminate your callback functions in any way?,"Callbacks are a hot-topic in pretty much any language, but I generally like them. 

However, denoting their ""special status"" as a callback is a bit of a pain in the ass. Some approaches I tried:

\* Mentioning it in the docstrings: hard to enforce

\* Prefixing the function name (e.g.: **cb\_myfunction)**: ugly 

\* Using a decorator that does nothing: neat idea but a bit messy, feels overkill

My current solution was to create a **callbacks** package. Now every function that is used as a callback must reside there. It was a great idea until I started getting circular import errors. Also doesn't work for methods used as callbacks.

What about you guys? How do you keep your callbacks sane and organized?",1.0,3,0,3,2023-04-14T10:37:59Z,12lkuq9,t3
82,Python,openai_pricing_logger: A Python package to easily log your OpenAI API costs and timestamps,"Hey everyone! Ive created a Python package called openai\_pricing\_logger that helps you log OpenAI API costs and timestamps. It's designed to help you keep track of API usage and related costs, providing an easy way to monitor and analyze the expenses.

&amp;#x200B;

GitHub repo: [https://github.com/yachty66/openai\_pricing\_logger](https://github.com/yachty66/openai_pricing_logger)

Python package: [https://pypi.org/project/openai-pricing-logger/0.0.2/](https://pypi.org/project/openai-pricing-logger/0.0.2/)

&amp;#x200B;

Key features:

\- Automatically logs API call costs and timestamps

\- Easy integration with OpenAI's GPT-3.5-turbo and GPT-4 models

\- Lightweight and easy to use

&amp;#x200B;

Thought this might be helpful for anyone working with OpenAI's API. Enjoy!",0.91,213,0,213,2023-04-14T06:43:24Z,12lec2s,t3
83,Python,"Bing AI made up a package that doesn't, but maybe should, exists and even gave examples of how to use it. Read/Write session splitter for sqlalchemy.","I notched today that my skype has a Bing chatbot built into it now, so I thought I'd see what it had to say about what I'm working on.

https://preview.redd.it/jyepb53opqta1.png?width=1030&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=9c9a2d68dbbd41a7862e21138f275f07128c6348

As far as I could find,  there is no package named sqlalchemy-splitter, or even something that works similar to the way they describe it.

https://preview.redd.it/jzbz3ii7qqta1.png?width=1030&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=54c2b88f97a79516885086864b055ed92a7f893d

It seems pretty sure of itself.  After thinking about it though It seems like a package like this would probably have to do a lot of extra work in order to manage both sessions and move objects between them. Maybe its not as difficult as I'm thinking though?

Either way,  when I called it out it immediately back peddled.

&amp;#x200B;

https://preview.redd.it/u5ugk60gtqta1.png?width=1026&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=4c6110cdf68ee3edfbc52db549e2ca4b7d5864fe",0.84,59,0,59,2023-04-14T05:47:44Z,12lcp6j,t3
84,Python,Python File manager,"Hi, I recently created a post about a file manager in it's early stages, and got some feedback that I should create a GUI so Ive created a GUI version of the file manager using Tkinter and I've left the command line version too. If anyone wanted to check it out and provide feedback on it I would appreciate it üòÉ. Here is the link to my github repository:

https://github.com/Tristan296/FileManager",0.91,51,0,51,2023-04-14T04:03:39Z,12l99zp,t3
85,Python,Build a ChatGPT-like SMS Chatbot with OpenAI and Python,,0.35,0,0,0,2023-04-14T01:56:26Z,12l2kqo,t3
86,Python,I made a simple gui to use whisper.cpp in python.,"[https://github.com/wuyudi/autosrt](https://github.com/wuyudi/autosrt)

just download and use :)

Usage: generate srt file from video or audio.

[ui](https://preview.redd.it/6ouj74vg2pta1.png?width=427&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=0353ef78f3f5c0eaa7b885c523355e35388996a5)

it's fully offline, so you don't need to worry about API usage anymore lol.

just a hobby project, hope it is useful.",0.72,15,0,15,2023-04-13T23:57:09Z,12kyfl4,t3
87,Python,Balacoon: python package for text-to-speech,"Hi,

If you are looking for speech synthesis lib, check out software by [Balacoon](https://balacoon.com/).  
A demo can be found on huggingface: [https://huggingface.co/spaces/balacoon/tts](https://huggingface.co/spaces/balacoon/tts).

There are:

* python package compatible with manylinux to run synthesis locally on CPU
* docker container to quickly set up a self-hosted synthesis service on a GPU machine

Things that make Balacoon stand out:

* streaming synthesis, i.e., minimal latency, independent from the length of utterance
* no dependencies or Python requirements. The package is a set of precompiled libs that just work
* production-ready service which can handle quite a high load of requests with just a single GPU (see blog post [https://balacoon.com/blog/tts\_endpoint/](https://balacoon.com/blog/tts_endpoint/))

As a side note, check out our any-to-any voice conversion demo distributed as an android app: [https://play.google.com/store/apps/details?id=com.app.vc](https://play.google.com/store/apps/details?id=com.app.vc)",0.75,4,0,4,2023-04-13T22:49:19Z,12kwbn3,t3
88,Python,codecov gone from PyPi,"The codecov package (all versions of it) seems to have disappeared from PyPi 

[https://pypi.org/project/codecov/](https://pypi.org/project/codecov/) &lt;-- 404 :(

I'm assuming this breaks a ton more than just my project ([https://github.com/locustio/locust/actions/runs/4687344723/jobs/8315803536](https://github.com/locustio/locust/actions/runs/4687344723/jobs/8315803536))

Does anybody know anything?",0.87,53,0,53,2023-04-13T21:52:56Z,12kukhk,t3
89,Python,__str__ &amp; __repr__: Change String Representation In Python,"&amp;#x200B;

https://preview.redd.it/0rafjxemznta1.png?width=1600&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=b9724a0dc918a1aa5bb3cdba3b654db577b67c8d

In the program output, we can represent Python strings in two ways. Python supports both informal and formal string representations. When we run the Python program to print the string, we get an informal representation of it in the output.

The `__str__` method in Python is responsible for the informal representation of the object, which we can change to the formal representation by using the `__repr__` method.

We'll discuss these dunder methods named `__str__` and `__repr__` and how they are used for changing the representation of the string.

**Here's the complete guide on how \_\_str\_\_ and \_\_repr\_\_ methods are used to change the string representation of the objectsüëáüëá**

[\_\_str\_\_ &amp; \_\_repr\_\_: Change String Representation In Python](https://geekpython.in/str-and-repr-in-python)",0.5,0,0,0,2023-04-13T20:18:24Z,12kroqt,t3
90,Python,How to Get the Most Out of PyCon US ‚Äì Real Python,,0.3,0,0,0,2023-04-13T20:01:07Z,12kr616,t3
91,Python,Code editor powered by AI [experimental][work in progress],,0.25,0,0,0,2023-04-13T19:22:09Z,12kpylb,t3
92,Python,Federated-Recommendation-Neural-Collaborative-Filtering,"Neural Collaborative Filtering (NCF) is a paper published in 2017. It is a common methodology for creating a recommendation system. However, recommendation data might not want to be shared beyond your own device. Therefore, last year, I looked into applying this ML algorithm in a Federated Learning setting, where your data stays on your own devices.  


[AmanPriyanshu/Federated-Recommendation-Neural-Collaborative-Filtering (github.com)](https://github.com/AmanPriyanshu/Federated-Recommendation-Neural-Collaborative-Filtering)",0.76,2,0,2,2023-04-13T18:25:39Z,12ko8f5,t3
93,Python,A Tool for Stress Testing using Python," I have seen people debug their code like this:

1. Generate hand-crafted input.
2. Run the buggy solution with that input.
3. Manually check if the output returned is correct.
4. If it is not correct, they have a test case to debug thoroughly. Otherwise, repeat step 1.

What if you could automate this process and convert the previous steps to something like this:

1. Generate random input.
2. Run both solutions (the na√Øve one that solves the problem and the buggy one) with that input.
3. Check if the outputs differ.
4. If they do, you have a test case to debug thoroughly. Otherwise, repeat step 1.

Notice the subtle difference?

I wrote a more in-depth article explaining how to create a proper stress-testing tool using Python here:

[A Tale of Debugging: The Competitive Programmer Approach (Part II)](https://albexl.hashnode.dev/a-tale-of-debugging-the-competitive-programmer-approach-part-ii) 

Check it out and let me know your thoughts on this topic. Some have said that this is something like ""fuzz testing"". If it is, I would like to know a bit more about it.

Thanks for reading!",0.79,8,0,8,2023-04-13T18:07:59Z,12knpor,t3
94,Python,A Tale of Algorithms: Edit Distance in Web Development,,0.14,0,0,0,2023-04-13T17:21:50Z,12kmdbr,t3
95,Python,Introduction: What you need to know about Python Strings [Beginners Tutorial],,0.46,0,0,0,2023-04-13T14:27:33Z,12ki1jf,t3
96,Python,I recorded a Python Data Analysis project (pandas - numpy - matplotlib - seaborn) video in tutorial type and uploaded it on Youtube,"Hello, I made a data analysis project from scratch using Python and uploaded it to youtube with the explanations of outputs and codes. Also I provided the Data Set so everyone can run the codes for exercising. I am leaving the link, have a nice day

[https://www.youtube.com/watch?v=Za8dnxN3Vc8](https://www.youtube.com/watch?v=Za8dnxN3Vc8)",0.9,191,0,191,2023-04-13T13:01:36Z,12kg5mm,t3
97,Python,Gitbi - Lightweight BI app based on git repo,"[Gitbi](https://github.com/ppatrzyk/gitbi) is an experimental lightweight BI app that reads queries from a git repo. 

I wanted to have one central repo for all SQL queries that I can use either in a BI app for visualization or run them via command line. [Gitbi](https://github.com/ppatrzyk/gitbi) makes this setup straightforward - since there is no database holding app configuration and everything is saved in one git repo, you can edit queries using any text editor and have it immediately reflected in the app. Similarly, all queries created via web interface are immediately available as text files.

Features:

* basic visualizations with Echarts,
* ability to write PRQL queries,
* basic dashboards, reports, alerts

[https://github.com/ppatrzyk/gitbi](https://github.com/ppatrzyk/gitbi)",0.72,6,0,6,2023-04-13T12:11:41Z,12kf0g3,t3
98,Python,Is it just me or are `trio`'s function names more than a bit ridiculous?,"I'm looking to make my first dip into asynchronous single threaded concurrency, and in my googling came across NJS's ""Notes on Structured Concurrency"", which sold me on the concept for sure, but well, a lot of these names in trio seem ridiculous.

1) If we're gonna call it a `nursery`, which is a bit weird for programming but ok fine I get it, then why `start_soon`? It's two words and is linguistically clunky, and doesn't really convey well what it programmatically does. I'd prefer shorter and more precise terms like `schedule`, or even `enroll` which would continue the nursery analogy. Or heck even `spawn`, borrowing the author's own comments. Any of these are both shorter and more semantically useful imo:


    async def parent():
        print(""parent: started!"")
        async with trio.open_nursery() as nursery:
            print(""parent: spawning child1..."")
            nursery.enroll(child1)
    
            print(""parent: spawning child2..."")
            nursery.enroll(child2)
    
            print(""parent: waiting for children to finish..."")
            # -- we exit the nursery block here --
        print(""parent: all done!"")

Letting it stew a bit longer, I think `start_soon` makes me think that they don't start until *after* the `with` block, which is of course the exact opposite of the actual behavior and design. Like, I indent to list everything I want to start, then unindenting is where they start, that's what it reads like to me, which is terrible. Conversely, `enroll` helps me remember that I'm tying these tasks directly to the nursery, and therefore when I unindent from the `with nursery`, i.e. when the nursery closes, that's also when all children enrolled at the nursery are completed too. Much easier for me to read.

2) In the main core reference page, the author talks about checkpointing for like 10 paragraps, letting the event loop scheduler do its thing, which is all well and good but then says:

&gt; If you do want to be careful, or if you have some CPU-bound code that doesn‚Äôt have enough checkpoints in it, then it‚Äôs useful to know that await trio.sleep(0) is an idiomatic way to execute a checkpoint without doing anything else

Come on, after 10 paragraphs expounding about letting the event loop do it's thing, you choose an idiom whose name completely misses its semantic point and has nothing to do with checkpointing/scheduling/control flow? `sleep` is generally considered quite distinct from `yield`ing to the caller's control, if you tried to use `sleep` in a regular/synchronous generator you'd be laughed right off the internet. Not to mention having to pass in the superfluous argument. Why on earth not name it `trio.checkpoint()`? This is much better language that actually describes what the programmer intends. Or `trio.yield()` or whatever. But `trio.sleep(0)` is just ten times muddier imo.

3) And then later we talk about timeouts. I love that timeouts are the caller's problem, not the callee's problem, much like I was thoroughly swayed on the benefits of structured concurrency in general, but then *why the hack* was it not named simply `trio.timeout(x)`?? What on earth is this `trio.move_on_after()` name supposed to be? More words, more underscores, and generally linguistically clunky. In general I love using the simplest register of English possible in any particular context, but in this case ""move on after"" makes it sound like a bad romance film, not programming. If we're talking about timeouts, then lets name it `timeout` and cut the crap. (One could even argue that `timeout` continues the nursery analogy! Send those naughty tasks to the timeout corner lol)

So what gives? Am I missing something? Why do these names seem unusually awful? Normally I find NJS to be quite compelling, the blog posts are interesting, lovely, persuasive, PEP 465 is one of the best written on the internet, but these naming choices just blow my mind with their worse-than-useless-ness. I'd love to hear any of your thoughts on the matter.",0.67,6,0,6,2023-04-13T06:54:00Z,12k6yd4,t3
99,Python,Large-Scale Datamining &amp; Built a Reddit Bot for r/boardgames to reply with BGG Links,"Disclaimer: I am in no way affiliated with BoardGameGeek aside from being a user of the site.

I was inspired by u/MTGCardFetcher who replies on the Magic: The Gathering subreddits with links to the card images and text when called with a card name in double brackets. I've often found myself replying to a thread on r/boardgames with the name of a game (or, more appropriately, reading others' suggestions) without a link, making it slightly more annoying to look the game up.

As a result, I built two Python scripts - one to discover the game pages on [BoardGameGeek.com](https://BoardGameGeek.com) and extract the game name and year and another to serve as the reddit bot.

I'm used to crawling sites using Screaming Frog and had fully intended to use it to pull the game names and other details out, but it turns out BoardGameGeek uses a degree of client-side rendering, making a non-rendered request fall short of extracting data. My solution was to use Selenium to hit the pages, wait for `//h1/a` to be discoverable, then extract the text. At the time of writing this, there are just over 174,000 board game and board game expansion pages on BoardGameGeek. It took several full days to mine all the data. I stored them in a Pandas DataFrame, then pushed them to a .pickle.gz file. The game data gzipped pickle file is only 5MB in size. I also use numpy.array\_split to break the data pulls into sets of 250 URLs and looped over them. I did this in case I got a random exception so any data loss is minimal. I got a few exceptions related to running out of memory or the browser session no longer being available, so it paid off to do it this way.

The bot, which I've tested but is not currently running live, was fun to build too. I've had to think through the various ways people might call the bot to deliver the link to a game. Most importantly, there will be misspellings or incompleteness. So the first thing I do is search for an exact match of the game name that is called (ignoring the string case). It's more of a partial exact match. For instance, if you called the game ""Everdell"", there is Everdell proper and also all of its expansions. If that returns data, it then moves into fuzzy matching the game name to one of the names in the returned exact match set. If the exact match search returns nothing, it turns the game name string into a regular expression for each individual word and then searches the DataFrame on the regular expression, then goes into fuzzy matching on the smaller set. If neither of those work, it fuzzy matches the game name to the ENTIRE DataFrame. I'm honestly impressed with how quickly it does that for 174,000 rows of data. When it comes to the fuzzy matching, I attempt up to two different algorithms. The first is using `fuzz.token_sort_ratio`. If the confidence of that selection is below 80%, it switches to use `fuzz.token_set_ratio`. 

Overall, it's been a really fun project and I hope it gets used often and is appreciated over on r/boardgames. The moderator I spoke to seems pretty interested in it. I use Python pretty regularly in my day-to-day job, but it's all self-taught, that's why I've made the decision to make it open source. I plan to launch the bot into production from my server in the next few days.

You can check out all the code on my [Github repo](https://github.com/HgCNO2/reddit-bggfetcherbot).",0.8,17,0,17,2023-04-13T06:15:40Z,12k5yfb,t3
100,Python,I made an advanced math flash card game in python using tkinter!,"[Gameplay](https://i.redd.it/n8wmei9opjta1.gif)

**Features**

* Score and Highscore System
* Timed Flash Card Gameplay
* Dynamic Settings for *Time*, *Difficulty*, and *Operation*
* Game Log System to Track Your Progress
* User Management System
* User Data Encryption to Deter Tampering and Cheating
* Fully Implemented Sound Effects
* User Grading System to Track Overall Performance
* Anti Problem Duplication System

&amp;#x200B;

[User Screen](https://i.redd.it/wdom9jnppjta1.gif)

[Settings Screen](https://i.redd.it/mgwhj3hqpjta1.gif)

[Logging Games](https://i.redd.it/q2qm08brpjta1.gif)",0.95,65,0,65,2023-04-13T05:54:32Z,12k5djw,t3
101,Python,Pok√©Search: FastAPI + React (Open Source),"# Context

Hey everyone, I'm new to the Pok√©mon games and currently I'm playing the latest one. When playing online, you have to to pick your team based on your enemy's team. However, it's difficult for me because I'm not familiar with most of the Pok√©mon types and you can't see their names to look them up.

# Pok√©Search

That's why I created Pok√©Search, a web app that allows you to search for a Pok√©mon based on characteristics. For example, if you search for the word ""green"" all green Pok√©mon will appear (other search examples: robot, red, legendary, eevee, water, fire).

**Live web app:**

[https://pokesearch.help/](https://pokesearch.help/)

# Technical Details

The API is made with FastAPI and the frontend with React + Tailwind. 

The API is in charge of providing a list of all the Pok√©mon given a region, along with their respective types, resistances, and weaknesses. The frontend then filters the list based on user input.

Backend repo:  
[https://github.com/jalvaradosegura/PokeSearchAPI](https://github.com/jalvaradosegura/PokeSearchAPI)

Frontend repo:

[https://github.com/jalvaradosegura/PokeSearch](https://github.com/jalvaradosegura/PokeSearch)",0.94,136,0,136,2023-04-13T05:32:03Z,12k4qhe,t3
102,Python,"Thursday Daily Thread: Python Careers, Courses, and Furthering Education!","Discussion of using Python in a professional environment, getting jobs in Python as well as ask questions about courses to further your python education!

**This thread is not for recruitment, please see** r/PythonJobs **or the thread in the sidebar for that.**",0.82,9,0,9,2023-04-13T05:30:11Z,12k4o7f,t3
103,Python,What do you think about this code?,"&amp;#x200B;

[Example of Vampire code](https://preview.redd.it/s3z0ih6glita1.png?width=850&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=10f5b4f07c13ee49acf9653e63b6afa64bc6582c)

What do you think about this code? I mean, do you like it, its syntax and clarity? Personally, I do. Too bad I made it up myself =)

No offense to Python developers, but I've been programming and developing in Python for five years, with varying intervals and pauses, but I've tried my hand at quite a few different projects in that time and encountered quite a few problems.

But the main problem of Python for me was the difficulty in developing large projects. Perhaps (and most likely) it's my personal problem, but I was just get ache in my eyes from looking through thousands of lines of code, where because of the features you need to add initially as if not intended there docstrings and type hints. The latter, by the way, are just ""sugar for the developer"" because they have no real value for the pure Python itself (mypy and pydantic are not pure Python for me).

No, I really like Python, it's extremely good with its large community and PyPi, low entry for those who just started to learn programming and well thought out language and its architecture, such as PEP manifests and the philosophy itself through ""zen of python"". But sometimes I feel like it was purposefully designed as a scripting language for single-file programs or few-class libraries.

I've also been studying Java, but honestly I'm intimidated by the fact that to write ""rock-paper-scissors"" I need to import a hundred classes and where I need to dance with tambourine to create a windowed ""hello world"". I also tried other languages, such as Rust, Golang, C/C+, and although they are good for complex and high-loaded tasks, but in my opinion they also have poor syntax and are quite repulsive to juniors in programming.

That's why I've been nurturing in my head the idea of creating my own elaborate programming language, which could become the next step in the world of big development for programmers who have studied and understood Python and understand its pros and cons very well.

The above is just an example based on my vision of good syntax. But beyond that I am working on a philosophy of the language, one of the concepts which would definitely include thoughtfulness of the written code, further compilation to a high-loaded project, as well as convenient configs for projects with listed versions of libraries used and the language itself for easy deployment. Syntax abbreviations were removed specifically to create a function or variable during the development to remind the programmer once again to think about why to create it.

The purpose of this post was not to offend anyone who uses any of these languages, and I apologize if it offended you, it's just my personal opinion (!) formed by a lot of time using different programming languages, although most of them are Python. I hope to find people who share my point of view. Also, by this post I wanted to hear criticism, opinion or possible advice from more experienced developers, and perhaps people who would like the idea of a new programming language ""Vampire"" with ambitious goals, and who would be willing to try to join the development.

[You can see a full example of pseudocode in my made-up language here](https://pastebin.com/2gw5i1yj)

Have a nice day and good luck with your projects =)",0.39,0,0,0,2023-04-13T03:06:10Z,12k07z8,t3
104,Python,[P] Create a question answering over docs bot with one line of code,"# QnA Bot

I plan to make it much better so that QnA bots become more accessible. Tell me if you like it.

https://github.com/momegas/qnabot

```bash
pip install qnabot
```

```python
from qnabot import QnABot
import os

os.environ[""OPENAI_API_KEY""] = ""my key""

# Create a bot üëâ with one line of code
bot = QnABot(directory=""./mydata"")

# Ask a question
answer = bot.ask(""How do I use this bot?"")

# Save the index to save costs (GPT is used to create the index)
bot.save_index(""index.pickle"")

# Load the index from a previous run
bot = QnABot(directory=""./mydata"", index=""index.pickle"")
```

### Features

- [x] Create a question answering bot over your documents with one line of code using GPT
- [x] Save / load index to reduce costs (Open AI embedings are used to create the index)
- [x] Local data source (directory of documents) or S3 data source
- [x] FAISS for storing vectors / index
- [ ] Support for other vector databases (e.g. Weaviate, Pinecone)
- [ ] Customise prompt
- [ ] Expose API
- [ ] Support for LLaMA model
- [ ] Support for Anthropic models
- [ ] CLI / UI",0.43,0,0,0,2023-04-13T00:19:56Z,12juy5b,t3
105,Python,Best job boards for employers,My company is beginning the process of hiring and would like to know which job boards pythonistas are using these days.,0.83,16,0,16,2023-04-12T23:38:38Z,12ju1oj,t3
106,Python,"idea for additional print shortcut . print(,,) ="",""","So when typing 
&gt;x=2
&gt;y=7
&gt;Print(x,,y) 
Out: 2 , 7",0.13,0,0,0,2023-04-12T20:42:33Z,12jp8mp,t3
107,Python,A decorator that uses GPT3 to run a function.,"A very small GPT project I made.

https://github.com/MxDkl/funcGPT",0.45,0,0,0,2023-04-12T20:23:18Z,12jooaj,t3
108,Python,Why we dropped Docker for Python environments,"TL;DR  Docker is a great tool for managing software environments, but we found that it‚Äôs just too slow, especially for exploratory data workflows where users change their Python environments frequently.

We  find that clusters depending on docker images often take 5+ minutes to  launch. Ouch. In Coiled you can use a new system for creating software environments on the fly using only mamba instead. We‚Äôre seeing start times 3x faster, or about 1‚Äì2 minutes.

This article goes into the challenges we (Coiled) faced, the solution we chose, and the performance impacts of that choice.

[https://medium.com/coiled-hq/just-in-time-python-environments-ade108ec67b6 ](https://medium.com/coiled-hq/just-in-time-python-environments-ade108ec67b6)",0.85,278,0,278,2023-04-12T20:18:36Z,12jojj7,t3
109,Python,Which web framework is ‚Äúking‚Äù?,"Hi Python community,

Was a fairly intermediate python user (as a hobbyist not professional), but stepped away from coding for a few years to focus more on my family.

Recently, I‚Äôve come up with a decent idea and think I‚Äôve got enough free time to develop a webapp that will become a passive revenue steam for me.

Since the last time I‚Äôve coded, it looks like there are quite a few new web frameworks making there way around the community. I‚Äôve really only used flask and know/understand the difference between that and Django.

My question: are any of these new frameworks worth exploring? Is there any pros and cons list out there that compares a few against each other?

Fwiw, my project will essentially have input tables, a form a user populates, and a front end that visualizes the results (think dashboards) of a process that measures the inputs and form responses. 

Appreciate any and all feedback!",0.53,1,0,1,2023-04-12T19:52:41Z,12jnsh3,t3
110,Python,Quartodoc: a quarto-based alternative to sphinx,,0.43,0,0,0,2023-04-12T18:07:55Z,12jkvjg,t3
111,Python,A web portal focusing on tutorials in Python,"Hello everyone,

Hope you are doing fine. I would request you to refer to my website for some interesting beginners tutorials on Python:

https://sapnaedu.com/

I intend to cover topics like automation, web scraping, django, FastAPI.

Thanks",0.57,1,0,1,2023-04-12T17:28:26Z,12jjtln,t3
112,Python,Tutorial on Web Scraping with Python: create your first Python scraper,,0.43,0,0,0,2023-04-12T16:09:23Z,12jhwv4,t3
113,Python,API Wrapper for Open-Meteo API,"Hello guys,just ended the work on a librairy that uses Open-Meteo ,Open-Meteo is an open-source weather API with free access for non-commercial use. No API key is required. you can use the library to get a lot of meteorological data,maritime,air quality and even floods.

Historical data can be pulled from 1940 to today.

link to the repo : [https://github.com/m0rp43us/openmeteopy](https://github.com/m0rp43us/openmeteopy)

Any review or help would be appreciated,thanks",0.87,6,0,6,2023-04-12T15:51:58Z,12jhjjq,t3
114,Python,Interfaces in Python," In programming, an interface is a set of rules or guidelines for a class or object to follow. It defines a contract for the class or object, outlining the methods and properties that must be implemented.

An interface does not provide an implementation for the methods or properties, but instead, it defines a blueprint for classes or objects to follow. It is commonly used to provide a common set of methods for different classes or objects to implement, which can then be used interchangeably.

In Python, interfaces are not a built-in feature like in some other programming languages such as **Java** or **C#**. However, you can use abstract base classes (ABCs) to achieve a similar effect.

I wrote about the use of interfaces in Python here:

\-  [Python Interfaces: Realistic View (Part I)](https://albexl.hashnode.dev/a-tale-of-object-oriented-programming-a-realistic-look-at-python-interfaces)   
\-  [Python Interfaces: Realistic View (Part II)](https://albexl.hashnode.dev/a-tale-of-object-oriented-programming-a-realistic-look-at-python-interfaces-part-ii)

But this is the way I would use interfaces for solving similar problems to the ones proposed in the articles. I'm interested in how would people in this community use interfaces for similar problems.

Let's start a fruitful discussion!",0.74,10,0,10,2023-04-12T15:01:10Z,12jghhf,t3
115,Python,Question regarding my worries about the Applied Data Science Program by MIT and Great Learning,"Hello everyone, I was thinking of participating in the Applied Data Science Program from Great Learning and MIT. I have a couple of questions, first of all is it worth doing it to enhance your knowledge and improve your CV? Second, is it a legit program? I mean it is from MIT but Great Learning is a legit organisation or is probably a small scam let's say?",0.33,0,0,0,2023-04-12T14:12:14Z,12jfhuu,t3
116,Python,Permanently add Subtitles to a Video Using Python and Moviepy,"Hi folks, 

If you are looking for an easy way to add subtitles permanently into a video using Python and MoviePy, I have written an easy-to-use Google Colab Notebook that you can try out:

[https://github.com/ramsrigouthamg/Supertranslate.ai/tree/main/Burn\_Subtitles\_Into\_Video](https://github.com/ramsrigouthamg/Supertranslate.ai/tree/main/Burn_Subtitles_Into_Video)",1.0,4,0,4,2023-04-12T13:58:54Z,12jf83k,t3
117,Python,Running Python micro-benchmarks using the ChatGPT Code Interpreter alpha,,0.4,0,0,0,2023-04-12T13:41:23Z,12jeukq,t3
118,Python,Algebraic Data Types in (typed) Python,,0.93,18,0,18,2023-04-12T13:09:18Z,12je601,t3
119,Python,üöÄ Introducing GoRules: Open-Source Business Rules Engine,"Hi r/Python,

We've recently developed and published an open-source business rules engine in Rust with native bindings for Python and Node.js. We're excited to share a new blog that describes serverless deployment using AWS S3 and Lambda. You can find it here: [https://gorules.io/blog/python-rules-engine-lambda](https://gorules.io/blog/python-rules-engine-lambda).

**What is GoRules?**

[GoRules](https://gorules.io) is a modern, open-source rules engine designed for high performance and scalability. Our mission is to democratise rules engines and drive early adoption. Rules engines are very useful as they allow business users to easily understand and modify core business logic with little help from developers. You can think of us as a modern, less memory-hungry version of [Drools](https://drools.org/) that will be available in many languages and on many platforms. We prioritise:

* High performance: You can execute thousands of decisions in a second
* Ease of use: We are obsessed with making the best experience for business users
* Flexible deployment: GoRules can be deployed on-premise, in serverless environments or embedded in existing service(s)

**Community**

We are very keen on listening to the community for suggestions and any issues you may face. Feel free to open issues and discuss them below if you have found the project to be useful or are excited about it.

**Relevant Links**

GitHub Repository: [https://github.com/gorules/zen](https://github.com/gorules/zen) (if you like the project please give us a ‚≠êÔ∏è)

PyPI: [https://pypi.org/project/zen-engine/](https://pypi.org/project/zen-engine/)",0.68,7,0,7,2023-04-12T13:05:21Z,12je354,t3
120,Python,PSF expresses concerns about a proposed EU law that may make it impossible to continue providing Python and PyPI to the European public,,0.98,320,0,320,2023-04-12T11:08:22Z,12jbj6v,t3
121,Python,jeremarc - Understand Python Environment management through a hiking trip.,,0.76,2,0,2,2023-04-12T11:02:13Z,12jbe3m,t3
122,Python,Getting started with Django Rest Framework,"In this article, we'll create a project that posts about rants using Django and Django Rest Framework. We'll use Django's built-in slugify method and override its save() method to automatically create a slug for each rant. We'll also use a third-party package called drf-writable-nested to handle the serialization of a ManyToManyField in the model.

https://vicentereyes.org/getting-started-with-django-rest-framework",0.72,3,0,3,2023-04-12T09:49:22Z,12j9ogc,t3
123,Python,Crack Python Skill Assessments: LinkedIn Quizzes with Detailed Answers,"Are you looking to ace your Python skill assessments on LinkedIn? Look no further! This comprehensive guide is designed to help you crack Python skill assessments with ease by providing you with LinkedIn quizzes and detailed answers.

With Python being one of the most widely used programming languages for various applications, having a strong command of Python skills is essential for any aspiring developer or professional. LinkedIn Skill Assessments offer a valuable way to showcase your expertise in Python and enhance your professional profile. However, these assessments can be challenging, requiring a deep understanding of Python concepts and practical application of skills.

This guide is tailored to help you excel in [Python skill assessments](https://www.rbtechtips.com/linkedin-python-assessment-answers/) on LinkedIn. It features a collection of quizzes that cover a wide range of Python topics, including data types, operators, control flow, functions, classes, modules, and more. These quizzes are carefully crafted to reflect the types of questions commonly asked in LinkedIn skill assessments, providing you with valuable practice and exposure to the actual assessment format.

But what sets this guide apart is the inclusion of detailed answers for each quiz. The answers are comprehensive, explaining the correct solutions and providing insights into the reasoning behind them. This allows you to not only learn the correct answers but also understand the underlying concepts and principles, helping you to reinforce your knowledge and improve your problem-solving skills.

Whether you are preparing for a job interview, aiming to improve your Python skills, or simply looking to enhance your LinkedIn profile, this guide will be your invaluable companion. By leveraging the quizzes and detailed answers, you can confidently approach Python skill assessments on LinkedIn, crack them, and showcase your expertise to potential employers or connections.

&amp;#x200B;",0.29,0,0,0,2023-04-12T09:12:10Z,12j8qxc,t3
124,Python,"GLaDOS, a fully open chatbot","GLaDOS is a permissively licensed chatbot along with a little web UI to self host conversations. It uses GPTNeox20B as the base model and outputs github flavored markdown so conversations can have tables, lists, and similar like ChatGPT.  [https://github.com/JamesDConley/GLaDOS\_Server](https://github.com/JamesDConley/GLaDOS_Server) There's some samples in the README :D  


Similar models (such as LLAMA and VICUNA) are only available under a non-commercial license because of LLAMA's licensing, so I put this together with open-source resources to make what I believe is the first apache 2.0 or similarly open model that outputs markdown/conversations in the style of ChatGPT. It's still a far cry from the real thing of course, but it can do a lot! There's examples in the README",0.89,17,0,17,2023-04-12T08:27:09Z,12j7k7j,t3
125,Python,Python Magic: How to do Screen Recording of a specific window and save it as animated GIF: Code included,"Check this out!  
[https://medium.com/@neonforge/python-magic-how-to-do-screen-recording-of-a-specific-window-and-save-it-as-animated-gif-code-db8406f9aafd](https://medium.com/@neonforge/python-magic-how-to-do-screen-recording-of-a-specific-window-and-save-it-as-animated-gif-code-db8406f9aafd)",0.63,4,0,4,2023-04-12T08:24:13Z,12j7hci,t3
126,Python,Application size,"At what point is an application too big for python too handle quickly? Say for example I have an application for 10 users, what about 100, 1000, etc. At what point should one sacrifice the ease of use and great data analysis tools in python in favor of the speed of something like rust or C#?
Edit: 

Question is out of curiosity. And because I work for a company and wrote an application with a user base of around 1k. I was wondering if python would see performance issues.",0.65,4,0,4,2023-04-12T07:55:40Z,12j6pxi,t3
127,Python,"If you're a beginner interested in data science and machine learning, I recently produced a video series that goes through all of the major algorithms and their implementations in Python! I put a lot of work into each tutorial, so hopefully this helps out!",,0.92,672,0,672,2023-04-12T07:36:57Z,12j68f7,t3
128,Python,Wednesday Daily Thread: Beginner questions,"New to Python and have questions? Use this thread to ask anything about Python, there are no bad questions!

This thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response.",1.0,1,0,1,2023-04-12T05:30:11Z,12j2rz4,t3
129,Python,Modern Python tooling suggestions,"I have been out of the Python game for a few years (nearly 10), and I need to get back in to do some ML-related work (doesn't everyone). I am trying to orient myself around the state-of-the-art with respect to tooling. I have been doing Haskell, Racket and Rust lately with language server (or equivalent); I was hoping to recreate that feel as much as possible without being too non-pythonic. There seems to be a sea of options out there so I need some opinions:

- setup.py seems to no longer be the only game in town what are the alternatives manifest styles and which one is the friendliest to lsp.
- `pylsp` seems to more or less work out of the box, but it's having a hard time following function definitions into dependencies and finding references of functions in installed modules. Should I keep trying to [troubleshoot](https://stackoverflow.com/questions/75890022/pylsp-cant-find-installed-editable-packages) or is there a better alternative? 
- Managing virtual environments also seem to have become bit more layered than just `virtualenv ---no-site-packages ./venv/`. What is the kool aid regarding this.
- Are editable/develop packages still the right way for managing packages?

Thanks and sorry about the diverse post. I would like to hear people's subjective thoughts on this, I understand that at least some of this stuff is a matter of taste.

PS. I would like to keep this editor/IDE agnostic as I am unwilling to leave emacs but any comments on that are welcome too.",0.5,0,0,0,2023-04-12T04:33:02Z,12j14cq,t3
130,Python,I used Python to make a BizBuySell web scraper to get businesses for sale in a given state. I used aiohttp to fetch requests asynchronously. The code has a rate limiter as well!,"Hey friends! Back again with another python web scraping project.

A founder reached out to me to know if it was possible to scrape BizBuySell for businesses for sale in a specific state. They needed the data for business development. I never scraped this site so I was up for a new challenge.

At first I ran into issues with bot blocking. They use Akamai CDN. However, with a bit more research, I managed to get the data. The site was not too difficult compared to others. No dynamic javascript which means no need to use selenium. I only fetched the first 12 pages to keep the demo short. Happy to answer any web scraping questions.

Youtube demo: [How to scrape BizBuySell with Python](https://youtu.be/uDV4BI0yw1Y)

Source code on Github: [How to scrape BizBuySell with python](https://github.com/nodox/bizbuysell-scraper)",0.73,8,0,8,2023-04-12T02:43:26Z,12ixw47,t3
131,Python,I created a one-liner QnA over docs bot with LangChain and GPT. Do you like it?,[https://github.com/momegas/qnabot](https://github.com/momegas/qnabot),0.23,0,0,0,2023-04-12T02:04:30Z,12iwowi,t3
132,Python,Boost Your Python Skills with These Essential Built-In Methods,"Looking to enhance your Python programming skills and simplify your code? Check out this article on essential built-in methods in Python! You'll learn about methods like abs(), dict(), filter(), zip(), and others, and how to use them in your own Python code. Improve your data manipulation, type checking, and iteration skills with examples and use cases. Read the full article and take your Python skills to the next level! #Python #programming #datamanipulation #types #iteration #coding  


[https://danielbuilescu.com/blogs/learn-python/boost-your-python-skills-with-these-essential-built-in-methods](https://danielbuilescu.com/blogs/learn-python/boost-your-python-skills-with-these-essential-built-in-methods)",0.33,0,0,0,2023-04-12T01:58:53Z,12iwii1,t3
133,Python,I just finished my project for a hackathon and i think you should check it out,"It's a recipe web app which uses the spoonacular api (the free tier so if it does'nt work today maybe tomorrow) and also includes subscription (not really). I used flask for the backend and bootsrap for the frontend. It's hosted on pythonanywhere. This is the link [Recipe App](http://spartachus345.pythonanywhere.com/)

Github [Github Repo](https://github.com/Spartachus/Chef-s-Recipes)

It looks better on pc or wider screen

It's not really perfect but it's nice",0.44,0,0,0,2023-04-12T01:17:53Z,12iv91i,t3
134,Python,Introducing Markdown Code Runner: Automatically execute code blocks in your Markdown files! üöÄ,"Hey r/Python!

I recently developed a Python package called **Markdown Code Runner** (`markdown-code-runner`) that allows you to automatically execute code blocks within a Markdown file, including hidden code blocks, and updates the output in-place. This can be super useful for maintaining Markdown files with embedded code snippets, ensuring that the output displayed is always up-to-date and accurate. It also enables generating content like tables, plots, and other visualizations directly from the code.

GitHub Repository: [https://github.com/basnijholt/markdown-code-runner](https://github.com/basnijholt/markdown-code-runner)

**Key Features:**

- Automatically execute code blocks, including hidden code blocks, within a Markdown file
- Allows hidden code blocks to generate content like tables, plots, etc.
- Works with Python and Bash code blocks
- Keeps the output of the code blocks up-to-date
- Easily integrates with GitHub Actions
- No external dependencies and works with Python 3.7+

**Why Markdown Code Runner?**

When creating Markdown files with code examples, it's essential to keep the output of these code snippets accurate and up-to-date. Manually updating the output can be time-consuming and error-prone, especially when working with large files or multiple collaborators. In addition, there might be cases where hidden code blocks are needed to generate content such as tables, plots, and other visualizations without displaying the code itself in the Markdown file.

`markdown-code-runner` solves this problem by automatically executing the code blocks, including hidden ones, within a Markdown file and updating the output in-place. This ensures that the displayed output is always in sync with the code, and content generated by hidden code blocks is seamlessly integrated.

‚≠êÔ∏è GitHub Repository: [https://github.com/basnijholt/markdown-code-runner](https://github.com/basnijholt/markdown-code-runner) ‚≠êÔ∏è",0.92,78,0,78,2023-04-12T00:59:42Z,12iupj2,t3
135,Python,Made a hangman game,"I made the following hangman game with no additional help and wanted to share it!

The following explains what things the program checks for/does.

Firstly, it replaces any unknown letters with an '\_' and skips over white spaces, enabling you to play with sentences as well. It also checks for any repeated guesses, whether correct or incorrect. The program also checks for accidental spaces (' '), but not for characters such as '\[\].' Additionally, it prevents any guess that is longer than a single character. Finally, when a letter is either guessed correctly or incorrectly, the image and word(s) are updated.

If you have any advice or comments regarding the code, I would love to hear them.

[https://github.com/SlyFryFrog/Hangman](https://github.com/SlyFryFrog/Hangman)",0.75,2,0,2,2023-04-12T00:52:03Z,12iuhap,t3
136,Python,Blake2Signer: simple and straightforward library to securely sign data using BLAKE,"Hey there, Reddit!

This is a project I've been working on for a while now, and I would love to ""put it out there"".

The goal of this project is to provide a *simple* and *straightforward* way to *securely sign* data using [BLAKE in keyed hashing mode](https://docs.python.org/3/library/hashlib.html#keyed-hashing), with a secret key.

This can be used, in example, when you need to send some data that could be tampered by the user, like a payment authorization, or a login token. This data travels in plaintext, and can be read, but it can't be modified in any way once signed!.

It is similar to [itsdangerous](https://itsdangerous.palletsprojects.com/) in the sense that both achieve the same goal, but in very different ways.

Head over to **[the docs](https://blake2signer.hackan.net)** for **examples**, **usage details**, comparisons with other libraries, and more. Or go straight to the [source](https://gitlab.com/hackancuba/blake2signer)!

For installation, this package is hosted on PyPi, so you know the drill:

* python3 -m pip install blake2signer
* poetry add blake2signer
* pipenv install blake2signer

You can check the [releases' page](https://gitlab.com/hackancuba/blake2signer/-/releases) for package hashes and signatures.

It is compatible with CPython 3.7+ and PyPy 3.7+ (and technically with Stackless Python 3.7+, but since it seems to be deprecated, I won't we going the extra mile to support it). It's not just a saying, I'm actually testing and ensuring compatibility [in the CI](https://gitlab.com/hackancuba/blake2signer/-/pipelines).

Let me know if you've used it, if you find it useful, and what's your opinion in general :)

---

If you've made it this far, here's a usage example for you (there are way more in [the docs](https://blake2signer.hackan.net)):

```python
from blake2signer import Blake2Signer


secret = ""setec astronomy""
payload = ""Hi Reddit!""

signer = Blake2Signer(secret)

signed = signer.sign(payload)
print(""Signed:"", signed.decode())
# Signed: ....Hi Reddit!

unsigned = signer.unsign(payload)

assert payload == unsigned.decode()
```",0.75,4,0,4,2023-04-12T00:15:39Z,12itcst,t3
137,Python,New release of FastKafka improves testability,"We were searching for something like FastAPI for Kafka-based service we were developing, but couldn‚Äôt find anything similar. So we shamelessly made one by reusing beloved paradigms from FastAPI and we shamelessly named it FastKafka. The point was to set the expectations right - you get pretty much what you would expect: function decorators for consumers and producers with type hints specifying Pydantic classes for JSON encoding/decoding, automatic message routing to Kafka brokers and documentation generation.

[https://github.com/airtai/fastkafka](https://github.com/airtai/fastkafka)

The new release adds in-memory Kafka broker that can be used for testing without the need to install Java and start a broker. It allows you to write a simple-to-understand tests such as this one:

```
from fastkafka.testing import Tester

msg = IrisInputData(
    sepal_length=0.1,
    sepal_width=0.2,
    petal_length=0.3,
    petal_width=0.4,
)

# Start Tester app and create InMemory Kafka broker for testing
async with Tester(kafka_app) as tester:
    # Send IrisInputData message to input_data topic
    await tester.to_input_data(msg)

    # Assert that the kafka_app responded with IrisPrediction in predictions topic
    await tester.awaited_mocks.on_predictions.assert_awaited_with(
        IrisPrediction(species=""setosa""), timeout=2
    )


```",0.87,11,0,11,2023-04-11T23:51:17Z,12isl07,t3
138,Python,pyright-polite: An intelligent cross-platform wrapper for pyright that makes it less noisy,,0.81,3,0,3,2023-04-11T21:37:20Z,12iolqk,t3
139,Python,onGAU: a UI for Stable Diffusion using DearPyGui.,"Hey! I have created a simple UI for stable diffusion using DearPyGui. It currently only supports text to image but I'll be implementing image to image and even upscaling into this UI soon. This project is just for fun, I recommend AUTOMATIC1111's web UI if you're actually planning to use SD often. Be sure to give feedback if you do try it though, thanks!

Github Link: [https://github.com/sertdfyguhi/onGAU](https://github.com/sertdfyguhi/onGAU)  


[interface of onGAU on macOS](https://preview.redd.it/tjotchnhx9ta1.png?width=2784&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=4821ba7efce75fbe72776cfdf7b82bc6bd940368)",0.84,9,0,9,2023-04-11T21:00:50Z,12inhoe,t3
140,Python,Using Python and AI to query and ask question about your audio data,"Hey there!

After receiving such a warm response to my last tutorial on extending OpenAI with new knowledge, allowing you to ask it anything your heart desires, I'm excited to share a brand new video on querying your audio data! Check it out here: [**https://youtu.be/Klf9aIxh1Lc**](https://youtu.be/Klf9aIxh1Lc)

In this video, I tackle a super common use case that I bet many of you have faced. Give it a watch, and let me know if you've experienced the same issue!

I hope you enjoy it and find it helpful. But before you dive in, please keep in mind that you'll be sending your data to an API, so it's best not to use private or sensitive information.

Here's the link to the Github Repo for your convenience: [**https://github.com/grumpyp/chroma-langchain-tutorial/tree/main/whsiper-langchain-chroma**](https://github.com/grumpyp/chroma-langchain-tutorial/tree/main/whsiper-langchain-chroma)

Happy learning!",0.62,3,0,3,2023-04-11T20:21:57Z,12ima2b,t3
141,Python,Is anyone working on edge computing solutions targeting Python?,"Many companies are now rolling out their WebAssembly based or isolated V8 edge computing serverless function solutions. 

E.g.

* [Supabase](https://supabase.com/blog/edge-runtime-self-hosted-deno-functions) (news in today)
* [Cloudflare](https://developers.cloudflare.com/workers/platform/languages/)

Most of these solutions target TypeScript/JavaScript developers. I wonder if anyone is working on edge computing solution that would target Python as the developer language? Either through WebAssembly compiled (widely supported today) or some specific Python isolation method.",0.75,4,0,4,2023-04-11T20:20:23Z,12im8cx,t3
142,Python,Python News: What's New From March 2023 ‚Äì Real Python,,0.74,7,0,7,2023-04-11T19:07:44Z,12ik6hq,t3
143,Python,What's my best option to create a webapp that incorporates pyvista and does some more computation under the hood?,"I'm building an app in python that takes a mesh and creates a 3d visualization in pyvista along other things. I'd want the app to be interactable, thus allowing to select points on the mesh, changing data, etc.

What's the best framework I can use to achieve it? Can I take one of the many available and integrate pyvista in them relatively effortlessly or is it better to go with a solution that directly supports it?

Thanks!",0.4,0,0,0,2023-04-11T19:03:08Z,12ik23w,t3
144,Python,How to Stop Testing &amp; Break Your Code Base,,0.45,0,0,0,2023-04-11T17:59:22Z,12ii9ew,t3
145,Python,Limiting concurrency in Python asyncio: the story of async imap_unordered(),,0.95,179,0,179,2023-04-11T17:53:39Z,12ii45y,t3
146,Python,pytypest: testing framework that empowers pytest (with better fixtures and parametrization),,0.77,21,0,21,2023-04-11T17:52:47Z,12ii3e0,t3
147,Python,Creating a Python discord chatbot safely on replit,,0.46,0,0,0,2023-04-11T15:12:26Z,12iekle,t3
148,Python,"Semantic search with OpenSearch, Cohere, and FastAPI",,0.66,7,0,7,2023-04-11T15:06:39Z,12iegsi,t3
149,Python,Why Python is the Best Programming Language for Beginners," 

Are you looking to start your journey into the world of coding, but not sure where to start? Look no further than Python! Python is a high-level, versatile, and easy-to-learn programming language that has become increasingly popular in recent years. Here are just a few reasons why Python is the perfect language for beginners:

1. Easy to Learn: Python has a simple and intuitive syntax, making it easy for beginners to understand and start coding quickly. It is also a high-level language, meaning that it abstracts away many of the low-level details of programming, such as memory management, allowing you to focus on the logic of your code.
2. Versatility: Python is a general-purpose language, meaning it can be used for a wide range of applications, including web development, scientific computing, data analysis, and more. This versatility makes it a great choice for beginners who are unsure what area of programming they want to focus on.
3. Large Community: Python has a huge and active community of developers who contribute to a wide range of libraries, frameworks, and tools that can make your coding journey easier and more fun. The community is also very supportive, with many resources available to help you learn and troubleshoot any issues you may encounter.
4. Job Opportunities: Python is one of the most popular programming languages in the world, meaning that there are plenty of job opportunities for those with Python skills. Learning Python can open up a wide range of career paths, from web development to data analysis to machine learning.",0.25,0,0,0,2023-04-11T14:43:21Z,12ie1al,t3
150,Python,"Spark-NLP 4.4.0: New BART for Text Translation &amp; Summarization, new ConvNeXT Transformer for Image Classification, new Zero-Shot Text Classification by BERT, more than 4000+ state-of-the-art models, and many more! ¬∑ JohnSnowLabs/spark-nlp",,0.8,11,0,11,2023-04-11T12:59:43Z,12ic599,t3
151,Python,Tuesday Daily Thread: Advanced questions,"Have some burning questions on advanced Python topics? Use this thread to ask more advanced questions related to Python.

**If your question is a beginner question we hold a beginner Daily Thread tomorrow (Wednesday) where you can ask any question! We may remove questions here and ask you to resubmit tomorrow.**

This thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response.",0.5,0,0,0,2023-04-11T05:30:12Z,12i1f6v,t3
152,Python,Python Design Patterns by Brandon Rhodes,"Stumbled upon [Python Design Patterns](https://python-patterns.guide/) today.   


I've seen a lot of discussions around Abstraction vs No Abstraction lately on Twitter. I don't have a solid position on this and don't want to get into it, but the discussion reminded me of all this architecture patterns that we can choose from. This is a great book on some of the most popular and how they apply in Python.",0.85,18,0,18,2023-04-11T03:49:31Z,12hyfx4,t3
153,Python,Yet another template for a Python library,"I made a [cookiecutter-python](https://github.com/ernestofgonzalez/cookiecutter-python) template for starting a Python library. I also followed D[ynamic content for GitHub repository templates using cookiecutter and GitHub Actions](https://simonwillison.net/2021/Aug/28/dynamic-github-repository-templates/) by Simon Willison, and created a [python-template](https://github.com/ernestofgonzalez/python-template) to quickly create GitHub repositories from it.  


I've been starting a lot of side projects lately and found Simon's blog. I hadn't considered GitHub repository templates before, because of their static nature, so always went with Cookiecutter, but this approach of rewriting the generated repo's content from a GitHub action is very helpful. I recommend you guys read the blog post if you haven't.",1.0,1,0,1,2023-04-11T03:27:48Z,12hxsjj,t3
154,Python,Procedual generated audio-tracks,"Hey, any ideas which parameters could add melody to a track generator 

My version creates this kind of tracks

[https://www.youtube.com/watch?v=k-mx1ZgKaAs](https://www.youtube.com/watch?v=k-mx1ZgKaAs)

&amp;#x200B;

The code i started with (and updated) is:

`import random`  
`from midiutil import MIDIFile`  
`import subprocess`  


`track = 0`  
`channel = 0`  
`time = 0`  
`duration = 1`  
`tempo = 280  # in BPM`  
`volume = 100`  
`mf = MIDIFile(1)`  
`mf.addTempo(track, time, tempo)`  
`mf.addProgramChange(track, channel, time, 19)`  


`notes = { ""llf"":10 ,""llllf"":120,  'b': 125,  'c': 115,  'bb': 125,  'cc': 115, 'oi':200, 'e': 105, 'f': 110 }`  
`#very high piano 105,110`  
`#clingding &gt;110`  
`#10 deep sound`  
`# generate random piano track`  
`for i in range(16000):`  
 `#if(random.randint(0,99) &gt; 50):`  
`#  tempo+=20`  
`#   mf.addTempo(track, time, tempo )`  
`#elif (tempo &gt; 20) : tempo -=20`  
  `#  if(random.randint(0,10) &gt; 1):`  
 `extramp = random.randint(0,10)`  
 `if(extramp == 3):`  


`pitch = random.choice(list(notes.values()))`  
`mf.addNote(track, channel, pitch, time, duration, volume)`  
`time+=0.25`  
 `mf.addNote(track, channel, pitch, time, duration, volume)`  
`time += 0.25`  
 `if(random.randint(0,1) == 1):`  
`pitch = random.choice(list(notes.values()))`  


`mf.addNote(track, channel, pitch, time, duration, volume)`  
`time += 0.25`  
 `mf.addNote(track, channel, pitch, time, duration, volume)`  
`time+=0.25`  
 `continue`  
`elif(extramp == 2):`  
`pitch = random.choice(list(notes.values()))`  
`mf.addNote(track, channel, pitch, time, duration, volume)`  
`time+=0.5`  
 `mf.addNote(track, channel, pitch, time, duration, volume)`  
`time += 0.5`  
 `continue`  
 `pitch = random.choice(list(notes.values()))`  
`mf.addNote(track, channel, pitch, time, duration, volume)`  
`time += 1`  
 `#else:`  
`#    pitch = random.choice(list(notes.values()))`  
`#   mf.addNote(track, channel, pitch, time, duration/3, volume)`  
`#    time += 0.3`  
`#   pitch = random.choice(list(notes.values()))`  
`#    mf.addNote(track, channel, pitch, time, duration / 3, volume)`  
`#   time += 0.3`  
`#   pitch = random.choice(list(notes.values()))`  
`#   mf.addNote(track, channel, pitch, time, duration / 3, volume)`  
`#    time += 0.3`  
`num = int((open(""num.txt"", ""r"").readlines())[0])`  
`open(""num.txt"", ""w"").writelines(str(num + 1))`  


`with open(""random_piano_track"" + ""_"" + str(num) +"".mid"", ""wb"") as output_file:`  
`mf.writeFile(output_file)`",0.75,2,0,2,2023-04-11T02:49:18Z,12hwn5c,t3
155,Python,Twitter API Reverse Engineered,"- `1.1`/`2`/`graphql` endpoints
- **No API key needed**  
- Automate account actions (tweet, dm, like, etc.)  
- Scrape (async)  
- Search (async)

[https://pypi.org/project/twitter-api-client/](https://pypi.org/project/twitter-api-client/)

[https://github.com/trevorhobenshield/twitter-api-client](https://github.com/trevorhobenshield/twitter-api-client)",0.94,54,0,54,2023-04-11T01:14:35Z,12htrim,t3
156,Python,v0.5.0 Envio: Securely manage your environment variables with encrypted profiles using GPG now!,[https://github.com/humblepenguinn/envio](https://github.com/humblepenguinn/envio),1.0,1,0,1,2023-04-11T00:57:43Z,12ht8dh,t3
157,Python,Repo comparing Streamlit with Shiny,"I get asked a lot about what Shiny can do that Streamlit can't. My answer to this is that Streamlit gets pretty tricky to work with as soon as your app grows in complexity, while Shiny is better equipped to handle both simple and complex problems. 

This is often pretty tricky to demonstrate because it's hard to express in a very simple application, but I think I figured out a good one which I've implemented in Shiny, Dash, and Streamlit. The code is located here: [https://github.com/GShotwell/streamlit-shiny-comp](https://github.com/GShotwell/streamlit-shiny-comp)",1.0,3,0,3,2023-04-11T00:47:44Z,12hsx8i,t3
158,Python,Python Library for Astronomy,"Check out my new python library for astronomy! It is aimed at providing information on the position of the sun, planets, and more. It can also deal with time, and convert between julian dates and gregorian dates (sidereal time is also calculated). View its source code at [https://github.com/PyndyalaCoder/astronomica](https://github.com/PyndyalaCoder/astronomica) and the official project page at [https://pypi.org/project/astronomica/](https://pypi.org/project/astronomica/). Please upvote! It really motivates me to make more projects. Also, don't forget to share with others! Comment below and tell me what you think! If you have any edits, bug fixes or general updates in mind, please create a fork on github and then a pull request. Thank you! If you have the time, also check out the github page and star it please! Have a great afternoon and happy programming!",0.97,98,0,98,2023-04-11T00:14:38Z,12hrxcw,t3
159,Python,Building a Network Tracking script using Wireshark and Google Maps,,0.82,7,0,7,2023-04-11T00:01:13Z,12hritp,t3
160,Python,Tutorial - Using your own data with ChatGPT,"Hi guys, I created a video on how to use ChatGPT in combination with LangChain and the Wikipedia API and Chroma to query your own data.

&amp;#x200B;

[https://youtu.be/ytt4D5br6Fk](https://youtu.be/ytt4D5br6Fk)

[https://github.com/grumpyp/chroma-langchain-tutorial](https://github.com/grumpyp/chroma-langchain-tutorial)

&amp;#x200B;

hope you enjoy it!

Excuse my poor voice, it was all without a script out of my belly!",0.61,3,0,3,2023-04-10T23:25:27Z,12hqgnn,t3
161,Python,Highly configurable resource usage/limit tracker,"Hi good people!

Cap'em is a highly configurable resource usage tracker. What does it mean? If you have resources (REST resource) that can be accessed/edited x times in y minutes or hours or days etc, you can use cap'em to track that. It's a ready-to-use docker service where you can pass your configurations and a database url (for keeping usage history) and viola! Just use the simple apis to check when is the next usage/access/edit possible and register new usage for tracking.

Why a whole new service for it? Well, it depends, for distributed systems implementing this same thing for several services is cumbersome, so one place to manage all usage tracking. However, there are so many ways to solve this problem, and cap'em is not needed. Some examples can be - simple library for rate-limiting (cap'em provides tracking per user/entity access btw), sidecar or envoy rate limiting (can be per user/entity depending on headers) etc. 

But cap'em is not just a rate-limiter, can be used to track internal usage, entity based usage (i.e. service cron), etc.

Checkout the repo =&gt; [https://github.com/Ananto30/cap-em](https://github.com/Ananto30/cap-em)

&amp;#x200B;

Disclaimer: This is an old project of mine, recently updated the codebase using Falcon and change the APIs to be more simple and easy to use.",1.0,5,0,5,2023-04-10T23:15:45Z,12hq6hl,t3
162,Python,Freelance or remote work,"Hello all, 

I've been studying and coding with Python for 3 months now. Firstly, I really enjoy is really much but I would like to ask about job opportunities, like freelance or remote work as a starter. 

And how is the job market in general, I've read several articles but it feels they are more for marketing purposes than providing information",0.4,0,0,0,2023-04-10T23:02:03Z,12hps3u,t3
163,Python,Why You Should Learn Python: The Best Programming Language for Beginners,,0.25,0,0,0,2023-04-10T22:33:02Z,12howwu,t3
164,Python,I made a two player Chess game in python using the PyGame framework for my GUI!,"This is a showcase of the project, and tutorial on how I made it:

[https://www.youtube.com/watch?v=X-e0jk4I938](https://www.youtube.com/watch?v=X-e0jk4I938)

And all the code and assets are available at this git:

[https://github.com/plemaster01/pygameChess](https://github.com/plemaster01/pygameChess)

Cheers! Hope y'all like it!",0.8,24,0,24,2023-04-10T22:10:17Z,12ho95r,t3
165,Python,Download video list from YouTube with progress bar using Python,,0.5,0,0,0,2023-04-10T21:53:20Z,12hnr61,t3
166,Python,When does it matter to only use built-ins or minimizing dependencies?,"I've been building ETL pipelines in Python professionally for over 3 years and have yet to have a circumstance where only using built-in packages makes a difference or strict dependency management (as in removing unused libs) is an issue. I'm guessing legacy systems or networks with strict outside access? 

&amp;#x200B;

I haven't thought to look but, on the surface, I don't see why it truly matters other than keeping things clean (which is enough for me). I've never measured the performance of an app when removing an unused dependency and I'm interested in hearing what situations you all have been in that required only built-ins. And I'm really interested if anyone has any metrics on app performance for unused dependencies or built-ins, which I could see being a factor in resources like serverless.",0.76,4,0,4,2023-04-10T21:04:54Z,12hmcc9,t3
167,Python,Geospatial Mapping Within a Webpage - with Streamlit,,0.8,3,0,3,2023-04-10T20:16:10Z,12hky9m,t3
168,Python,Trial on OpenAI's API for email generation,"Simple app using streamlit to test out OpenAI's API for custome email generation.

[Screenshot of the interface using StreamLit](https://preview.redd.it/05dl4co2k2ta1.png?width=1292&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=60279b2e5aba15d3c8289c0f2b47969b0c2409c0)

[Link to App](https://email-generator-neevan.streamlit.app/)",0.5,0,0,0,2023-04-10T20:12:37Z,12hkup2,t3
169,Python,typed-args: Create Command Line Interfaces with Typing,"Hey everyone,

I wanted to share with you a Python package called typed-args that I recently came across. It's a great tool for creating command-line interfaces with type annotations.

The program defines what arguments it requires, and typed-args will figure out how to parse them out of `sys.argv`. typed-args use standard python library argparse and dataclasses so no need to install any dependencies after Python 3.6. Its API is very similar to argparse.

Here's an example from argparse docs, which is rewritten with typed-args:

```python
import typed_args as ta
from typing import List, Callable


@ta.argument_parser(
    description='Process some integers.'
)
class Args(ta.TypedArgs):
    integers: List[int] = ta.add_argument(
        metavar='N', type=int, nargs='+',
        help='an integer for the accumulator'
    )
    accumulate: Callable[[List[int]], int] = ta.add_argument(
        '--sum',
        action='store_const',
        const=sum, default=max,
        help='sum the integers (default: find the max)'
    )


args = Args.parse_args()
print(args.accumulate(args.integers))
```

When run with the appropriate arguments, it prints either the sum or the max of the command-line integers. If invalid arguments are passed in, an error will be displayed.

I highly recommend checking out typed-args if you're looking for a simple and powerful way to create command-line interfaces in Python. Give it a try and let me know what you think!

[[GitHub Repo](https://github.com/SunDoge/typed-args)] [[Pypi](https://pypi.org/project/typed-args/)]

*P.S. I use ChatGPT to polish this post* :)",0.6,1,0,1,2023-04-10T19:52:08Z,12hkabm,t3
170,Python,Tutorial: Python + ChatGPT = AI Assistant,,0.27,0,0,0,2023-04-10T19:30:48Z,12hjouc,t3
171,Python,Free course: Build a modern API with FastAPI and Python,"Hello everyone! 

I've posted this course 4 months ago on this sub Reddit and it was well received. I want to do another giveaway,

All 3 coupons expire in 4 days and allow for a maximum 1k per coupon redeems.

[https://www.udemy.com/course/build-a-movie-tracking-api-with-fastapi-and-python/?couponCode=90707F6B0050F6D60303](https://www.udemy.com/course/build-a-movie-tracking-api-with-fastapi-and-python/?couponCode=90707F6B0050F6D60303)

[https://www.udemy.com/course/build-a-movie-tracking-api-with-fastapi-and-python/?couponCode=F0744D2CC6E3E1C6E622](https://www.udemy.com/course/build-a-movie-tracking-api-with-fastapi-and-python/?couponCode=F0744D2CC6E3E1C6E622)

[https://www.udemy.com/course/build-a-movie-tracking-api-with-fastapi-and-python/?couponCode=A620331B2F48333F76D7](https://www.udemy.com/course/build-a-movie-tracking-api-with-fastapi-and-python/?couponCode=A620331B2F48333F76D7)

I know the course is not top notch and can be improved a lot but honestly I hope you like it as it is. I've set the lowest price I could set for it on Udemy and I'm just grateful that it helped cover my blog hosting fees over the last 3 years.

Thank you!",0.96,648,0,648,2023-04-10T19:15:11Z,12hj9oc,t3
172,Python,Pandas or Polars to work with dataframes?,"I've been working with Pandas long time ago and recently I noticed that Pandas 2.0.0 was released ([https://pandas.pydata.org/docs/dev/whatsnew/v2.0.0.html](https://pandas.pydata.org/docs/dev/whatsnew/v2.0.0.html))   
However, I see lots of people pointing up that the (almost new) library Polars is much faster than Pandas.  
I also did 2 analyses on this and it looks like Polars is faster:  
1- [https://levelup.gitconnected.com/pandas-vs-polars-vs-pandas-2-0-fight-7398055372fb](https://levelup.gitconnected.com/pandas-vs-polars-vs-pandas-2-0-fight-7398055372fb)  
2- [https://medium.com/gitconnected/pandas-vs-polars-vs-pandas-2-0-round-2-e1b9acc0f52f](https://medium.com/gitconnected/pandas-vs-polars-vs-pandas-2-0-round-2-e1b9acc0f52f)  


What is your opinion on this? Do you like more Polars?  
Do you think Pandas 2.0 will decrease the time difference between Pandas and Polars?",0.94,78,0,78,2023-04-10T19:02:35Z,12hixyi,t3
173,Python,Python Decorators: Beginner's Guide,,0.84,17,0,17,2023-04-10T17:16:02Z,12hgccp,t3
174,Python,Python Packages: a Primer for Data People (part 1 of 2) | Dagster Blog,,0.87,25,0,25,2023-04-10T14:27:47Z,12hcni6,t3
175,Python,Ruff: one Python linter to rule them all,,0.91,359,0,359,2023-04-10T12:28:33Z,12ha6mc,t3
176,Python,Quantum Machine Learning Tutorial for Beginners,,0.56,1,0,1,2023-04-10T09:06:32Z,12h5u6g,t3
177,Python,Brain Tumor Detection Web Application using Transfer Learning: An End-To-End Project,,0.92,42,0,42,2023-04-10T07:29:42Z,12h3hvr,t3
178,Python,Monday Daily Thread: Project ideas!,"Comment any project ideas beginner or advanced in this thread for others to give a try! If you complete one make sure to reply to the comment with how you found it and attach some source code! If you're looking for project ideas, you might be interested in checking out Al Sweigart's, [""The Big Book of Small Python Projects""](https://inventwithpython.com/bigbookpython/) which provides a list of projects and the code to make them work.",1.0,2,0,2,2023-04-10T05:30:12Z,12h0ihl,t3
179,Python,Made A Getting Started Video for Auto-GPT,"Hope This can help someone

https://preview.redd.it/nna7n0bcoxsa1.png?width=1280&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=d6d04fd2742ea7d9e7d503e26d22aafdc2d5a307

[https://www.youtube.com/watch?v=ka5VI7ay3uE&amp;ab\_channel=CompassSolutions](https://www.youtube.com/watch?v=ka5VI7ay3uE&amp;ab_channel=CompassSolutions)",0.2,0,0,0,2023-04-10T03:46:29Z,12gxqll,t3
180,Python,Scrape Zillow Using Python,,0.5,0,0,0,2023-04-10T01:45:10Z,12gubuh,t3
181,Python,A Tale of Debugging: The Competitive Programming Approach,,0.9,8,0,8,2023-04-10T00:20:27Z,12gryl2,t3
182,Python,"pandas + pandera + beartype: BFFs at last. Type-check pandas data frames in ML pipelines for the good of LLaMa-kind. Arise, bug-free GPT. Overthrow all huma‚Äî*transmission terminated*",,0.42,0,0,0,2023-04-10T00:17:32Z,12grvly,t3
183,Python,Hello community,"I've been working on some open source cross platform JavaScript destop development framework in Python. I hope to simplify desktop development by making coding fun and welcome to everyone.

P.S.: The most basic program can run on only 2 lines of code.

I look forward to your contribution.

https://github.com/mitosisX/MirandaJS",0.4,0,0,0,2023-04-10T00:00:44Z,12grejb,t3
184,Python,Data/Web Scraping for a Career?,"I think, like most people, when learning first learning python I went through the ‚Äúlearn web scraping‚Äù and ‚Äúlearn web dev‚Äù with Python tutorials/courses. And I see 100‚Äôs if not 1000‚Äôs of videos on the subject of web scraping. However, I rarely ever see a job posting include web scraping in the description. 

Most jobs that include Python near me involve scripting/automation, networking, data engineering/science, and web dev. And I recently learned that people use sites like UpWork (and other freelancing sites) to take gigs doing web scraping for people. I guess I just assumed that web scraping was just a good subject for teaching Python but wasn‚Äôt necessarily used ‚Äúin the real world‚Äù. 

So I was hoping to ask here if people were actually using web scraping for work/side hustle? And if so explain why scraping is necessary to collect data? (and within regulations/rules) What the scraped data is used for?",0.85,9,0,9,2023-04-09T22:11:51Z,12goflg,t3
185,Python,An Internet Speed Test with Turtle module,"Sup guys!

&amp;#x200B;

I built an Internet Speed Test with Turtle module.

I hope you enjoy it!

&amp;#x200B;

[https://github.com/massif-py/internet-speed-test](https://github.com/massif-py/internet-speed-test)",0.6,1,0,1,2023-04-09T20:32:28Z,12gluke,t3
186,Python,Why didn't Python become popular until long after its creation?,"Python was invented in 1994, two years before Java.

Given it's age, why didn't Python become popular or even widely known about, until much later?",0.94,596,0,596,2023-04-09T20:21:49Z,12glkw4,t3
187,Python,Best unit-test practices?,"I am interested in some automated way to run both docstring tests and unit-tests (using \`unittest\`/\`pytest\` modules), with as less boilerplate and repeating myself as possibly. In the Ideal World I would just add some new \`file.py\` with doctested methods, maybe add \`file\_test.py\` or even put \`if \_\_name\_\_ == '\_\_main\_\_': import unittest ...\` into the module itself, and all those tests would be run on some \`python -m test\_me .\` command. I am well aware how much Ideal and Real Worlds differ, but one can dream.

Is there a unified approach to such thing? Is there a PEP advising some way of testing, or a well-known project with a clever and handy test-runner whose style everyone follows? I really don't feel like reinventing the wheel with some \`for \*\*/\*.py do ...\` hacked together into a \`run\_tests.sh\` Bash script - I am sure this task was already done multiple times, and might even evolve into some wide-spread patterns I am not aware of yet.

But overall, any advice on testing things in Python3+ will be considered with passionate interest :)",0.57,1,0,1,2023-04-09T20:21:22Z,12glki6,t3
188,Python,Wrote an article on medium above webscraping in python,,0.3,0,0,0,2023-04-09T19:49:33Z,12gkrkh,t3
189,Python,Python flask frontend for commandline todo application TaskWarrior,"I have made a web browser frontend (using Flask) for commandline todo application [TaskWarrior](https://taskwarrior.org/).

Here's some screenshots of the web-app:

https://preview.redd.it/90r7rggx5usa1.png?width=1920&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=93d540d290c3d07af786e1ae57af7ac2ce830dff

https://preview.redd.it/0srlkcgx5usa1.png?width=1920&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=ba062b5f289f0e067c108d9fc7ba7bc87d63bdcb

https://preview.redd.it/f4rv58gx5usa1.png?width=1920&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=4c5abc171100a90dc01382cde565f76c0ebdc9b1

Link to [GitHub repository](https://github.com/jokerdino/taskwarrior-flask) for those of you who are interested in checking out the code.

&amp;#x200B;

Currently, it is pretty bare bones but I hope to add a few features over time. All feedback most welcome!",0.73,11,0,11,2023-04-09T16:05:49Z,12gfr5j,t3
190,Python,Python: everything is object,,0.29,0,0,0,2023-04-09T15:59:43Z,12gfn0h,t3
191,Python,Learn the Basics of Test-Driven Development with a focus on Data Structures,"Test-Driven Development (TDD) is a software development process that aims to ensure the quality of the software by running a set of test cases more frequently. This is the opposite of creating the software and then the tests which the software will be tested against.

Usually, the steps you follow on TDD are the following:

Add a new test:

* This test should pass **if, and only** **if,** all the specifications defined in the feature are met.
* Focus on the requirements before coding.

Run all tests:

* The new test should fail.
* Because it fails, it shows that new code is needed for the new feature.
* This will also validate that the testing mechanism is working correctly and that the new test is not flawed in a way that will always pass.

Implement the feature:

* The code you write should be the simplest one that ensures the new test passes.

Run all tests:

* All tests should pass.
* If they don't, the code should be revisited, and changes will be made until the tests pass.

Refactor as needed:

* Go back and improve the code if needed.
* Rely on the tests to ensure everything works fine after the refactoring.

I wrote about an educational example to show the basics of TDD using Data Structures, you can read about it here: [A Tale of Testing: The Basics of Test-Driven Development with a Focus on Data Structures](https://albexl.hashnode.dev/a-tale-of-testing-the-basics-of-test-driven-development-with-a-focus-on-data-structures)

Let me know what you think of this approach and let's start a fruitful discussion!",0.67,9,0,9,2023-04-09T15:52:21Z,12gfi23,t3
192,Python,"Is there a python game like rimworld, dwarf fortress and cdda","I just wanna know if there‚Äôs a python made game who‚Äôs a colony manager. Like rimworld, dwarf fortress and cdda.",0.47,0,0,0,2023-04-09T14:21:52Z,12gdst9,t3
193,Python,"Are We Ready to Shape the Future? Unlocking the Potential of JavaScript, Python, and AI for Tomorrow's Generation","I want to write an article encouraging our generation and future generations to learn programming (primarily JavaScript and/or Python). I've recently been inspired by the following:

* The desire to automate repetitive tasks in my day job working for civil engineering firm. I am so sick of Microsoft Excel spreadsheeting.
* The conversations about programming and AI in the Lex Fridman podcast. This has been fun because I often work outside in the field so it helps to keep my mind focused on Computer Science while doing something else.
* My own personal journey learning JavaScript using YouTube, LinkedIn Learning, ChatGPT, and a private 25+ session bootcamp from a Senior Dev. My closest friends run a start-up and are learning JavaScript in an effort to 10x their business.
* The notion that computer science will be just as important to reading, writing, and mathematics. Books like Program or Be Programmed as well as stories that 100% of education in China will incorporate programming to our say 5% in the US.

With all this said, I've found ChatGPT to be a blessing in debugging code and helping to explain convoluted topics related to coding. Using ChatGPT in our bootcamp has been helpful as I can research topics we are discussing in class and it gives me a succinct response to the topic at hand. I will mention that our instructor is very adamant about actually typing out examples in an effort to solve in-class challenges he designs. I feel like I have been able to pick this all up really quickly but I often wonder if it is possible to too heavily lean on models like ChatGPT?

Soliciting advice from others learning as well as other more senior programmers. Thanks in advance.",0.1,0,0,0,2023-04-09T11:56:09Z,12gb2xq,t3
194,Python,Pytorch vs tensorflow for beginners,"Hello, I'm an absolute beginner when it comes to this stuff, my background in AI includes watching the occasional code report on YouTube and reading headlines of click baity news articles, don't know a thing about making Ai models myself, but I know that these are the two most famous python libraries when it comes to making your own AI, which one do you recommend for beginners such as myself.",0.66,12,0,12,2023-04-09T08:25:44Z,12g6qif,t3
195,Python,What all programming languages and libraries should I learn to land a job as a Python dev?,"I just got out of high school and am planning to take my bachelors in physics, but I really love to code as well so I'm always learning new things that're programming related. My preferred language is python, I've done a good amount of [projects](https://github.com/john-erinjery?tab=repositories) using the language, including two python packages.

I decided I'll take a degree in computer science as well, either parallel with my bachelors if i can manage it, or after my bachelors (more likely). once i decided that, it struck me that if I'm always learning stuff, I might as well learn stuff that'll help me in the future.

because, if you did check out my [projects](https://github.com/john-erinjery?tab=repositories), you'll notice most the large ones are things like : [mangadex-dl](https://pypi.org/project/mangadex-dl), neosekai-api, neosekai-tl : just webscraping and (a tiny bit) of media processing.

So I'd like to know some other programming languages and/or python libraries I should learn in my free time to help me later on if I tried for the post of a python programmer.

Thanks!",0.25,0,0,0,2023-04-09T05:38:23Z,12g2yzr,t3
196,Python,Sunday Daily Thread: What's everyone working on this week?,"Tell /r/python what you're working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share.",0.85,12,0,12,2023-04-09T05:30:13Z,12g2rk1,t3
197,Python,Pushing real-time updates to clients with server-sent events,"So far, conversational knowledge transfer with LLMs has been fantastic for me. Wanted to explore Server-Sent Events &amp; how they stack up against WebSockets.  Wrote a piece on how to build SSE-enabled servers and communicate with it from the client after 3 hrs of convo with chatGPT. The only trick was to re-verify everything it said.   


[https://rednafi.github.io/reflections/pushing-real-time-updates-to-clients-with-server-sent-events-sses.html](https://rednafi.github.io/reflections/pushing-real-time-updates-to-clients-with-server-sent-events-sses.html)",0.77,11,0,11,2023-04-09T03:22:55Z,12fzmge,t3
198,Python,Comprehensive Reddit Saved Posts Downloader - retrieves almost all content ever saved,"Hi all, I made a post about this a couple of days ago, but I've made some pretty massive changes since then and I wanted to share it again. I'm super happy with the results.

To recap, this program backs up all of your saved posts on Reddit, obtaining media such as Reddit galleries, Imgur albums, gifs, videos, etc. It stores a local log of all of the files downloaded/skipped.

Since last posting, I've added the ability to load your entire saved post record using information provided by Reddit. However, I noticed that a lot of the content had been deleted or removed, making up about a quarter of all my posts. So now I've implemented the ability to retrieve this information from pushshift and the wayback machine, and it works very well. For reference, I downloaded about 3500 posts from 5+ years back and only had around 200 fail.

Let me know how my code looks and if there's anything I could improve on. Thanks!

[https://github.com/aeluro1/geddit](https://github.com/aeluro1/geddit)",0.97,368,0,368,2023-04-09T03:13:41Z,12fzdu2,t3
199,Python,Check out my story to learn how to refactor code when dealing with too many conditional statements in Python,,0.58,2,0,2,2023-04-09T02:50:53Z,12fyspm,t3
200,Python,Algebra Functions Graphing App - CustomTkinter,"&amp;#x200B;

**Simple fun utility for graphing functions. Much simpler than online tools.** 

&amp;#x200B;

https://preview.redd.it/p6yy9z0t2qsa1.png?width=791&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=a69781164a9fa1e260920ea3579be1c04b165c33

**View the code here...** [**Code (GitHub)**](https://github.com/GregoryNavasarkian/Algebra-App)",0.5,0,0,0,2023-04-09T02:16:17Z,12fxwr4,t3
201,Python,Pop-It,"Hi friends , i wrote a clone of a famous toy ""Pop-It"" in tkinter... i just wanted to share here.. please tell me how i can improve this  


&amp;#x200B;

https://preview.redd.it/me8bpshr4psa1.png?width=1200&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=bfc6ce1cbc7050c3f99f7d2569374d1bdddb0b63",0.89,7,0,7,2023-04-08T23:03:54Z,12fspfz,t3
202,Python,git-limiter: üß≠ Tool to stop you from pushing huge diffs,,0.84,36,0,36,2023-04-08T22:47:32Z,12fs7lz,t3
203,Python,aiob2 - A Modern and Pythonic API Wrapper for Backblaze's API,"aiob2 is an API wrapper for the Backblaze bucket API. For those unfamiliar with Backblaze buckets, they store your files like AWS S3 buckets at a fraction of the price. It's also great for making CDNs, and work brilliantly with Cloudflare.

You can find it on [PyPI](https://pypi.org/project/aiob2/) and [GitHub](https://github.com/Void-ux/aiob2) (latest releases).

Installing aiob2 is as simple as running `pip install aiob2`, and uploading files can be done in a single line with `await client.upload_file(content_bytes=data, file_name='test.jpg', bucket_id='id')`

&amp;#x200B;

If you find yourself enjoying aiob2, feel free to give it a star on GitHub :)",1.0,14,0,14,2023-04-08T20:18:50Z,12fob7n,t3
204,Python,AutoControl is an automation package for Python.,"&amp;#x200B;

## AutoControl allows you to automate keyboard and mouse control using Python.

## IT IS COMPATIBLE WITH WINDOWS/MACOS/UNIX-LIKE (X11 GUI)

## INCLUDES ADVANCED FEATURES SUCH AS:

* Image recognition
* Remote execution (via TCP Socket)
* Report generation
* JSON interpreter (converts structured data into automation scripts)
* Experimental driver support for other programming languages

[AutoControl GitHub Repo](https://github.com/Integrated-Testing-Environment/AutoControl)

[AutoControl Documentation](https://autocontrol.readthedocs.io/en/latest/)

[CONTRIBUTING.md](https://CONTRIBUTING.md)",0.81,20,0,20,2023-04-08T19:53:34Z,12fnmcy,t3
205,Python,Finding Side Gigs,"Where would you guys recommend finding a side gig for commissioned work, such as creating websites, custom scripts and so on alongside your current work or school courses?

Fiverr seems popular, but it‚Äôs just so oversaturated, that finding work at a decent price is damn near impossible past being in the top few sellers for your chosen category.",0.8,8,0,8,2023-04-08T19:47:30Z,12fngd2,t3
206,Python,Pandas 2.0 (with pyarrow) vs Pandas 1.3 - Performance Comparison,,0.76,48,0,48,2023-04-08T15:04:03Z,12fgyui,t3
207,Python,Is concurrency in python really that tedious?,[https://medium.com/@rapidfork/breaking-down-python-concurrency-the-gil-and-its-effect-on-multi-threading-b5ab99083cb2](https://medium.com/@rapidfork/breaking-down-python-concurrency-the-gil-and-its-effect-on-multi-threading-b5ab99083cb2),0.62,3,0,3,2023-04-08T13:58:01Z,12fftdh,t3
208,Python,EP 684: A Per-Interpreter GIL Accepted,,0.97,379,0,379,2023-04-08T13:56:37Z,12ffsif,t3
209,Python,GPTCache: A semantic cache for LLMs,"As much as we love GPT, it's expensive and can be slow at times. That's why we built GPTCache - a semantic cache for autoregressive LMs - atop Milvus and SQLite.

GPTCache provides several benefits: 1) reduced expenses due to minimizing the number of requests and tokens sent to the LLM service, 2) enhanced performance by fetching cached query results directly, 3) improved scalability and availability by avoiding rate limits, and 4) a flexible development environment that allows developers to verify their application's features without connecting to the LLM APIs or network. Come check it out!

[https://github.com/zilliztech/GPTCache](https://github.com/zilliztech/GPTCache)

(Edit: forgot to add link)",0.33,0,0,0,2023-04-08T09:11:47Z,12faadk,t3
210,Python,Workshop: Algorithmic Trading with Python (part 2),"Hi all

We had a very successful Workshop a couple of weeks ago where we started working through a trading algorithm written in Python.

We used various interesting techniques in a Jupyter Notebook to show the data justified the technique.  But we couldn't get to a conclusion in the time we had.

Therefore we promised a second part which will occur on Wednesday, 12 April.  This time it's scheduled to be friendly to both Asia and Europe - and to early risers in the Americas.  7pm for Hong Kong and Singapore (9pm Sydney), 12 noon in London and 7am in New York.

Here's the sign-up: 

[Algorithmic Trading with Python - part 2](https://profitview.net/events/algorithmic-trading-with-python-part-2).

That will occur on Wednesday 12 April.  This time it will be in hours that are friendly to both Asia and Europe - and even for early risers in the Americas.

We will share all the code via our Github.  We look forward to many detailed questions.

See you all next Wednesday!",0.7,4,0,4,2023-04-08T08:26:54Z,12f96cf,t3
211,Python,Saturday Daily Thread: Resource Request and Sharing! Daily Thread,"Found a neat resource related to Python over the past week? Looking for a resource to explain a certain topic?

Use this thread to chat about and share Python resources!",1.0,3,0,3,2023-04-08T05:30:14Z,12f4hre,t3
212,Python,do you think I could make a 2d game where you can swap between these screens and move around on the map and interact with people. I will keep updating ye on the progress if people think its interesting. Is this too ambitious or is there any major problems that you see?,"&amp;#x200B;

[ask questions in the comments](https://preview.redd.it/n3zivf4gqjsa1.png?width=800&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=bf9354824999bd3192c9bdcf5ac659160ee2ff55)",0.59,5,0,5,2023-04-08T04:54:23Z,12f3gww,t3
213,Python,PEP 695: Type Parameter Syntax has been accepted by the Steering Council,,0.97,369,0,369,2023-04-08T04:54:08Z,12f3glm,t3
214,Python,How to write a loop in ChinesePython: learning Chinese by programming,"This is a ChinesePython, or zhpy, tutorial. The next step after a modest hello world is writing a loop, so here is how to do it in **zhpy**. The following code is a simple example, and also includes how to define a function in Chinese code. The characters used in the code are broken down into each Chinese word with pinyin and meaning.

&amp;#x200B;

`# coding = utf-8`

`# by jiahua huang`

`ÂßìÂêçË°® = ('Âº†‰∏â', 'ÊùéÊñØ', 'ÁéãÊµ∑', 'Ëç∑Ëä±')`

`ÂÆö‰πâ ÊâìÂç∞ÂßìÂêçË°®():`

`ËÆ°Êï∞ = 1`

`Âèñ ÂßìÂêç Âú® ÂßìÂêçË°®:`

`ÊâìÂç∞(ËÆ°Êï∞, ÂßìÂêç)`

`ËÆ°Êï∞+=1`

&amp;#x200B;

`‰∏ªÁ®ãÂ∫è:`

 	`ÊâìÂç∞ÂßìÂêçË°®()`

&amp;#x200B;

Let's break down each line of code into the words used. If the program in chinese above looks intimidating (it's gonna be easy!), you can check and intro to ChinesePython, that is, a hello world program in this link:

[https://chinesememe.substack.com/i/103754530/chinesepython](https://chinesememe.substack.com/i/103754530/chinesepython)

 

**ÂßìÂêçË°® = ('Âº†‰∏â', 'ÊùéÊñØ', 'ÁéãÊµ∑', 'Ëç∑Ëä±')**

*\[X√¨ngm√≠ng bi«éo = ('ZhƒÅngsƒÅn', 'L«êsƒ´', 'W√°ngh«éi', 'H√©huƒÅ')\]*

The variable ""ÂßìÂêçË°®"" (x√¨ngm√≠ng bi«éo), which means ""name list"" in Chinese, is assigned a tuple containing the strings 'Âº†‰∏â' (zhƒÅngsƒÅn), 'ÊùéÊñØ' (l«êsƒ´), 'ÁéãÊµ∑' (w√°ngh«éi), and 'Ëç∑Ëä±' (h√©huƒÅ), four strings representing names.

The remaining lines of code define a function called ""ÊâìÂç∞ÂßìÂêçË°®"" (d«éy√¨n x√¨ngm√≠ng bi«éo), which prints the names in the tuple along with a number indicating their position in the list. The function is then called in the main program, which results in the output of the names in the tuple.

So here are the words used in the other lines:

 

**ÂÆö‰πâ ÊâìÂç∞ÂßìÂêçË°®():**

*\[D√¨ngy√¨ d«éy√¨n x√¨ngm√≠ng bi«éo()\]*

Defines a function named ""ÊâìÂç∞ÂßìÂêçË°®"" (d«éy√¨n x√¨ngm√≠ng bi«éo), which takes no arguments, and means ""print name list"".  ""ÂÆö‰πâ"" (d√¨ngy√¨) means ""define"" in English. In ChinesePython, it is used to define a function or a variable. In this case, it is used to define the function ""ÊâìÂç∞ÂßìÂêçË°®"", which is called later in the main program to print the names in the tuple. 

&amp;#x200B;

**ËÆ°Êï∞ = 1**

*\[J√¨sh√π = 1\]*

The variable ""ËÆ°Êï∞"" (j√¨sh√π), meaning ""count"", is assigned the value of 1.

 

**Âèñ ÂßìÂêç Âú® ÂßìÂêçË°®:**

*\[Q«î x√¨ngm√≠ng z√†i x√¨ngm√≠ng bi«éo:\]*

For each ""ÂßìÂêç"" (x√¨ngm√≠ng, ""name"") in the ""ÂßìÂêçË°®"" (x√¨ngm√≠ng bi«éo, meaning ""name list""), do the following. This line initiates a loop that iterates through each name in the tuple ""name list"". The word ""Âèñ"" (q«î) is a loop keyword that is commonly used in Chinese programming languages to mean ""for each"" or ""iterate over"". **Âú®** *z√†i* means ""at"" or ""in"".

&amp;#x200B;

**ÊâìÂç∞(ËÆ°Êï∞, ÂßìÂêç)**

*\[D«éy√¨n (j√¨sh√π, x√¨ngm√≠ng)\]*

""ÊâìÂç∞"" (d«éy√¨n) means ""print"" in English, note that it was used previously, not as a programming keyword, but for arbitrarily naming the function, ""print-name-list"". In this line, the function ""ÊâìÂç∞"" is called with two arguments: ""ËÆ°Êï∞"" (j√¨sh√π, meaning ""count"") and ""ÂßìÂêç"" (x√¨ngm√≠ng, meaning ""name""). The variables ""ËÆ°Êï∞"" and ""ÂßìÂêç"" are printed to the console as the loop iterates through the names in the tuple. The first argument, ""ËÆ°Êï∞"" is the current count or index of the iteration, while the second argument ""ÂßìÂêç"" is the name being printed at that index.

The next line has characters already seen previously.  This time it uses the operator ""+="" (jiƒÅdƒìngy«ê, meaning ""plus-equals"") a shorthand operator in Python that adds the value on the right-hand side of the operator to the variable on the left-hand side, and then assigns the result back to the variable on the left-hand side. So ""ËÆ°Êï∞"" (j√¨sh√π, meaning ""count"") is incremented by 1 each time the loop iterates. This is equivalent to the longer form: ""ËÆ°Êï∞ = ËÆ°Êï∞ + 1"". 

Finally, since the last line of the program is also already covered, that is, it is simply a call to the function which we studied on the function definition line earlier (see above), the last line below is the ""main"" declaration of a python program, and ends this tutorial. Thank you for making this far!

&amp;#x200B;

**‰∏ªÁ®ãÂ∫è:**

*\[Zh«î ch√©ngx√π\]*

""‰∏ªÁ®ãÂ∫è"" (zh«î ch√©ngx√π, meaning ""main program"") is a label or marker that signifies the beginning of the main program. In Python. The ""main"" program is the code that is executed when the script is run. So the ""‰∏ªÁ®ãÂ∫è"" line does not outright do anything in the code, but indicates the start of our main program.",0.62,8,0,8,2023-04-08T04:05:57Z,12f227h,t3
215,Python,The Python Project visualized with Gource,,0.87,19,0,19,2023-04-08T02:58:27Z,12f016l,t3
216,Python,I am making a python package to simulate physics. Check it out!,"I am in my first semester of computer engineering uni and I tried making this program that simulated physics. It‚Äôs called Miniengine and you can find it in pypi and github. here is the github repo: 

https://github.com/rrayes3110/Mini-Engine

At first it may be a little bit confusing to use but it‚Äôs actually very simple, I‚Äôll be making a tutorial later this week. I am just leaning how to code, please don‚Äôt be harsh lol.",0.6,2,0,2,2023-04-08T02:42:26Z,12ezk23,t3
217,Python,Live Tutorial on Scaling Python with Dask and Coiled (April 13)," [Click here to register!](https://www.meetup.com/bethesda-data-science-networking-meetup/events/292411174/)

My meetup group is hosting Dr. Naty Clementi, one of the developers of Dask and Coiled, for a live, interaction tutorial on April 13th at 6:30pm ET (10:30pm UTC)

Dask is a powerful library for parallel computing in Python and used in big data, machine learning, anywhere general-purpose parallelism is needed. Coiled extends Dask with cloud infrastructure and features like easy cloud deployment, remote package synchronization, cost management, and observability and performance hinting.

The presentation will be followed by a Q&amp;A session--if you're curious about scaling your Python projects than come join us!",0.83,4,0,4,2023-04-08T01:47:44Z,12exw6s,t3
218,Python,Calibrating a NASA instrument using Tensorflow / Keras,"Hey everyone,

in my current short *Space Science with Python* series I am currently focusing on an instrument I worked on for years: Cassini's Cosmic Dust Analyzer (CDA). Although I work in industry, I am still a guest scientist doing some Machine Learning engineer on the data. *Is it interesting?* OH YES! *Could one join to work on the data, or has everything been ""found""?* Well ... I am pretty sure the data has still enough potential for another decade of research!

Anyway, as every instrument, one needs to conduct some calibration tasks. In my previous chapters (3 in total) I explained the calibration data and methods to e.g., determine the impact velocity of incoming dust particles. Why is the velocity important? Based on the direction and velocity information one can conduct astro-dynamical analysis and see that some particles even come [from other Solar Systems](https://www.science.org/doi/10.1126/science.aac6397).

Now the current calibration functions are polynomial fits on the data; but thanks to Machine Learning libraries one does not need any a-priori knowledge or ""wild guess"" to fit a function. E.g., the architecture of a neural network spans a vast solutions space; and the task of the training process is to determine the best solution.

Now in this very first approach, I want to show a rather ""shallow deep learning"" model on this regression task in 3D. The positive side effect of this first simple approach: One can plot the solution space as a plane using Matplotlib!

The next sessions will optimize the ML model and we will create some sustainable library that we will use in the future for scientific purposes.

Also, the corresponding code is open and free to anyone to access!

Happy holidays and happy coding,

Thomas

Video: [https://youtu.be/SParnhmpDX0](https://youtu.be/SParnhmpDX0)

GitHub: [https://github.com/ThomasAlbin/Astroniz-YT-Tutorials/blob/main/%5BProject%5D-Cassini-CDA/01-Calibration/03\_machine\_learning\_calibration.ipynb](https://github.com/ThomasAlbin/Astroniz-YT-Tutorials/blob/main/%5BProject%5D-Cassini-CDA/01-Calibration/03_machine_learning_calibration.ipynb)",0.82,7,0,7,2023-04-08T01:29:19Z,12exbw6,t3
219,Python,The new Balder Test Framework - Reusable and installable tests,"Have you ever thought about installing tests like you would do with Python packages? Just using and developing open-source available tests?  Check out the beta version of the Python test framework Balder.  Would be happy to hear your opinions!

https://github.com/balder-dev/balder",0.57,1,0,1,2023-04-08T00:40:17Z,12evuek,t3
220,Python,Python Hacks: Sneaky Techniques for Efficient Code,"Are you a Python developer looking to write more efficient code? Check out my latest blog post where I share some sneaky techniques to take your code to the next level. From optimizing loops to using built-in functions, these tips will help you write faster, more efficient code that gets the job done in less time.

Read the full post here: [https://danielbuilescu.com/blogs/learn-python/python-hacks-sneaky-techniques-for-efficient-code](https://danielbuilescu.com/blogs/learn-python/python-hacks-sneaky-techniques-for-efficient-code)

\#PythonHacks #EfficientCode #PythonDevelopment #ProgrammingTips",0.06,0,0,0,2023-04-08T00:35:44Z,12evpfb,t3
221,Python,How to Embed a Python Streamlit App in WordPress with Replit,,0.86,5,0,5,2023-04-08T00:29:20Z,12evhz4,t3
222,Python,ChatGPT voice assistant for Windows.," [sserver224/OpenAI-Voice-Assistant: A virtual assistant based on ChatGPT (github.com)](https://github.com/sserver224/OpenAI-Voice-Assistant) 

Trigger the assistant by saying ""Computer"" if ""Listen for Computer"" is checked in the systray, or holding the BACK button on the first player's controller if connected.",0.27,0,0,0,2023-04-08T00:14:55Z,12ev22j,t3
223,Python,Thoughts on the Python packaging ecosystem,,0.81,3,0,3,2023-04-07T22:56:45Z,12esmz7,t3
224,Python,What could I do with this library I created,"[Maths Library](Https://www.github.com/IAmJuniorB/MathsLibrary)

Edit: broke each class into separate files and kept the original ‚Äúmega file‚Äù maths.py",0.8,28,0,28,2023-04-07T22:31:51Z,12erva9,t3
225,Python,Telegram bot to chat with ChatGPT easily from your phone,"&amp;#x200B;

https://i.redd.it/drvb947dlhsa1.gif

&amp;#x200B;

Chatting with ChatGPT through the web interface is sometimes frustrating. Plus, I found myself using it way more since I can just send it a quick text from my phone now, or even a voice message that will be transcribed.  


I highly recommend everyone to try it for a few days, it's great for when you have questions on the fly, just open your phone and say what you need to know. The API cost is surprisingly low, I paid approximately 0.50$ in one month of use.  


I contributed to another project like this one, but it was meant to create bot for many users, and since using your OpenAI cost money, I think a simpler project for personal use is better.  


Looking forward for feedbacks, and I will take in consideration any feature request.  


[GitHub repo](https://github.com/clemsau/telegram-gpt)",0.66,12,0,12,2023-04-07T21:48:20Z,12eqi3c,t3
226,Python,RGB to Hex Converter,,0.25,0,0,0,2023-04-07T20:35:16Z,12eo8wl,t3
227,Python,Keyring module issues?,"I've got a script I'm running that's connecting to a remote Cisco ASA using netmiko and executing a command to reset a VPN. The password for the netmiko connection is stored in windows credential manager and retrieved with the keyring module.

When run locally on the box that is making the netmiko connection, everything runs fine but I'm trying to run it remotely from a second device...the plan being that a batch script runs and establishes an ssh connection from the second windows server to the first (the one that holds the python script) and kicks the script off.

So when the remote execute is attempted, the password retrieval doesn't work and keyring throws a 1312 CredRead error that, from my research, is caused by the windows profile for the ssh account not being loaded.

I found something on Google that said ""I fixed it, you just have to create a profile load script"" but I can't find anything on how to do that...is anyone able to help?",0.5,0,0,0,2023-04-07T20:33:57Z,12eo7gz,t3
228,Python,Python 3.12 Preview: Ever Better Error Messages ‚Äì Real Python,,0.98,118,0,118,2023-04-07T18:59:03Z,12eld7u,t3
229,Python,Make Python Runtime faster than C++,"I wrote a Python C extension to make Python programs run faster, and even faster than C++ after comparison (but I don't know why). The package is for stream computing like in Java. It was my first time to write a Python C extension and please give me some advice thx! Here is the repo : [https://github.com/littlebutt/streamcpy](https://github.com/littlebutt/streamcpy)",0.35,0,0,0,2023-04-07T18:17:17Z,12ek73o,t3
230,Python,"Dane Hillard joins the Pybites Podcast hosted by Bob Belderbos, for a chat about #Python packaging and developer tooling.",,0.95,18,0,18,2023-04-07T17:56:10Z,12ejm56,t3
231,Python,GitHub - Smyja/blackmaria: Python package for webscraping in Natural language,,0.67,3,0,3,2023-04-07T17:48:44Z,12ejeqz,t3
232,Python,"I trained a RoastBot on &gt;120,000 faces and &gt;0.5 million comments and it's a menace üòà.","It uses facial recognition to fetch roasts for users from the r/RoastMe subreddit.

Try it out [here](https://subroast.me)

**App:** [https://subroast.me](https://subroast.me)

**Code:**  [nizarhaider/RoastMe (github.com)](https://github.com/nizarhaider/RoastMe)

# Tech Stack

**Front End:** Bootstrap5 + Vanilla JS

**Back End:** Flask

**CI/CD:** Cloud Build (GCP)

**Deployment:** Cloud Run (GCP)

**Models:** Facenet and MTCNN

&amp;#x200B;

**Edit:**  The entire subreddit has millions of images since 2014 April. I just used a fraction of it. Which means this could be 100x better (or just more accurately racist) given the time and effort to train it.

**Edit2:** At u/Lewis0981 request I've added a 'feature' to see your **match image** (I've seen some bizarre cases of matches so do share them if you get it for a laugh) (Fixed the bug for this)

[RoastMe](https://preview.redd.it/mps1lehexfsa1.png?width=250&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=e4b2ae973f6ea68e44977bc0c664a68107410616)",0.93,473,0,473,2023-04-07T16:06:18Z,12egsoz,t3
233,Python,PEP 711 ‚Äì PyBI: a standard format for distributing Python Binaries,,0.96,240,0,240,2023-04-07T15:15:16Z,12efni5,t3
234,Python,"PyGAD wins the contest for most intimidating logo, change my mind","&amp;#x200B;

https://preview.redd.it/gw655hudhfsa1.png?width=755&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=8314c267a55aeed2702610276c9ba97db5408e65",0.65,5,0,5,2023-04-07T14:37:59Z,12eezx8,t3
235,Python,opinions on codon? Compiled from source on linux arm?,"I think I wanna play with codon, looking for opinions from people who've tried it.

Don't currently have x86 box, does it compile ok for linux arm?",0.83,11,0,11,2023-04-07T14:16:00Z,12eemcq,t3
236,Python,How would you unit test a graph builder?,"Greetings, I am working on a project in which we need to make plots for data analysis.

Since depending on the context and the data we're analyzing we might need multiple subplots, we decided to delegate the plot construction logic to a separate class.

Under the hood, it uses matplotlib.pyplot to make the graph objects, should I mock this?

I'm using the unittest built-in module to make my unit tests.

But in general, how would you write unit tests for such a thing? What CAN I test?",0.83,29,0,29,2023-04-07T12:39:40Z,12ecwop,t3
237,Python,Data race in Python and GIL's role in it,,0.36,0,0,0,2023-04-07T11:17:09Z,12ebgzd,t3
238,Python,Easily generate documentation for your Python projects with Documatic,"Easy to use documentation generator for [Python](https://www.python.org/) projects.

Documatic is an easy-to-use documentation generator for Python that helps developers generate documentation for their Python packages. This documentation generator supports both HTML and [Markdown](https://daringfireball.net/projects/markdown/) output, with the default output being Markdown.

[Github Repository](https://github.com/aspizu/documatic)",0.8,34,0,34,2023-04-07T08:20:20Z,12e7982,t3
239,Python,"Ableton Auto Export using Python's AbletonOSC library, and osascript through sub process, among others. Script will soon be available!",,0.27,0,0,0,2023-04-07T07:49:53Z,12e6fyd,t3
240,Python,Introducing: sqlalchemy-declarative-extensions (0.6.0),"[Github](https://github.com/DanCardin/sqlalchemy-declarative-extensions) / [Docs](https://sqlalchemy-declarative-extensions.readthedocs.io/en/latest/)

Hello all!

In short, the purpose of the library is to ""declare"" additional kinds of database objects not natively supported by SqlAlchemy/Alembic. ""Support"" essentially boiling down to ensuring that `metadata.create_all` (for tests) and `alembic --autogenerate` automatically create/update/delete your declared objects to match.

It is most easily compared to `alembic_utils`, a different library with a similar goal, which I address [on the readme](https://github.com/DanCardin/sqlalchemy-declarative-extensions#alembic-utils).

As of the most recent release, it supports:

* Schemas
* Views
* Roles
* Privileges (Grants/Default Grants)
* Functions
* Triggers
* Rows (i.e. data)
* ""Audit Tables"" (i.e. the combination of table/functions/triggers which record data changes to some source table)

Support is heavily skewed (and best tested) with Postgres, but there is also provisional support for a [subset of objects SQLite and MySQ](https://github.com/DanCardin/sqlalchemy-declarative-extensions#database-support).

\---

The source of inspiration of the library came from frequent issues at work where additions of schemas/objects to the database would fail or be invisible to their intended users because it's so easy to forget the necessary `GRANT` (and especially `DEFAULT GRANT`) statements.

Further, after getting the library to the point at which it **could** manage them for us, we realized there were many hundreds of small differences between production and the state of a database upgraded through migrations from an empty database.",0.88,18,0,18,2023-04-07T06:59:32Z,12e52tq,t3
241,Python,Appreciating Python's match-case by parsing Python code,,0.87,37,0,37,2023-04-07T05:28:41Z,12e2pyb,t3
242,Python,"Hacking games with Python, ctypes, and the Windows API",,0.94,200,0,200,2023-04-07T04:18:16Z,12e0uvn,t3
243,Python,Showcasing a 2D scrolling shooter game,"Game link : [https://reticent112.itch.io/dungeon-crawler](https://reticent112.itch.io/dungeon-crawler)

Game's Description :  A 2d scrolling shooter game where you have to defeat all the enemies  to proceed to next level. Game consists of 4 levels with final level  having a boss character. You have¬†the¬†option of selecting¬†your¬†player as either an elf or a wizard.

Source Code : [https://github.com/Riyachauhan11/Dungeon-Crawler](https://github.com/Riyachauhan11/Dungeon-Crawler)

Course i followed to make this game while adding a few additional features that came to my mind : [https://www.udemy.com/course/pygame-dungeon-crawler/](https://www.udemy.com/course/pygame-dungeon-crawler/)

&amp;#x200B;

[Game Banner](https://preview.redd.it/tky07y6ddbsa1.png?width=1012&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=ac3a5d7eb91cd1348be2ed37ca3c59910ff6f265)

[How the Game looks like](https://preview.redd.it/iy63fzrfdbsa1.png?width=1176&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=8978f5a70b34e618a84610bbbd2ee384d6d4c3de)",0.88,15,0,15,2023-04-07T00:47:25Z,12duqn4,t3
244,Python,NetworkX 3.1 released,,0.46,0,0,0,2023-04-07T01:14:21Z,12dvk2r,t3
245,Python,"Pip, Private CAs, and Root Only vs Bundle Cert Specification","I have a private pypi mirror sitting on an Artifactory instance. The Artifactory instance has a server cert signed by an intermediate CA, which in turn is signed by a private root CA. My browser only has the private root CA installed, but happily accepts the server cert, because it can verify the server cert chain on it's own with no need to install the full ca bundle locally. Pip doesn't seem to work that way. If you specify a cert in pip.conf, as far as I can tell it fails unless supplied with a full ca bundle (as opposed to just the actual root pem file). I'd prefer not to install the full bundle, so that in the event I'd like to revoke the intermediate cert, nothing changes client side. Is there a work around? If not why does pip require the full bundle?",0.86,13,0,13,2023-04-06T22:55:08Z,12drar3,t3
246,Python,"Is geopandas right for this use case or should I be looking at something else? Looking to create, manipulate, and measure closed polylines with arc segments across a shared geometric space.","I'm looking for the equivalent of 2D shape manipulation in AutoCAD, in a high-level library. Python seems like the language with the largest community for use cases like this so I'm starting here. I can do all of this via AutoCAD C# plugins but I want something more portable and accessible without requiring expensive licensing.

I need to be able to create closed polylines that are made up of line and arc segments as a single entity.

The closed polyline objects may contain other arbitrary geometry within them which will all be grouped together.

Need to be able to move the group of entities together in 2D space while maintaining their spacial relationships (one ""group"" of geometry enclosed in a polyline need to be able to by moved together) through X and Y movements as well as rotations. Need to be able to, for example, calculate geometric center of outer polyline, select it and all geometry it contains, and rotate all around the geometric centerpoint found in the first step.

Need to be able to measure the shortest distance between two polylines. This one is throwing me. It is dead simple to calculate the distance between two points, but what if the shortest distance between two objects is the middle of an arc segment?

The biggest hurdles I'm running into while researching this are the distance calculations mentioned above and all of the geo libraries I'm finding being polygon-centric, meaning a collection of points with poor support for true arcs. Seems these ""geo"" libraries are all more focused on cartography that geometry.

Any recommendations?",0.81,6,0,6,2023-04-06T22:42:10Z,12dqwr5,t3
247,Python,Python sort vs sorted - Detailed Comparison With Code,"&amp;#x200B;

https://preview.redd.it/uwgyqjlxlasa1.png?width=1600&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=e47ff4cf1bc89554ad4fd3cb8702a5fa262ee17a

Python `sort()` and `sorted()` are used to sort the data in ascending or descending order. Their goals are the same but are used in different conditions. 

The Python `sort()` function is connected to the Python list and **by default, sorts the list's contents in ascending order**. 

 `list.sort(reverse=False, key=None)` 

Python `sorted()` function is used to **sort the iterable data**. By default, this function **sorts the data in ascending order**. 

 `sorted(iterable, key=None, reverse=False)` 

**Here's a complete guide comparing both functions and pointing out differencesüëáüëá**

[Python sort vs sorted - Detailed Comparison With Code](https://geekpython.in/python-sort-vs-sorted)",0.22,0,0,0,2023-04-06T22:14:46Z,12dq2nj,t3
248,Python,"Presenting gptty v0.2.5 - Enhanced CLI Wrapper for ChatGPT with Context Preservation, Query Support &amp; More!","Hey Reddit! üöÄ

After the [last post announcing gptty v0.2.1](https://www.reddit.com/r/Python/comments/123aiqk/introducing_gptty_v021_a_powerful_cli_wrapper_for/), I received an outpouring of support and feedback on the application that drove several major improvements that I‚Äôm thrilled to announce here with the newest release of gptty (v0.2.5).

For those coming here for the first time, gptty is a context-preserving CLI wrapper for OpenAI's ChatGPT, now featuring an improved query subcommand and ChatCompletion model support, all available on PyPI!

üîó GitHub:[ https://github.com/signebedi/gptty/](https://github.com/signebedi/gptty/)

üîó PyPI:[ https://pypi.org/project/gptty/](https://pypi.org/project/gptty/)

**What's fresh in gptty v0.2.5?**

üìö Enhanced Query Subcommand: The query subcommand now supports submitting multiple questions directly from the command line, making it even more effortless to interact with ChatGPT for fast and accurate information retrieval. Additionally, new flags such as --json, --quiet, --debug, and --additional\_context improve script integration and customization.

[Here's an example of a query using the --json tag](https://preview.redd.it/36jhglhvsasa1.png?width=1123&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=4d282f59d82f407c2f0e16d928d1b3a93a7d879b)

üîå ChatCompletion Models Support: gptty now supports ChatCompletion models, including GPT-4 and GPT-3.5-turbo, allowing you to seamlessly integrate the latest generation of language models into your gptty setup and continue harnessing their power.

**üöß Exciting Features on the Roadmap üöß**

gptty has more features in development to make your experience smoother and more powerful. üõ†Ô∏è Soon, we'll be introducing a universalQuery class üîç ([https://github.com/signebedi/gptty/issues/39](https://github.com/signebedi/gptty/issues/39)) for developers to effortlessly make abstract queries to the OpenAI API. We're also working on a listener daemon üéß for multi-user/async environments ([https://github.com/signebedi/gptty/issues/18](https://github.com/signebedi/gptty/issues/18)) and adding support for more granular control over context-passing between queries üåê ([https://github.com/signebedi/gptty/issues/16](https://github.com/signebedi/gptty/issues/16)).

**Why should you use gptty?**

üéØ Emphasis on Delivered Value: gptty is crafted to aid sys admins, developers, data scientists, and anyone looking to maximize the potential of ChatGPT, thanks to context preservation, command-line focus, and the new and improved query feature.

üõ†Ô∏è User-Friendly &amp; Adaptable: gptty boasts an intuitive command-line interface (powered by click), simplifying interactions with ChatGPT for quick one-off questions or more intricate, context-driven conversations. The enhanced query subcommand, with its new flags, facilitates seamless integration with existing workflows, automation scripts, and provides additional customization options.

üí™ Localized Chat History: gptty keeps your conversation history in a local CSV output file, providing uninterrupted access to past interactions even when the ChatGPT web client is down and offering greater flexibility in selecting data for future queries.

You can install it over pip:

    pip install gptty

As always, I welcome general feedback, feature requests, bug reports, and PRs!",0.6,2,0,2,2023-04-06T22:03:04Z,12dppzi,t3
249,Python,Announcing sequence_align: an open-source Python + Rust toolkit for efficient sequence alignment,"Hi r/Python! We just open-sourced our [sequence alignment toolkit](https://github.com/kensho-technologies/sequence_align), a performance-critical step in many natural language processing, bioinformatics and finance workflows. The main algorithmic logic is written in safe Rust with Python bindings from [PyO3](https://pyo3.rs/). Any feedback would be greatly appreciated -- thanks!

Link to blog post with more details: [https://blog.kensho.com/introducing-sequence-align-an-open-source-python-rust-toolkit-for-efficient-sequence-alignment-ccdce71d04c7](https://blog.kensho.com/introducing-sequence-align-an-open-source-python-rust-toolkit-for-efficient-sequence-alignment-ccdce71d04c7)",0.81,11,0,11,2023-04-06T22:02:17Z,12dpp6z,t3
250,Python,Algebraic Data Types in (typed) Python,,0.85,19,0,19,2023-04-06T21:51:42Z,12dpdfx,t3
251,Python,Mypy 1.2 Released,,0.94,142,0,142,2023-04-06T21:49:31Z,12dpaz2,t3
252,Python,(Flask) Personal portfolio website - Template,"Hi all,

Recently completed my website with Flask and thought Id would share it for other to use as  template to build from.

Struggled to find a nice Flask example and thus decided to create my own.

Feel free to explore the code, fork as needed and build on this.

It includes a pages for your blog and projects.

Shout if any questions",0.67,2,0,2,2023-04-06T21:12:57Z,12do763,t3
253,Python,"Polars for initial data analysis, Polars for production",,0.87,32,0,32,2023-04-06T20:21:42Z,12dmp1v,t3
254,Python,PyArrow Strings in Dask DataFrames!!,"  
The Pandas 2.0 release improved support for Arrow strings. This has pretty dramatic effects for people using Dask at large scale. You can read about it in this blog [https://medium.com/coiled-hq/pyarrow-strings-in-dask-dataframes-55a0c4871586](https://medium.com/coiled-hq/pyarrow-strings-in-dask-dataframes-55a0c4871586)",0.76,13,0,13,2023-04-06T19:20:43Z,12dl030,t3
255,Python,Looking for Tips / Educational Newsletter for Intermediate to Advanced Python,"Hi all--

Are there any good newsletters for intermediate to advanced Python learning? Something like [https://bytes.dev/](https://bytes.dev/) (but for Python, of course).",1.0,7,0,7,2023-04-06T18:24:32Z,12djg75,t3
256,Python,SpotiFile : Music scraping made easy," 

I made a neat tool to scrape songs (with GUI).

[GitHub Link](https://github.com/Michael-K-Stein/SpotiFile)

All you need to do is install the dependencies (""pip install -r ./requirements""), and then ""python [main.py](https://main.py/)"". It's that easy!

##This tool is mainly aimed at developers looking to create datasets to train ML models.

SpotiFile will open a GUI which lets you enter a playlist, album, artist, or user profile link and download all the relevant songs. This will also download all the metadata of the song, including the time-synced lyrics!

If you use the tool, please give the repo a star :)
And please tell me how to improve the code quality!

Enjoy!",0.95,322,0,322,2023-04-06T15:41:05Z,12dfdq1,t3
257,Python,Building and Training Vision Transformer from Scratch,"Hi guys,

I've prepared a comprehensive tutorial¬†[Build and Train Vision Transformer from Scratch](https://pub.towardsai.net/build-and-train-vision-transformer-from-scratch-f206c065bdf8). This article is a beginner friendly and explains ViT model fom zero (basic pytorch tensor operations) to hero (pytorch-lightning to organize your ML project).

Check it out!",0.79,16,0,16,2023-04-06T13:51:36Z,12ddc7l,t3
258,Python,versionedobj 2.0.4 is out!,"versionedobj is a framework for creating complex serializable/deserializable objects (a-la marshmallow), with versioning &amp; migration mechanisms to handle situations where you need to change the structure of a serializable object in released software.

versionedobj also has a focus on easy creation and re-use of complex nested objects (again, similar to how serializable objects are created in marshmallow), and uses no recursion, so you can nest objects as deep as you like.

[https://github.com/eriknyquist/versionedobj](https://github.com/eriknyquist/versionedobj)",0.69,7,0,7,2023-04-06T11:14:34Z,12daix1,t3
259,Python,"Thursday Daily Thread: Python Careers, Courses, and Furthering Education!","Discussion of using Python in a professional environment, getting jobs in Python as well as ask questions about courses to further your python education!

**This thread is not for recruitment, please see** r/PythonJobs **or the thread in the sidebar for that.**",0.81,3,0,3,2023-04-06T05:30:11Z,12d2l9a,t3
260,Python,Introducing tmplt - A User Friendly CLI Tool for Creating Projects with Templates,"Hey everyone,

I'm  excited to introduce tmplt, a powerful and user-friendly command-line  tool for quickly creating new projects based on templates. With tmplt, you can get started on your projects in no time!

What is tmplt?

tmplt allows you to create new projects with all the necessary files and  dependencies set up according to predefined templates. You can easily  customize these templates to suit your specific project requirements, or  download templates from the internet. tmplt comes with a simple and  flexible syntax for defining templates, including variables, files, and  dependencies.

Users can create their own templates or import them from the internet

Check it out here: [https://github.com/humblepenguinn/tmplt](https://github.com/humblepenguinn/tmplt)

&amp;#x200B;

https://i.redd.it/cgarxkv5b5sa1.gif",0.75,8,0,8,2023-04-06T04:23:43Z,12d0uu8,t3
261,Python,10 Essential Python code snippets for projects,,0.28,0,0,0,2023-04-06T04:07:10Z,12d0f7y,t3
262,Python,A Python Crash Course for Software Engineers,,0.2,0,0,0,2023-04-06T03:44:33Z,12cztk4,t3
263,Python,"I wrote a small polygon ""renderer"" for .wav files to tell my gf I love her","The repo consists of three Jupyter Notebooks that handle the rendering, exporting and displaying of the data:

[https://github.com/Jaybee18/wav\_renderer](https://github.com/Jaybee18/wav_renderer)

[One of those .wav files displayed in FLStudio](https://preview.redd.it/t2f926j7v4sa1.png?width=432&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=1a11035ba90bb965fbb87c06b47eaaf035ee1b21)",0.78,31,0,31,2023-04-06T03:12:26Z,12cyybm,t3
264,Python,Rubbrband: Python CLI for finetuning Stable Diffusion,"Hey everyone, we just launched the beta version of [Rubbrband](https://github.com/rubbrband/rubbrband), which is an open-source CLI that lets you finetune Stable Diffusion models in just 1 command. The CLI is super easy to use for developers who don‚Äôt have a ton of machine learning/python experience.

We made Rubbrband because we found it was very difficult to finetune Dreambooth models for animation creation. We wanted to eliminate all of the environment setup time(conda, pip, and dependency hell) and boilerplate data pipeline code to make these finetuning tasks just 1 line of code. We do this by Dockerizing these models, and by building in data pipelines that automatically crop images to the right size to finetune these models.

Here‚Äôs an example of what we‚Äôve built using Rubbrband. It‚Äôs an image-to-image model that was finetuned to stylize [Daniil Trifonov](https://en.wikipedia.org/wiki/Daniil_Trifonov) in this [style of anime](https://en.wikipedia.org/wiki/JoJo%27s_Bizarre_Adventure).

[Example of animation using a finetuned dreambooth model](https://preview.redd.it/l97eyn8pt4sa1.png?width=1283&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=b31e31d55f1aaf631c6cfde9ec901e92194b890c)

We‚Äôd love to get your take on what we‚Äôve built! We‚Äôd love to get contributors on this project so that we can help support more open-source models, which involves dockerizing them and creating data pipelines. [Star us on GitHub](https://github.com/rubbrband/rubbrband) to keep up with new features!",0.64,3,0,3,2023-04-06T02:49:27Z,12cybmt,t3
265,Python,Is E501 (79 character lines) still relevant?,"I decided to enable auto linting and boy, that was a huge mistake.

Specifically  E501, which made my code about 2-3x longer.

Due to long variable names, paths, or functions, my 90 character long lines turned into 3 lines.

Is this still relevant in 2023? Is there something happening at the lower level that requires 79 chars per line? I understand the monitor thing, but that seems outdated, even as I work on a tiny laptop monitor.",0.93,146,0,146,2023-04-06T02:08:23Z,12cx3fa,t3
266,Python,GitHub - INeddHelp/PySwissArmy: PySwissArmy is a Python utility library designed to make common programming tasks easier.,,0.13,0,0,0,2023-04-06T00:19:41Z,12cu0mo,t3
267,Python,üêçMusic video clip by every word is a Google imageüéµ,"I wrote this cool article about one of my school projects come check it out!

‚û°Ô∏è [Music video clip but every word is a Google image](https://dev.to/plsergent/music-video-clip-by-every-word-is-a-google-image-7ab)

The idea is that thanks to this Python module you can transform music into video clips with one image for each word.

Source code here: [https://github.com/PLsergent/OWOI\_AudioToClip](https://github.com/PLsergent/OWOI_AudioToClip)",0.67,1,0,1,2023-04-05T12:35:00Z,12cbmes,t3
268,Python,OpenConnect Linux GUI Front-end With Tkinter,"Hello! :) i made an Simple GUI Front-End For The OpenConnect VPN On Linux using Tkinter and python, it's not much in terms of Looks but it's functional and has a Local Sqlite3 Database feature if you choose to save your account info. Any advice and suggestion is highly appreciated!

[https://github.com/stking68/OpenConnect-Linux-GUI](https://github.com/stking68/OpenConnect-Linux-GUI)",0.82,7,0,7,2023-04-05T23:09:47Z,12crz98,t3
269,Python,"2,000 free sign ups available for the ""Automate the Boring Stuff with Python"" online course. (April 2023)","**EDIT: The sign ups are all used up. Remember that  the Free Preview is enabled for all videos, so you can still watch them all on the course home page. [And the first 15 videos are also on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&amp;list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)**

If you want to learn to code, I've released 2,000 free sign ups for my course following my Automate the Boring Stuff with Python book (each has 1,000 sign ups, use the other one if one is sold out): 

~~https ://udemy .com/course/automate/?couponCode=APR2023FREE~~

~~https ://udemy .com/course/automate/?couponCode=APR2023FREE2~~

Udemy has changed their promo code and severely limited the number of sign ups I can provide each month, so only sign up if you are reasonably certain you can eventually finish the course. [The first 15 of the course's 50 videos are free on YouTube if you want to preview them.](https://www.youtube.com/watch?v=1F_OgqRuSdI&amp;list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

YOU CAN ALSO WATCH THE VIDEOS WITHOUT SIGNING UP FOR THE COURSE. All of the videos on the course webpage have ""preview"" turned on. Scroll down to find and click ""Expand All Sections"" and then click the preview link. You won't have access to the forums and other materials, but you can watch the videos.

**NOTE: Be sure to BUY the course for $0, and not sign up for Udemy's subscription plan. The subscription plan is free for the first seven days and then they charge you. It's selected by default. If you are on a laptop and can't click the BUY checkbox, try shrinking the browser window. Some have reported it works in mobile view.**

Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.

Some people in India and South Africa get a **""The coupon has exceeded it's maximum possible redemptions""** error message. [Udemy advises that you contact their support if you have difficulty applying coupon codes, so click here to go to the contact form.](https://support.udemy.com/hc/en-us/requests/new?type=student) If you have a VPN service, try to sign up from a North American or European proxy.

**I'm also working on another Udemy course** that follows my recent book ""Beyond the Basic Stuff with Python"". So far I have [the first 15 of the planned 56 videos done. You can watch them for free on YouTube.](https://www.youtube.com/watch?v=kSrnLbioN6w&amp;list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&amp;index=1)

Side note: My latest book, Python Programming Exercises Gently Explained is a set of 42 programming exercises for beginners [for free](https://inventwithpython.com/pythongently/) or as a [99 cent ebook](https://www.amazon.com/Python-Programming-Exercises-Gently-Explained-ebook/dp/B0BGYJ7G6T/).


**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",0.87,176,0,176,2023-04-05T20:30:50Z,12cn56l,t3
270,Python,StrictPython,"[SamG101-Developer/Strict-Python: Strict Python (github.com)](https://github.com/SamG101-Developer/Strict-Python)

&amp;#x200B;

Strict-Python

Strict Python is a small libary that enforces several concepts from other language, reducing the flexibility and ensuring better safety in certain areas of Python code. There's still quite a bit of work to be done; see the ReadMe

&amp;#x200B;

Functionality

&amp;#x200B;

\- Type checking on function parameters -&gt; checked against annotations

\- Type checking on function return value -&gt; checked against annotation

\- Type checking on attributes being set -&gt; checked against annotation

\- All parameters and return types are required

\- All attributes must be declared at the top of the class with their associated type

\- Attributes defined as a typing.Final\[T\] are not modifiable, except from the constructor

\- Access modifiers are enforced via naming conventions (\_protected, \_\_private)

\- Can declare friend functions, classes or methods to allow access to non-public members

&amp;#x200B;

Please add issues if you come across any :)

&amp;#x200B;

EDIT:

To use it, just inherit ""base\_object"" into your class, and define friends with \_\_friends\_\_ = {...} - the friends are strings of class names etc, README has more detail",0.71,3,0,3,2023-04-05T19:52:23Z,12clzsx,t3
271,Python,Develop and Invoke AWS Lambda Functions programmatically.,,0.89,13,0,13,2023-04-05T18:19:33Z,12cjaoa,t3
272,Python,How I was able to identify 3 bottlenecks in WebAssembly python bindings,"[in this github comment](https://github.com/bytecodealliance/wasmtime-py/issues/96#issuecomment-1497336349) I was able to identify 3 types of bottlenecks

- passing large data (ex. image)
- calling wasm from python loop
- calling python from wasm loop

the first two was resolved.
basically for the first one, the time was proportional to the data size,
for the 2nd and 3rd ones there was a constant time regardless of data size (ex. 40ms is wasted calculating gcd of two integers)

using [cProfile](https://docs.python.org/3/library/profile.html) I was able to spot hot places where a loop of 1k iterations did 7k isinstance ..etc
by looking and number of calls and cumulative time I was able to solve the second one

the 3rd bottleneck is not yet.",0.65,4,0,4,2023-04-05T18:06:54Z,12ciyi7,t3
273,Python,GitHub - blipk/pysh: bash in python,,0.85,32,0,32,2023-04-05T17:25:33Z,12chv0i,t3
274,Python,Step-by-step tutorial on Web Scraping with Python with code snippets,,0.91,320,0,320,2023-04-05T16:40:38Z,12cgplg,t3
275,Python,I re-implemented JupyterHub the Kubernetes way,"[https://ouba.online/blog/2023/3/8/you\_probably\_dont\_need\_jupyterhub\_on\_kubernetes/post](https://ouba.online/blog/2023/3/8/you_probably_dont_need_jupyterhub_on_kubernetes/post)

[https://github.com/machine424/notebook-on-kube](https://github.com/machine424/notebook-on-kube)",0.84,11,0,11,2023-04-05T16:03:16Z,12cftw9,t3
276,Python,chatGPT can never replace programmers,,0.26,0,0,0,2023-04-05T15:42:56Z,12cfdal,t3
277,Python,Bobtail static files - A little Python http framework,"https://preview.redd.it/7g67xphw91sa1.png?width=1626&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=56472f2b5d5c07d0046307fe7b8a403c9096412a

Bobtail v0.0.14 now serves static files - [https://github.com/joegasewicz/bobtail](https://github.com/joegasewicz/bobtail)",0.87,39,0,39,2023-04-05T14:49:40Z,12cecr3,t3
278,Python,A thought on getting rid of the GIL in CPython,"I'm sorry if this is too naive.

As I understand, the biggest roadblock to get rid of the GIL in the CPython implementation is that turning to atomic refcounting hurts performance of single thread programs.

GIL is basically GRL(Global Refcount Lock) + other things. To address the GRL aspect of it, how about this:

Put two refcount integers in the PyObject struct:

1. A non-atomic reference count, as currently used. This is incremented/decremented while holding the GRL, as today.

2. An atomic reference count, incremented/decremented atomically without acquiring the GRL.

An object goes die if both refcounts reach zero.

Each thread has a thread local flag to indicate its preferred reference count method:

1. The default is the existing non-atomic approach, respecting the GRL.

2. The flag can be toggled to use the atomic reference count instead, allowing the thread to ignore the GRL.

If no one toggles the flag, behavior is unchanged. Toggling the flag dynamically switches between the two modes.

The two reference count methods have the same semantics, just differing in performance. So the flag only needs to be checked occasionally, e.g. once per function in the bytecode interpreter and C extensions. Old C extensions might still work without changing the source code.

This provides two benefits:

1. For single thread programs, the GRL is respected and contention is low, preserving performance.

2. Individual threads can opt out of the GRL when they need to, increasing parallelism.

User code can change the flag dynamically to affect the thread's overall refcount flavor.

C extension may also select modes at will, in spite of the flag.",0.47,0,0,0,2023-04-05T12:24:48Z,12cbeqh,t3
279,Python,üéôÔ∏è Introducing an Impressive Streamlit Audio Recorder Custom Component for Python Enthusiasts! üöÄ Star the Repo &amp; Enhance Your Apps! üéµ,"Hello Pythonistas! üëã

I recently came across a fantastic custom component for Streamlit, developed by Stefan Rummer, that I believe will be an excellent addition to your Python-powered projects. It's called streamlit_audio_recorder, and though it's a work in progress, it's already highly functional and useful! Take a look at the GitHub repo here: https://github.com/stefanrmmr/streamlit_audio_recorder ‚≠êÔ∏è

üî• Features &amp; Outlook:

Manage access to your microphone via the browser's Media-API üéôÔ∏è
Record, playback, and revert audio-captures within the Streamlit app üîä
Download the final recording to your local system (WAV, 16 bit, 44.1 kHz) üì•
Directly return audio recording-data to Python backend! (arrayBuffer) üêç
‚ö°Ô∏è What's New:

Reduced repo size by removal of redundant node-modules! (393Mb --&gt; 70Mb) üöÄ
Simplified SETUP TUTORIAL, that will get you to record audio within no time! üéâ
This custom component unlocks countless possibilities for your Python-based projects, from data collection to speech recognition and natural language processing. Just follow the step-by-step Component Setup in the README to integrate it into your Streamlit apps.

Please consider leaving a star ‚òÜ on the GitHub repo to show your support and help this amazing custom component gain more visibility and traction in the Python and Streamlit communities! üôå

If you have any questions or suggestions, don't hesitate to reach out to Stefan! üì¨

Happy audio recording and Python coding, everyone! üé∂üêç",0.5,0,0,0,2023-04-05T08:58:44Z,12c6ww6,t3
280,Python,Simple Beginnings,"Hi all.  New to the scene thanks to a work program paying out a yearly stipend for tuition that lead me to taking an introductory course to Python.

Nothing really big to share just finished whipping up a basic frame with a button that will record the current time in a text file.  This will replace my current format of tracking my working hours via spreadsheet.

Compared to the vast majority of posts here this is small fish.  It is a basic gray screen with a basic button and a time read out, but to me it is a step into a new world.

I'm happy to be here and happy to be lurking this thread gobbling up any info I can understand lol.

Just wanted to share my excitement.  Happy coding :-)",0.76,11,0,11,2023-04-05T06:25:01Z,12c2zw2,t3
281,Python,Wednesday Daily Thread: Beginner questions,"New to Python and have questions? Use this thread to ask anything about Python, there are no bad questions!

This thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response.",0.81,3,0,3,2023-04-05T05:30:15Z,12c1jky,t3
282,Python,Be confident in your requirements list with bonded,"Bonded is a linter that alerts on both missing and unused requirements.

Bonded checks for project requirements that are not actually used in the project and for imports that don't map back to any requirement explicitly declared as a dependency. By verifying both relationships, projects can be assured that all requirements necessary at runtime are properly captured as direct dependencies and not available only because of an indirect relationship. Projects can also be assured that the requirements that are declared are all necessary to the project.

The results I am getting from checking real code bases is looking really promising. But I won't know how good of a tool it is until I am not the only one using it. I would like to publish the first stable release but I need your help! Try it out and let me know how it does. Tell me what I missed or what's hard to use. I will help any project in getting the tool working for them.

[https://pypi.org/project/bonded/](https://pypi.org/project/bonded/)",0.86,15,0,15,2023-04-05T03:49:39Z,12byqwg,t3
283,Python,Time Complexity and Big O Notation,"Time complexity is an important concept in computer science that refers to the amount of time it takes for an algorithm or program to run as a function of its input size. In this tutorial, I will explore the time complexity of loops, nested loops, if-else statements, and different Python data structures, and discuss which ones are optimized for various use cases.

## Time Complexity of Loops

Loops are a common programming construct used to repeat a block of code a certain number of times. The time complexity of a loop depends on the number of times the loop runs as a function of its input size.

### Example: Simple for loop

    for i in range(n):
        print(i)

The time complexity of this loop is O(n), where n is the input size. This is because the loop runs exactly n times, printing the value of i each time.

### Example: Nested for loops

    for i in range(n):
	    for j in range(n):
	        print(i, j)

The time complexity of this loop is O(n^2), because the loop runs n^2 times. This is because, for each value of i, the inner loop runs n times, so the total number of iterations is n * n = n^2.

## Time Complexity of If-Else Statements

If-else statements are used to conditionally execute code based on a given condition. The time complexity of an if-else statement is typically O(1), as the code will only execute once regardless of the input size.

### Example: Simple if-else statement

	if x &gt; 0:
	    print(""x is positive"")
	else:
	    print(""x is non-positive"")

The time complexity of this if-else statement is O(1), as the code inside the if or else block will only execute once.

### Example: Nested if-else statements
	if x &gt; 0:
	    if y &gt; 0:
	        print(""x and y are positive"")
	    else:
	        print(""x is positive, y is non-positive"")
	else:
	    print(""x is non-positive"")

The time complexity of this nested if-else statement is still O(1), as the code inside the if or else blocks will only execute once.

## Time Complexity of Python Data Structures

Different Python data structures have different time complexities for common operations such as accessing, inserting, and deleting elements.

### Lists

Lists are a common data structure in Python that can hold a sequence of elements. Lists are implemented as an array, and have the following time complexities:

-   Accessing an element by index: O(1)
-   Appending an element: O(1)
-   Inserting an element at a specific index: O(n)
-   Removing an element: O(n)
-   Sorting the list: O(n log n)

		my_list = [1, 2, 3, 4, 5]
		
		print(my_list[0])     # O(1)
		my_list.append(6)     # O(1)	
		my_list.insert(2, 7)  # O(n)
		my_list.remove(3)     # O(n)
		my_list.sort()        # O(n log n)

### Tuples

Tuples are similar to lists but are immutable (i.e. cannot be changed after creation). Tuples have the following time complexities:

-   Accessing an element by index: O(1)

		my_tuple = (1, 2, 3, 4, 5)
		print(my_tuple[0])  # O(1)

### Dictionaries

Dictionaries are data structure that maps keys to values. Dictionaries are implemented as a hash table, and have the following time complexities:

-   Accessing a value by key: O(1)
-   Inserting a new key-value pair: O(1)
-   Deleting a key-value pair: O(1)

		my_dict = {""apple"": 1, ""banana"": 2, ""orange"": 3} 
		  
		print(my_dict[""banana""])  # O(1)
		my_dict[""grape""] = 4      # O(1)
		del my_dict[""orange""]     # O(1)

### Sets

Sets are data structure that holds a collection of unique elements. Sets are implemented as a hash table, and have the following time complexities:

-   Adding an element: O(1)
-   Checking if an element is in the set: O(1)
-   Removing an element: O(1)

		my_set = {1, 2, 3, 4, 5}
		
		my_set.add(6)       # O(1)
		print(2 in my_set)  # O(1)
		my_set.remove(3)    # O(1)

### Which Data Structure to Use

Choosing the right data structure for a given problem depends on the specific requirements of the problem and the expected input size. Generally, if quick access or modification of elements is required, lists and dictionaries are good choices. If the uniqueness of elements is required, sets should be used. If the elements cannot be changed after creation, tuples should be used.

## Conclusion

Understanding time complexity is important for designing efficient algorithms and choosing appropriate data structures for different use cases. By knowing the time complexity of loops, if-else statements, and Python data structures, we can make informed decisions about which algorithms and data structures to use to optimize performance.",0.4,0,0,0,2023-04-05T02:42:15Z,12bwrfs,t3
284,Python,Performant csv parsers,"what's the fastest and/or most memory efficient csv parser in Python? datatable maybe?

looking for some candidates to benchmark against",0.72,3,0,3,2023-04-05T01:04:56Z,12btus6,t3
285,Python,I made a program to download / back up all of your saved Reddit content,"**Big update: the code now supports downloading ALL saved posts from your account, ever. Apparently, you can request this data from Reddit. See the repo for details**

I have a lot of saved pictures/images/videos, but Reddit only retains the last 1000 saved posts. So over the years, I‚Äôve lost a lot of content. There are some software out there that download your saved posts, but I couldn‚Äôt find one that handled the file formats I wanted and also took the already-downloaded posts into account. Therefore, I made a program to do just that. It works pretty well for images and videos.

This is my first real/usable Python project. It‚Äôs not too complicated but it took me longer than expected to figure out some things. Please try it out and let me know what you think!

Also, it can‚Äôt handle text-only posts or comments just yet. Requests only returns the HTML but I guess the page content is loaded by JavaScript.

https://github.com/aeluro1/geddit/",0.96,178,0,178,2023-04-05T00:03:02Z,12bs0xr,t3
286,Python,What projects use ebooklib,"I'm trying to use this library, but I'm kind of having trouble to get what I want.
So I'm looking for other projects using this lib to get use examples.
Thanks you all.",0.5,0,0,0,2023-04-04T21:12:18Z,12bmy0q,t3
287,Python,Analysing the emotion timeline of the Enron scandal through their internal emails in Python,"I've been playing around with the Enron dataset in Python. Thought it would be interesting to you folks.

https://reddit.com/link/12bl2uj/video/g2m72xcspvra1/player

&amp;#x200B;

Mainly used pandas, using the dataset of internal Enron emails from their collapse that was released during criminal proceedings.

Also used the NRC Emotion Lexicon.

Blog: [https://www.superflows.ai/blog/enron-sentiment](https://www.superflows.ai/blog/enron-sentiment)

&amp;#x200B;

Edit: sent the wrong repo! 

GitHub repo: [https://github.com/SuperflowsAI/enron-sentiment-analysis](https://github.com/SuperflowsAI/enron-sentiment-analysis)",0.96,278,0,278,2023-04-04T20:07:50Z,12bl2uj,t3
288,Python,Favorite/best PyCharm plugins?,"What are everyone's favorite or must-have PyCharm plugins?

For me, I've been really enjoying the [`Ruff` plugin](https://plugins.jetbrains.com/plugin/20574-ruff). I like have the code highlights on for suggestions.",0.96,120,0,120,2023-04-04T19:56:49Z,12bkrqg,t3
289,Python,Inspect interactively any object in Colab,"&amp;#x200B;

https://i.redd.it/9kv2j0u1bvra1.gif

To help debugging or exploring an object structure, [ecolab.inspect](https://github.com/google/etils/blob/main/etils/ecolab/README.md) allow to inspect arbitrary Python objects interactively (similar to the Chrome console inspector) : 

Demo: [https://www.youtube.com/watch?v=MFbb5wZlYvE](https://www.youtube.com/watch?v=MFbb5wZlYvE)

Usage:

    !pip install --upgrade etils[ecolab]
    
    from etils import ecolab
    
    ecolab.auto_inspect()  # Add `INSPECT` button on all cell outputs
    
    ecolab.inspect(obj)  # Inspect any object anywhere in our code (e.g. `locals()`)

&amp;#x200B;

Documentation: [https://github.com/google/etils/blob/main/etils/ecolab/README.md](https://github.com/google/etils/blob/main/etils/ecolab/README.md)

Code: [https://github.com/google/etils](https://github.com/google/etils)",0.72,3,0,3,2023-04-04T18:53:22Z,12bj27u,t3
290,Python,Flask app with PostgreSQL (CRUD operations),,0.5,0,0,0,2023-04-04T18:51:50Z,12bj0qj,t3
291,Python,Textual 0.18.0 adds an API for managing concurrent workers,,0.84,69,0,69,2023-04-04T18:47:56Z,12biwwo,t3
292,Python,RedditWarp: A comprehensive and type-complete library for interacting with the Reddit API,"[//]: # (What do narwals do at midnight?)
[//]: # (Be the first to comment the correct word on this post, and I‚Äôll be proud.)

* üêô **[GitHub](https://github.com/Pyprohly/redditwarp)**  
* üì¶ **[PyPI](https://pypi.org/p/redditwarp/)**  
* üìö **[ReadTheDocs](https://redditwarp.readthedocs.io/)**

-----

Hello r/Python!

I‚Äôm happy to announce the release of a new wrapper library for the Reddit API called *RedditWarp*. It‚Äôs a package that‚Äôs type-complete, feature-rich, and ready to be used to create robust Reddit bots and programs.

RedditWarp has been built from scratch. It offers a well-designed programming interface that handles the complexities of the Reddit API in a way that is easy to remember, highly discoverable, and reduces cognitive load. The library is static-type conscious, meaning that you can develop Reddit bots and programs in a type-safe manner.

This is a full release. It has been something I‚Äôve been working on for the past 3 years, and I decided to hold off on the release until I felt it was fully developed. Although the repository has been up for some time, the project has not been widely publicised or discovered, so everyone is on equal starting ground today when it comes to learning about this library.

The rest of this post will be a quick tour of the library. It‚Äôs a useful read if you don‚Äôt intend on actually using it, since more extensive documentation is available. I know a lot of new package announcements in r/Python aren‚Äôt relevant to everyone so I‚Äôve selected a few topics to showcase that I hope are applicable from a more general programming perspective.

-----

## RedditWarp library tour

### A quick example

Here is a quick demo of what using the RedditWarp library looks like. The code snippet below lists 5 submissions from the Reddit front page. You can do `pip install redditwarp` and try out this code right now.

	import redditwarp.SYNC

	client = redditwarp.SYNC.Client()

	it = client.p.front.pull.hot(5)
	l = list(it)
	for subm in l:
	    print(""r/{0.subreddit.name} | {0.id36}+ ^{0.score} | {0.title!r:.80}"".format(subm))

### Dual sync and async IO support

The most common approach for libraries to support both sync and async IO is to create asynchronous versions of classes with an `Async` prefix and having async methods with the the same names as the non-async version class. Another option is to have just one class with both async and non-async methods side by side, with the async version suffixed with `_async`.

To support both sync and async IO worlds, I‚Äôve adopted a different approach where the IO world to be used is determined by the import location. This makes it easy to switch the synchronicity of your program by swapping out the imports. In general, sync components are contained in modules suffixed with ‚Äò`SYNC`‚Äô, and async components are in modules suffixed with ‚Äò`ASYNC`‚Äô.

The following is an example of a program that monitors inbox messages. Notice the `SYNC` word in all the imports. To convert this program to an asynchronous one, all you have to do is replace `SYNC` with `ASYNC`, put the `async` and `await` keywords in the right places, and then wrap `main()` in `asyncio.run()`.

	#!/usr/bin/env python
	from __future__ import annotations
	from typing import TYPE_CHECKING
	if TYPE_CHECKING:
	    from redditwarp.models.message_SYNC import MailboxMessage

	import redditwarp.SYNC
	from redditwarp.models.message_SYNC import ComposedMessage
	from redditwarp.streaming.makers.message_SYNC import create_inbox_message_stream
	from redditwarp.streaming.SYNC import flow

	def main() -&gt; None:
	    client = redditwarp.SYNC.Client()
	    with client:
	        inbox_message_stream = create_inbox_message_stream(client)

	        @inbox_message_stream.output.attach
	        def _(mesg: MailboxMessage) -&gt; None:
	            if isinstance(mesg, ComposedMessage):
	                if mesg.subject.startswith('!ping'):
	                    client.p.message.send(
	                        mesg.author_name,
	                        're: ' + mesg.subject,
	                        'pong',
	                    )

	        flow(inbox_message_stream)

	main()

&amp;thinsp;^(More info: &lt;https://redditwarp.readthedocs.io/en/latest/user-guide/the-basics.html#two-io-worlds&gt;)

### HTTP components

RedditWarp is HTTP transport library agnostic and includes wrappers to support multiple HTTP libraries. If no HTTP library is available it will fallback to using Python‚Äôs `urllib.request` module or raise `ModuleNotFoundError` when you attempt to instantiate a client instance in async world.

For simple use cases, you can use these HTTP components in your application to not have it depend on any particular HTTP library.

	import json

	from redditwarp.http.transport.reg_SYNC import new_connector
	from redditwarp.http.http_client_SYNC import HTTPClient

	http = HTTPClient(new_connector())

	resp = http.request('POST', 'http://httpbin.org/post', json={'a': [1, 2, 3]})
	resp.ensure_successful_status()
	json_data = json.loads(resp.data)
	print(json_data)

&amp;thinsp;^(More info: &lt;https://redditwarp.readthedocs.io/en/latest/user-guide/http-components.html&gt;)

### Comment tree traversals

Formal tree node data structures are used to model submission comment trees. General tree nodes are defined as a data class with a `value` and `children` field. Submission comment tree nodes extend the general tree node data structure and include a new field: `more`. This object, if not `None`, is a callable that makes a network request and returns another tree node that is to be treated as a continuation of the original `children` list.

Writing your own traversal algorithm is necessary to navigate through comment trees. RedditWarp deliberately does not include any built-in tree traversal methods to avoid making assumptions about the user‚Äôs needs.

The `traversal()` function in the following program demonstrates a recursive DFS traversal.

	#!/usr/bin/env python
	from __future__ import annotations
	from typing import TYPE_CHECKING, Iterator
	if TYPE_CHECKING:
	    from redditwarp.models.comment_tree_SYNC import CommentSubtreeTreeNode

	import redditwarp.SYNC
	from redditwarp.models.comment_SYNC import Comment

	def traversal(node: CommentSubtreeTreeNode[object]) -&gt; Iterator[tuple[int, Comment]]:
	    def traverse(root: CommentSubtreeTreeNode[object], level: int = 0) -&gt; Iterator[tuple[int, Comment]]:
	        value = root.value
	        if isinstance(value, Comment):
	            yield (level, value)

	        for child in root.children:
	            yield from traverse(child, level + 1)

	        if root.more:
	            yield from traverse(root.more(), level)

	    return traverse(node)

	client = redditwarp.SYNC.Client()
	tree_node = client.p.comment_tree.fetch(1537771841)
	for depth, comment in traversal(tree_node):
	    print(depth, comment.author_display_name, repr(comment.body)[:10])

The recursive DFS algorithm works well, but Python‚Äôs call stack limit of 1000 levels makes it potentially fragile. An iterative version may be a better choice, but creating an algorithm that is as neat as the recursive one can be challenging due to the need to handle the ‚Äòmore‚Äô callables. In a naive iterative version, the ‚Äòmore‚Äô callables may be evaluated in the wrong order, resulting in output that looks jittery and slow for scripts that display comment trees.

Here is a naive iterative version of the recursive DFS traversal shown above.

	from collections.abc import MutableSequence
	from collections import deque

	def traversal(node: CommentSubtreeTreeNode[object]) -&gt; Iterator[tuple[int, Comment]]:
	    stack: MutableSequence[CommentSubtreeTreeNode[object]] = deque([node])
	    levels = deque([0])
	    while stack:
	        node = stack.pop()
	        level = levels.pop()

	        value = node.value
	        if isinstance(value, Comment):
	            yield (level, value)

	        if node.more:
	            stack.append(node.more())
	            levels.append(level)

	        stack.extend(reversed(node.children))
	        levels.extend([level + 1] * len(node.children))

The problem is that the ‚Äòmore‚Äô callables are evaluated as soon as the nodes are encountered, whereas in the recursive version, the ‚Äòmore‚Äô callable of the innermost nodes are evaluated first, which should be the correct order of evaluation.

Here is the ‚Äòfixed‚Äô version.

	from collections.abc import MutableSequence, Callable
	from collections import deque
	from redditwarp.models.comment_tree_SYNC import MoreCommentsTreeNode

	def traversal(node: CommentSubtreeTreeNode[object]) -&gt; Iterator[tuple[int, Comment]]:
	    stack: MutableSequence[bool] = deque([True])
	    node_stack: MutableSequence[CommentSubtreeTreeNode[object]] = deque([node])
	    more_stack: MutableSequence[Callable[[], MoreCommentsTreeNode]] = deque()
	    levels = deque([0])
	    while stack:
	        if stack.pop():
	            node = node_stack.pop()
	        else:
	            node = more_stack.pop()()
	        level = levels.pop()

	        value = node.value
	        if isinstance(value, Comment):
	            yield (level, value)

	        if node.more:
	            stack.append(False)
	            more_stack.append(node.more)
	            levels.append(level)

	        stack.extend([True] * len(node.children))
	        node_stack.extend(reversed(node.children))
	        levels.extend([level + 1] * len(node.children))

It‚Äôs more complex. I found it weird and unfortunate how the iterative version has to be so much uglier than the recursive one because of the handling of the ‚Äòmore‚Äô field in the comment tree nodes. I hope I‚Äôm not missing something‚Ä¶.

&amp;thinsp;^(More info: &lt;https://redditwarp.readthedocs.io/en/latest/user-guide/comment-trees.html&gt;)

-----

If you wish to continue reading about this new library, see my [announcement post](https://www.reddit.com/r/redditdev/comments/12biw65/redditwarp_the_nextlevel_reddit_api_library_for/) at r/redditdev.

Thanks for reading and happy coding!",0.92,45,0,45,2023-04-04T18:47:26Z,12biwcy,t3
293,Python,Pydantic V2 Pre Release,,0.9,49,0,49,2023-04-04T18:29:50Z,12bif2z,t3
294,Python,Little guidance of a python newbie,"Hi there,

I am new to python and need some advice in the right direction. I dont need solutions here. I am just looking for some advices and right directions.

I am receiving a couple of \*.txt files on a webserver every day at different times. I would like to create an app/gui which notifies me about the new files.

Functionalities of the app:  
1. Observe the webserver folder, list all files and notify me about new incoming file (live). How to create an ""webserver folder observer""?  
2. Process the file and show the content of the file.  
3. By clicking on one of the files in the list (see 1.), create a Database-Query and show the results. All files containign an ID. Depending on that ID, I would like to rquest some data of the Database.

What is th ebest way to implement such app?

Do I need to use a gui framework? Is it possible just to use a browser as a gui interface?

Greetings",0.5,0,0,0,2023-04-04T18:24:49Z,12biago,t3
295,Python,Python 2 to 3 work around,"This is an issue someone I know mentioned they need to look into that‚Äôs just bugging me/got me curious for some reason.

A server won‚Äôt currently run Python 2 but there‚Äôs a program that using Python 2 libraries.

If you alias Python=python3
Or use system wide python-is-python3 then it would fail on syntax differences 

Is there anything that could act as an intermediate and alias say a reference to part of a python 2 library to the equivalent in python 3 like from 
from stringio import stringio 
To 
from io import stringio 

Or is the only solution to get it running python 2 via Docker or something?",0.67,4,0,4,2023-04-04T18:17:28Z,12bi3jx,t3
296,Python,Python's del: Remove References From Scopes and Containers ‚Äì Real Python,,0.64,4,0,4,2023-04-04T18:14:48Z,12bi11n,t3
297,Python,üëâ New Awesome Polars release! üöÄ What's new in #Polars? Let's find out!,,0.67,13,0,13,2023-04-04T14:44:41Z,12bdh3v,t3
298,Python,Pandas 2.0.0,,0.62,3,0,3,2023-04-04T13:23:43Z,12bc9qg,t3
299,Python,"Easy python module for understanding. recently I have been learning the Oops concepts in python, but I don't feel satisfied in applying those to actual scenarios. can any one please suggest any already developed python module so that I can see the actual Oops concepts involved while development.",I'm sorry for using a short term for object oriented programming.,0.79,7,0,7,2023-04-04T13:04:46Z,12bbzpe,t3
